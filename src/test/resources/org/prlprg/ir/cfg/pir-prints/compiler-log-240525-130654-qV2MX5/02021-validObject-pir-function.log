
┌──────────────────────────────────────────────────────────────────────────────┐
│ validObject[0x55de2f03e050]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2                     │
│ Properties:                                                                  │
├────── Final PIR Version
validObject[0x55de2f03e050]
BB0
  val?^           %0.0  = LdArg                    0
  env             e0.1  = MkEnv              l     object=%0.0, test(miss)=false, complete(miss)=false, parent=<env 0x55de28b56378>, context 1
  cls             %0.2  = MkCls                    anyStrings, e0.1
  val?^ | miss    %0.3  = LdVar              eR    class, <env 0x55de28b56378>
  lgl$#-          %0.4  = Identical                <blt class>, %0.3   <true>
  void                    Branch                   %0.4 -> BB291 (if true) | BB292 (if false)
BB291   <- [0]
  val?            %291.0 = Force!<lazy>       !vr   %0.0,    <(cls|other)>
  val?            %291.1 = CallBuiltin        !v    class(%291.0) e0.1   <str$+>
  void                    StVar              lW    Class, %291.1, e0.1
  val?^ | miss    %291.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %291.4 = Identical                %291.3, function(Class, where=topenv(parent.frame()), |...>
  void                    Branch                   %291.4 -> BB293 (if true) | BB294 (if false)
BB292   <- [0]
  fs              %292.0 = FrameState         R     0x55de34de0470+0: [], env=e0.1
  void                    Deopt              !v    %292.0, DeadBranchReached@0x55de34c80830[Test#0], %0.4
BB293   <- [291]
  prom-           %293.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p2 (!refl), e0.1
  val?            %293.1 = StaticCall         !v    getClassDef[0x55de2be46250](%293.0) e0.1   <other>
  void                    StVar              lW    classDef, %293.1, e0.1
  val?^ | miss    %293.3 = LdVar              eR    .classEnv, e0.1
  lgl$#-          %293.4 = Identical                %293.3, function(Class, default=.requirePackage("metho|...>
  void                    Branch                   %293.4 -> BB295 (if true) | BB296 (if false)
BB294   <- [291]
  fs              %294.0 = FrameState         R     0x55de34de0470+105: [], env=e0.1
  void                    Deopt              !v    %294.0, CallTarget@0x55de34c80830[Call#1], %291.3   !
BB295   <- [293]
  prom-           %295.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p3 (!refl), e0.1
  val?            %295.1 = StaticCall         !v    .classEnv[0x55de2d6f71a0](%295.0) e0.1   <env->
  void                    StVar              lW    where, %295.1, e0.1
  void                    StVar              lW    anyStrings, %0.2, e0.1
  val?^ | miss    %295.4 = LdVar              eR    character, e0.1
  lgl$#-          %295.5 = Identical                %295.4, function(length=0L) <(rir::DispatchTable*)0x55|...>
  void                    Branch                   %295.5 -> BB297 (if true) | BB298 (if false)
BB296   <- [293]
  fs              %296.0 = FrameState         R     0x55de34de0470+151: [], env=e0.1
  void                    Deopt              !v    %296.0, CallTarget@0x55de34c80830[Call#2], %293.3   !
BB297   <- [295]
  str-            %297.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  void                    StVar              lW    errors, %297.0, e0.1
  (cls|spec|blt)  %297.2 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %297.3 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p4, e0.1
  prom-           %297.4 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p5, e0.1
  val?            %297.5 = Call               !v    %297.2(%297.3, %297.4) e0.1   <vec+>
  void                    StVar              lW    slotTypes, %297.5, e0.1
  lgl$#-          %297.7 = IsType                   %297.5 isA val?+
  val?^ | miss    %297.8 = LdVar              eR    names, e0.1
  lgl$#-          %297.9 = Identical                <blt names>, %297.8   <true>
  void                    Branch                   %297.9 -> BB299 (if true) | BB300 (if false)
BB298   <- [295]
  fs              %298.0 = FrameState         R     0x55de34de0470+222: [], env=e0.1
  void                    Deopt              !v    %298.0, CallTarget@0x55de34c80830[Call#3], %295.4   !
BB299   <- [297]
  val             %299.0 = ChkMissing         e     %297.5
  void                    Branch                   %297.7 -> BB301 (if true) | BB302 (if false)
BB300   <- [297]
  void                    Nop                !     
  lgl$#-          %300.1 = %297.9
  dr              %300.2 = DeadBranchReached@0x55de34c80830[Test#1]
  goto BB9
BB301   <- [299]
  val?+           %301.0 = CastType           d     dn %297.5   <vec+>
  val+            %301.1 = CallSafeBuiltin    wed   names(%301.0)    <str->
  void                    StVar              lW    slotNames, %301.1, e0.1
  val?^ | miss    %301.3 = LdVar              eR    c, e0.1
  lgl$#-          %301.4 = Identical                <blt c>, %301.3   <true>
  void                    Branch                   %301.4 -> BB303 (if true) | BB304 (if false)
BB302   <- [299]
  void                    Nop                !     
  val?            %302.1 = %297.5
  dr              %302.2 = Typecheck@0x55de34c80830[Type#10]
  goto BB9
BB9   <- [300, 302]
  val?^ | miss    %9.0  = Phi                      %300.1:BB300, %302.1:BB302
  val?^ | miss    %9.1  = %9.0
  dr              %9.2  = Phi                      %300.2:BB300, %302.2:BB302
  dr              %9.3  = %9.2
  fs              %9.4  = FrameState         R     0x55de34de0470+314: [], env=e0.1
  void                    Deopt              !v    %9.4, %9.3, %9.1   !
BB303   <- [301]
  val?^ | miss    %303.0 = LdVar              eR    attributes, e0.1
  lgl$#-          %303.1 = Identical                <blt attributes>, %303.0   <true>
  void                    Branch                   %303.1 -> BB305 (if true) | BB306 (if false)
BB304   <- [301]
  void                    Nop                !     
  lgl$#-          %304.1 = %301.4
  dr              %304.2 = DeadBranchReached@0x55de34c80830[Test#2]
  goto BB11
BB305   <- [303]
  val?^ | miss    %305.0 = LdVar              eR    object, e0.1
  val?            %305.1 = Force!<wrapped>    !v    %305.0, e0.1   <(cls|other)>
  val?            %305.2 = CallBuiltin        !v    attributes(%305.1) e0.1   <vec+>
  lgl$#-          %305.3 = IsType                   %305.2 isA val?+
  void                    Branch                   %305.3 -> BB307 (if true) | BB308 (if false)
BB306   <- [303]
  void                    Nop                !     
  lgl$#-          %306.1 = %303.1
  dr              %306.2 = DeadBranchReached@0x55de34c80830[Test#4]
  goto BB11
BB11   <- [304, 306]
  val?^ | miss    %11.0 = Phi                      %304.1:BB304, %306.1:BB306
  val?^ | miss    %11.1 = %11.0
  dr              %11.2 = Phi                      %304.2:BB304, %306.2:BB306
  dr              %11.3 = %11.2
  fs              %11.4 = FrameState         R     0x55de34de0470+419: [], env=e0.1
  void                    Deopt              !v    %11.4, %11.3, %11.1   !
BB307   <- [305]
  val?+           %307.0 = CastType           d     dn %305.2   <vec+>
  val+            %307.1 = CallSafeBuiltin    wed   names(%307.0)    <str->
  (list|sym|char|lgl|int|real|str|vec|complex|raw|cls|spec|blt|prom|_|code|env|ast|expressions|dots|other)+ %307.2 = CallSafeBuiltin    wed   c(".Data", ".S3Class", %307.1)    <str->
  void                    StVar              lW    attrNames, %307.2, e0.1
  val?^ | miss    %307.4 = LdVar              eR    anyNA, e0.1
  lgl$#-          %307.5 = Identical                <blt anyNA>, %307.4   <true>
  void                    Branch                   %307.5 -> BB309 (if true) | BB310 (if false)
BB308   <- [305]
  fs              %308.0 = FrameState         R     0x55de34de0470+652: [<blt c>, ".Data", ".S3Class", <blt names>, %305.2], env=e0.1
  void                    Deopt              !v    %308.0, Typecheck@0x55de34c80830[Type#21], %305.2   !
BB309   <- [307]
  val?^ | miss    %309.0 = LdVar              eR    match, e0.1
  lgl$#-          %309.1 = Identical                %309.0, function(x, table, nomatch=NA, incomparables=N|...>
  void                    Branch                   %309.1 -> BB311 (if true) | BB312 (if false)
BB310   <- [307]
  void                    Nop                !     
  lgl$#-          %310.1 = %307.5
  dr              %310.2 = DeadBranchReached@0x55de34c80830[Test#5]
  goto BB15
BB311   <- [309]
  val?^ | miss    %311.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %311.1 = IsType                   %311.0 isA val?~- | miss
  void                    Branch                   %311.1 -> BB313 (if true) | BB314 (if false)
BB312   <- [309]
  void                    Nop                !     
  val?^ | miss    %312.1 = %309.0
  dr              %312.2 = CallTarget@0x55de34c80830[Call#14]
  goto BB15
BB15   <- [310, 312, 314]
  val?^ | miss    %15.0 = Phi                      %310.1:BB310, %312.1:BB312, %314.1:BB314
  val?^ | miss    %15.1 = %15.0
  dr              %15.2 = Phi                      %310.2:BB310, %312.2:BB312, %314.2:BB314
  dr              %15.3 = %15.2
  fs              %15.4 = FrameState         R     0x55de34de0470+710: [], env=e0.1
  void                    Deopt              !v    %15.4, %15.3, %15.1   !
BB313   <- [311]
  val?~- | miss   %313.0 = CastType           d     dn %311.0
  val?-           %313.1 = Force!<value>            %313.0,    <str->
  val+            %313.2 = CallSafeBuiltin    wed   match(%313.1, %307.2, NA, nil)    <int->
  void                    StVar              lW    idx, %313.2, e0.1
  lgl$#-          %313.4 = IsType                   %313.2 isA int-
  void                    Branch                   %313.4 -> BB315 (if true) | BB316 (if false)
BB314   <- [311]
  void                    Nop                !     
  val?^ | miss    %314.1 = %311.0
  dr              %314.2 = Typecheck@0x55de34c80830[Type#27]
  goto BB15
BB315   <- [313]
  int-            %315.0 = CastType           d     dn %313.2
  val+            %315.1 = CallSafeBuiltin    wed   anyNA(%315.0)    <lgl$->
  lgl$#-          %315.2 = IsType                   %315.1 isA lgl$-
  void                    Branch                   %315.2 -> BB317 (if true) | BB318 (if false)
BB316   <- [313]
  fs              %316.0 = FrameState         R     0x55de34de0470+823: [<blt anyNA>, %313.2], env=e0.1
  void                    Deopt              !v    %316.0, Typecheck@0x55de34c80830[Type#29], %313.2   !
BB317   <- [315]
  lgl$-           %317.0 = CastType           d     dn %315.1
  lgl$#-          %317.1 = CheckTrueFalse     e     %317.0
  void                    Branch                   %317.1 -> BB285 (if true) | BB21 (if false)
BB318   <- [315]
  void                    Nop                !     
  val+            %318.1 = %315.1
  dr              %318.2 = Typecheck@0x55de34c80830[Type#30]
  goto BB19
BB285   <- [317]
  val?^ | miss    %285.0 = LdVar              eR    is.na, e0.1
  lgl$#-          %285.1 = Identical                <blt is.na>, %285.0   <@?>
  void                    Branch                   %285.1 -> BB287 (if true) | BB286 (if false)
BB21   <- [317]
  val?^ | miss    %21.0 = LdVar              eR    seq_along, e0.1
  lgl$#-          %21.1 = Identical                <blt seq_along>, %21.0   <true>
  void                    Branch                   %21.1 -> BB319 (if true) | BB320 (if false)
BB19   <- [318, 320, 322]
  val?^ | miss    %19.0 = Phi                      %318.1:BB318, %320.1:BB320, %322.1:BB322
  val?^ | miss    %19.1 = %19.0
  dr              %19.2 = Phi                      %318.2:BB318, %320.2:BB320, %322.2:BB322
  dr              %19.3 = %19.2
  fs              %19.4 = FrameState         R     0x55de34de0470+840: [%315.1], env=e0.1
  void                    Deopt              !v    %19.4, %19.3, %19.1   !
BB287   <- [285]
  lgl-            %287.0 = CallSafeBuiltin    wed   is.na(%315.0)    <val?_>
  void                    StVar              lW    badSlots, %287.0, e0.1
  val?^ | miss    %287.2 = LdVar              eR    c, e0.1
  lgl$#-          %287.3 = Identical                <blt c>, %287.2   <@?>
  void                    Branch                   %287.3 -> BB289 (if true) | BB288 (if false)
BB286   <- [285]
  (cls|spec|blt)  %286.0 = LdFun              !v    is.na, e0.1
  fs              %286.1 = FrameState         R     0x55de34de0470+884: [%286.0], env=e0.1
  void                    Deopt              !v    %286.1, DeadCall@0x55de34c80830[Call#15], %286.0   !
BB319   <- [21]
  val?^ | miss    %319.0 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %319.1 = IsType                   %319.0 isA val?~+ | miss
  void                    Branch                   %319.1 -> BB321 (if true) | BB322 (if false)
BB320   <- [21]
  void                    Nop                !     
  lgl$#-          %320.1 = %21.1
  dr              %320.2 = DeadBranchReached@0x55de34c80830[Test#12]
  goto BB19
BB289   <- [287]
  val?^ | miss    %289.0 = LdVar              eR    errors, e0.1
  val?            %289.1 = Force!             !v    %289.0, e0.1   <val?_>
  (cls|spec|blt)  %289.2 = LdFun              !v    paste, e0.1
  fs              %289.3 = FrameState         R     0x55de34de0470+1045: [<blt c>, %289.1, %289.2], env=e0.1
  void                    Deopt              !v    %289.3, DeadCall@0x55de34c80830[Call#19], %289.2   !
BB288   <- [287]
  (cls|spec|blt)  %288.0 = LdFun              !v    c, e0.1
  fs              %288.1 = FrameState         R     0x55de34de0470+989: [%288.0], env=e0.1
  void                    Deopt              !v    %288.1, DeadCall@0x55de34c80830[Call#16], %288.0   !
BB321   <- [319]
  val?~+ | miss   %321.0 = CastType           d     dn %319.0
  val?+           %321.1 = Force!<value>            %321.0,    <vec+>
  val?            %321.2 = CallBuiltin        !v    seq_along(%321.1) e0.1   <int->
  val?+           %321.3 = ToForSeq           e     %321.2
  int$-           %321.4 = Length                   %321.3
  int$-           %321.5 = Inc                      0L
  lgl$-           %321.6 = Lt                 d     %321.4, %321.5, elided   <false>
  lgl$#-          %321.7 = Identical                %321.6, true
  void                    Branch                   %321.7 -> BB324 (if true) | BB323 (if false)
BB322   <- [319]
  void                    Nop                !     
  val?^ | miss    %322.1 = %319.0
  dr              %322.2 = Typecheck@0x55de34c80830[Type#58]
  goto BB19
BB324   <- [321]
  fs              %324.0 = FrameState         R     0x55de34de0470+1356: [%321.2], env=e0.1
  void                    Deopt              !v    %324.0, DeadBranchReached@0x55de34c80830[Test#13], %321.7   !
BB323   <- [321]
  val?            %323.0 = Extract2_1D        wed   %321.3, %321.5, elided
  void                    StVar              lW    i, %323.0, e0.1
  val?^ | miss    %323.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %323.3 = IsType                   %323.2 isA val?~+ | miss
  void                    Branch                   %323.3 -> BB325 (if true) | BB326 (if false)
BB325   <- [323]
  val?~+ | miss   %325.0 = CastType           d     dn %323.2
  val?+           %325.1 = Force!<value>            %325.0,    <vec+>
  lgl$#-          %325.2 = IsType                   %325.1 isA val+   <true>
  void                    Branch                   %325.2 -> BB327 (if true) | BB328 (if false)
BB326   <- [323]
  void                    Nop                !     
  val?^ | miss    %326.1 = %323.2
  dr              %326.2 = Typecheck@0x55de34c80830[Type#60]
  goto BB24
BB327   <- [325]
  val             %327.0 = ChkMissing         e     %323.0
  lgl$#-          %327.1 = IsType                   %327.0 isA int$-
  void                    Branch                   %327.1 -> BB329 (if true) | BB330 (if false)
BB328   <- [325]
  void                    Nop                !     
  lgl$#-          %328.1 = %325.2
  dr              %328.2 = DeadBranchReached@0x55de34c80830[Test#14]
  goto BB24
BB24   <- [326, 328, 330]
  val?^ | miss    %24.0 = Phi                      %326.1:BB326, %328.1:BB328, %330.1:BB330
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %326.2:BB326, %328.2:BB328, %330.2:BB330
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x55de34de0470+1401: [%321.3, %321.4, %321.5], env=e0.1
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB329   <- [327]
  int$-           %329.0 = CastType           d     dn %327.0
  val?            %329.1 = Extract2_1D        wed   %325.1, %329.0, elided   <str$+>
  void                    StVar              lW    classi, %329.1, e0.1
  val?^ | miss    %329.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %329.4 = Identical                %329.3, function(Class, where=topenv(parent.frame()), |...>
  void                    Branch                   %329.4 -> BB331 (if true) | BB332 (if false)
BB330   <- [327]
  void                    Nop                !     
  val             %330.1 = %327.0
  dr              %330.2 = Typecheck@0x55de34c80830[Type#62]
  goto BB24
BB331   <- [329]
  prom-           %331.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p8 (!refl), e0.1
  prom-           %331.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p9, e0.1
  val?            %331.2 = StaticCall         !v    getClassDef[0x55de2baa8ec0](%331.0, %331.1) { 0 1n } e0.1   <other>
  lgl$-           %331.3 = Is                       %331.2, NULL
  void                    StVar              lW    classDefi, %331.2, e0.1
  val             %331.5 = ChkMissing         e     %331.2
  lgl$#-          %331.6 = CheckTrueFalse     e     %331.3
  void                    Branch                   %331.6 -> BB282 (if true) | BB30 (if false)
BB332   <- [329]
  fs              %332.0 = FrameState         R     0x55de34de0470+1476: [%321.3, %321.4, %321.5], env=e0.1
  void                    Deopt              !v    %332.0, CallTarget@0x55de34c80830[Call#22], %329.3   !
BB282   <- [331]
  val?^ | miss    %282.0 = LdVar              eR    c, e0.1
  lgl$#-          %282.1 = Identical                <blt c>, %282.0   <@?>
  void                    Branch                   %282.1 -> BB284 (if true) | BB283 (if false)
BB30   <- [331]
  val?^ | miss    %30.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %30.1 = IsType                   %30.0 isA val?~- | miss
  void                    Branch                   %30.1 -> BB333 (if true) | BB334 (if false)
BB284   <- [282]
  val?^ | miss    %284.0 = LdVar              eR    errors, e0.1
  val?            %284.1 = Force!             !v    %284.0, e0.1   <val?_>
  (cls|spec|blt)  %284.2 = LdFun              !v    paste0, e0.1
  fs              %284.3 = FrameState         R     0x55de34de0470+1649: [%321.3, %321.4, %321.5, <blt c>, %284.1, %284.2], env=e0.1
  void                    Deopt              !v    %284.3, DeadCall@0x55de34c80830[Call#25], %284.2   !
BB283   <- [282]
  (cls|spec|blt)  %283.0 = LdFun              !v    c, e0.1
  fs              %283.1 = FrameState         R     0x55de34de0470+1593: [%321.3, %321.4, %321.5, %283.0], env=e0.1
  void                    Deopt              !v    %283.1, DeadCall@0x55de34c80830[Call#23], %283.0   !
BB333   <- [30]
  val?~- | miss   %333.0 = CastType           d     dn %30.0
  val?-           %333.1 = Force!<value>            %333.0,    <str->
  lgl$#-          %333.2 = IsType                   %333.1 isA val+   <true>
  void                    Branch                   %333.2 -> BB335 (if true) | BB336 (if false)
BB334   <- [30]
  void                    Nop                !     
  val?^ | miss    %334.1 = %30.0
  dr              %334.2 = Typecheck@0x55de34c80830[Type#83]
  goto BB28
BB335   <- [333]
  val?^ | miss    %335.0 = LdVar              eR    i, e0.1
  lgl$#-          %335.1 = IsType                   %335.0 isA int$-
  void                    Branch                   %335.1 -> BB337 (if true) | BB338 (if false)
BB336   <- [333]
  void                    Nop                !     
  lgl$#-          %336.1 = %333.2
  dr              %336.2 = DeadBranchReached@0x55de34c80830[Test#18]
  goto BB28
BB28   <- [334, 336, 338]
  val?^ | miss    %28.0 = Phi                      %334.1:BB334, %336.1:BB336, %338.1:BB338
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %334.2:BB334, %336.2:BB336, %338.2:BB338
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x55de34de0470+1535: [%321.3, %321.4, %321.5], env=e0.1
  void                    Deopt              !v    %28.4, %28.3, %28.1   !
BB337   <- [335]
  int$-           %337.0 = CastType           d     dn %335.0
  val?            %337.1 = Extract2_1D        wed   %333.1, %337.0, elided   <str$->
  void                    StVar              lW    namei, %337.1, e0.1
  val?^ | miss    %337.3 = LdVar              eR    try, e0.1
  lgl$#-          %337.4 = Identical                %337.3, function(expr, silent=FALSE, outFile=getOption|...>
  void                    Branch                   %337.4 -> BB339 (if true) | BB340 (if false)
BB338   <- [335]
  void                    Nop                !     
  val?^ | miss    %338.1 = %335.0
  dr              %338.2 = Typecheck@0x55de34c80830[Type#85]
  goto BB28
BB339   <- [337]
  prom-           %339.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p10, e0.1
  ct              %339.1 = PushContext        lCL   %339.0, true, try(switch(namei, .S3Class=S3Class(object), sl|...>, function(expr, silent=FALSE, outFile=getOption|...>, e0.1
  val?^           %339.2 = CastType                 up %339.0
  env             e339.3 = MkEnv              l     expr=%339.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %339.4 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p65, e339.3
  val?^ | miss    %339.5 = CastType                 up %339.4
  void                    StArg              lW    outFile, %339.5, e339.3
  cls             %339.7 = MkCls                    try@Prom(3)0, e339.3
  prom-           %339.8 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p67, e339.3
  prom-           %339.9 = MkArg                    %339.7, validObject[0x55de2f03e050]_p68 (!refl), e339.3
  dots-           %339.10 = DotsList           l     error=%339.9
  val?            %339.11 = StaticCall         !v    tryCatch[0x55de32848e60](%339.8, %339.10) { 0 1n } e339.3   <val?+>
  val?            %339.12 = PopContext         C     %339.11, %339.1   <val?->
  void                    StVar              lW    sloti, %339.12, e0.1
  lgl$#-          %339.14 = IsType                   %339.12 isA val?-
  val?^ | miss    %339.15 = LdVar              eR    inherits, e0.1
  lgl$#-          %339.16 = Identical                %339.15, function(x, what, which=FALSE) <(rir::Dispatch|...>
  void                    Branch                   %339.16 -> BB341 (if true) | BB342 (if false)
BB340   <- [337]
  fs              %340.0 = FrameState         R     0x55de34de0470+1817: [%321.3, %321.4, %321.5], env=e0.1
  void                    Deopt              !v    %340.0, CallTarget@0x55de34c80830[Call#26], %337.3   !
BB341   <- [339]
  void                    Branch                   %339.14 -> BB343 (if true) | BB344 (if false)
BB342   <- [339]
  void                    Nop                !     
  val?^ | miss    %342.1 = %339.15
  dr              %342.2 = CallTarget@0x55de34c80830[Call#29]
  goto BB33
BB343   <- [341]
  val?-           %343.0 = CastType           d     dn %339.12
  val+            %343.1 = CallSafeBuiltin    wed   inherits(%343.0, "try-error", false)    <lgl$->
  lgl$#-          %343.2 = IsType                   %343.1 isA lgl$-
  void                    Branch                   %343.2 -> BB345 (if true) | BB346 (if false)
BB344   <- [341]
  void                    Nop                !     
  val?            %344.1 = %339.12
  dr              %344.2 = Typecheck@0x55de34c80830[Type#93]
  goto BB33
BB33   <- [342, 344]
  val?^ | miss    %33.0 = Phi                      %342.1:BB342, %344.1:BB344
  val?^ | miss    %33.1 = %33.0
  dr              %33.2 = Phi                      %342.2:BB342, %344.2:BB344
  dr              %33.3 = %33.2
  fs              %33.4 = FrameState         R     0x55de34de0470+1876: [%321.3, %321.4, %321.5], env=e0.1
  void                    Deopt              !v    %33.4, %33.3, %33.1   !
BB345   <- [343]
  lgl$-           %345.0 = CastType           d     dn %343.1
  lgl$#-          %345.1 = CheckTrueFalse     e     %345.0
  void                    Branch                   %345.1 -> BB277 (if true) | BB37 (if false)
BB346   <- [343]
  void                    Nop                !     
  val+            %346.1 = %343.1
  dr              %346.2 = Typecheck@0x55de34c80830[Type#95]
  goto BB35
BB277   <- [345]
  val?^ | miss    %277.0 = LdVar              eR    c, e0.1
  lgl$#-          %277.1 = Identical                <blt c>, %277.0   <@?>
  void                    Branch                   %277.1 -> BB279 (if true) | BB278 (if false)
BB37   <- [345]
  val?^ | miss    %37.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %37.1 = Identical                %37.0, function(class1, class2, ClassDef1=getClassDef|...>
  void                    Branch                   %37.1 -> BB347 (if true) | BB348 (if false)
BB35   <- [346, 348]
  val?^ | miss    %35.0 = Phi                      %346.1:BB346, %348.1:BB348
  val?^ | miss    %35.1 = %35.0
  dr              %35.2 = Phi                      %346.2:BB346, %348.2:BB348
  dr              %35.3 = %35.2
  prom-           %35.4 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p14 (!refl), e0.1
  val?^           %35.5 = CastType                 up %35.4
  fs              %35.6 = FrameState         R     0x55de34de0470+1913: [%321.3, %321.4, %321.5], env=e0.1
  env             e35.7 = (MkEnv)            l     which(miss)=false, what="try-error", x=%35.5, parent=R_BaseNamespace, context 0
  fs              %35.8 = FrameState         R     0x55de2a3e50a0+55: [%343.1], env=e35.7, next=%35.6
  void                    Deopt              !v    %35.8, %35.3, %35.1   !
BB279   <- [277]
  val?^ | miss    %279.0 = LdVar              eR    errors, e0.1
  val?            %279.1 = Force!             !v    %279.0, e0.1   <val?_>
  val?^ | miss    %279.2 = LdVar              eR    sloti, e0.1
  val?            %279.3 = Force!             !v    %279.2, e0.1   <val?_>
  lgl$#-          %279.4 = IsType                   %279.3 isA val?+
  lgl$#-          %279.5 = IsType                   %279.1 isA val?+
  void                    Branch                   %279.5 -> BB351 (if true) | BB352 (if false)
BB278   <- [277]
  (cls|spec|blt)  %278.0 = LdFun              !v    c, e0.1
  fs              %278.1 = FrameState         R     0x55de34de0470+1957: [%321.3, %321.4, %321.5, %278.0], env=e0.1
  void                    Deopt              !v    %278.1, DeadCall@0x55de34c80830[Call#30], %278.0   !
BB347   <- [37]
  prom-           %347.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p15, e0.1
  prom-           %347.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p17, e0.1
  prom-           %347.2 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p18, e0.1
  val?            %347.3 = StaticCall         !v    possibleExtends[0x55de2dff5cf0](%347.0, %347.1, missingArg, %347.2) { 0 1 3n } e0.1   <lgl$->
  lgl$#-          %347.4 = IsType                   %347.3 isA lgl$-
  void                    Branch                   %347.4 -> BB349 (if true) | BB350 (if false)
BB348   <- [37]
  void                    Nop                !     
  val?^ | miss    %348.1 = %37.0
  dr              %348.2 = CallTarget@0x55de34c80830[Call#31]
  goto BB35
BB351   <- [279]
  val?+           %351.0 = CastType           d     dn %279.1   <val?_>
  void                    Branch                   %279.4 -> BB353 (if true) | BB354 (if false)
BB352   <- [279]
  void                    Nop                !     
  val?            %352.1 = %279.1
  dr              %352.2 = Typecheck@0x55de34c80830[Type#98]
  goto BB280
BB349   <- [347]
  lgl$-           %349.0 = CastType           d     dn %347.3
  void                    StVar              lW    ok, %349.0, e0.1
  val?^ | miss    %349.2 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %349.3 = Identical                %349.2, function(x) <(rir::DispatchTable*)0x55de2b7a37|...>
  void                    Branch                   %349.3 -> BB355 (if true) | BB356 (if false)
BB350   <- [347]
  fs              %350.0 = FrameState         R     0x55de34de0470+2117: [%321.3, %321.4, %321.5, %347.3], env=e0.1
  void                    Deopt              !v    %350.0, Typecheck@0x55de34c80830[Type#105], %347.3   !
BB353   <- [351]
  val?+           %353.0 = CastType           d     dn %279.3   <val?_>
  val+            %353.1 = CallSafeBuiltin    wed   c(%351.0, %353.0)    <val?_>
  void                    StVar              lW    errors, %353.1, e0.1
  int$-           %353.3 = %321.5
  goto BB49
BB354   <- [351]
  void                    Nop                !     
  val?            %354.1 = %279.3
  dr              %354.2 = Typecheck@0x55de34c80830[Type#99]
  goto BB280
BB280   <- [352, 354]
  val?^ | miss    %280.0 = Phi                      %352.1:BB352, %354.1:BB354
  val?^ | miss    %280.1 = %280.0
  dr              %280.2 = Phi                      %352.2:BB352, %354.2:BB354
  dr              %280.3 = %280.2
  fs              %280.4 = FrameState         R     0x55de34de0470+2017: [%321.3, %321.4, %321.5, <blt c>, %279.1, %279.3], env=e0.1
  void                    Deopt              !v    %280.4, %280.3, %280.1   !
BB355   <- [349]
  lgl$-           %355.0 = CallSafeBuiltin    wed   is.na(%349.0)    <lgl$->
  lgl$-           %355.1 = Not                d     %355.0, elided
  lgl$-           %355.2 = AsLogical                %355.1
  lgl$-           %355.3 = AsLogical                %355.2
  lgl$-           %355.4 = AsLogical                %355.3
  lgl$#-          %355.5 = Identical                %355.4, false
  void                    Branch                   %355.5 -> BB276 (if true) | BB42 (if false)
BB356   <- [349]
  fs              %356.0 = FrameState         R     0x55de34de0470+2131: [%321.3, %321.4, %321.5], env=e0.1
  void                    Deopt              !v    %356.0, CallTarget@0x55de34c80830[Call#33], %349.2   !
BB49   <- [48, 125, 353, 425]
  int$-           %49.0 = Phi                      %48.1:BB48, %125.1:BB125, %425.3:BB425, %353.3:BB353
  int$-           %49.1 = %49.0
  int$-           %49.2 = Inc                      %49.1
  lgl$-           %49.3 = Lt                 d     %321.4, %49.2, elided
  lgl$#-          %49.4 = Identical                %49.3, true
  void                    Branch                   %49.4 -> BB154 (if true) | BB52 (if false)
BB276   <- [355]
  void                    Nop                !     
  lgl$-           %276.1 = %355.4
  goto BB43
BB42   <- [355]
  lgl$-           %42.0 = Not                d     %349.0, elided
  lgl$-           %42.1 = AsLogical                %42.0
  lgl$-           %42.2 = LAnd                     %355.4, %42.1
  lgl$-           %42.3 = %42.2
  goto BB43
BB154   <- [49]
  val?^ | miss    %154.0 = LdVar              eR    rev, e0.1
  lgl$#-          %154.1 = Identical                %154.0, function(x) <(rir::DispatchTable*)0x55de2f7df9|...>
  void                    Branch                   %154.1 -> BB357 (if true) | BB358 (if false)
BB52   <- [49]
  val?            %52.0 = Extract2_1D        wed   %321.3, %49.2, elided
  void                    StVar              lW    i, %52.0, e0.1
  val?^ | miss    %52.2 = LdVar              eR    slotTypes, e0.1
  lgl$#-          %52.3 = IsType                   %52.2 isA val?~+ | miss
  void                    Branch                   %52.3 -> BB359 (if true) | BB360 (if false)
BB43   <- [276, 42]
  lgl$-           %43.0 = Phi                      %42.3:BB42, %276.1:BB276
  lgl$-           %43.1 = %43.0
  lgl$#-          %43.2 = CheckTrueFalse     e     %43.1
  void                    Branch                   %43.2 -> BB273 (if true) | BB44 (if false)
BB357   <- [154]
  (cls|spec|blt)  %357.0 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %357.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p38, e0.1
  prom-           %357.2 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p39, e0.1
  val?            %357.3 = Call               !v    %357.0(%357.1, %357.2) e0.1   <vec+>
  val?            %357.4 = StaticCall         !v    rev[0x55de2e2d52e0](%357.3) e0.1   <vec+>
  void                    StVar              lW    extends, %357.4, e0.1
  val?^ | miss    %357.6 = LdVar              eR    seq_along, e0.1
  lgl$#-          %357.7 = Identical                <blt seq_along>, %357.6   <true>
  void                    Branch                   %357.7 -> BB363 (if true) | BB364 (if false)
BB358   <- [154]
  fs              %358.0 = FrameState         R     0x55de34de0470+2760: [%321.3, %321.4, %49.1], env=e0.1
  void                    Deopt              !v    %358.0, CallTarget@0x55de34c80830[Call#68], %154.0   !
BB359   <- [52]
  val?~+ | miss   %359.0 = CastType           d     dn %52.2
  val?+           %359.1 = Force!<value>            %359.0,    <vec+>
  lgl$#-          %359.2 = IsType                   %359.1 isA val+   <true>
  void                    Branch                   %359.2 -> BB361 (if true) | BB362 (if false)
BB360   <- [52]
  void                    Nop                !     
  val?^ | miss    %360.1 = %52.2
  dr              %360.2 = Typecheck@0x55de34c80830[Type#151]
  goto BB53
BB273   <- [43]
  val?^ | miss    %273.0 = LdVar              eR    c, e0.1
  lgl$#-          %273.1 = Identical                <blt c>, %273.0   <@?>
  void                    Branch                   %273.1 -> BB275 (if true) | BB274 (if false)
BB44   <- [43]
  val?^ | miss    %44.0 = LdVar              eR    complete, e0.1
  val?            %44.1 = Force!<lazy>       !v    %44.0, e0.1   <lgl$->
  lgl$#-          %44.2 = IsType                   %44.1 isA lgl$-
  void                    Branch                   %44.2 -> BB369 (if true) | BB370 (if false)
BB363   <- [357]
  val             %363.0 = ChkMissing         e     %357.4
  val?            %363.1 = CallBuiltin        !v    seq_along(%357.4) e0.1   <int->
  val?+           %363.2 = ToForSeq           e     %363.1
  int$-           %363.3 = Length                   %363.2
  lgl$-           %363.4 = Lt                 d     %363.3, %321.5, elided   <false>
  lgl$#-          %363.5 = Identical                %363.4, true
  void                    Branch                   %363.5 -> BB366 (if true) | BB365 (if false)
BB364   <- [357]
  fs              %364.0 = FrameState         R     0x55de34de0470+4204: [], env=e0.1
  void                    Deopt              !v    %364.0, DeadBranchReached@0x55de34c80830[Test#58], %357.7   !
BB361   <- [359]
  val             %361.0 = ChkMissing         e     %52.0
  lgl$#-          %361.1 = IsType                   %361.0 isA int$-
  void                    Branch                   %361.1 -> BB367 (if true) | BB368 (if false)
BB362   <- [359]
  void                    Nop                !     
  lgl$#-          %362.1 = %359.2
  dr              %362.2 = DeadBranchReached@0x55de34c80830[Test#36]
  goto BB53
BB53   <- [360, 362, 368]
  val?^ | miss    %53.0 = Phi                      %360.1:BB360, %362.1:BB362, %368.1:BB368
  val?^ | miss    %53.1 = %53.0
  dr              %53.2 = Phi                      %360.2:BB360, %362.2:BB362, %368.2:BB368
  dr              %53.3 = %53.2
  fs              %53.4 = FrameState         R     0x55de34de0470+2789: [%321.3, %321.4, %49.2], env=e0.1
  void                    Deopt              !v    %53.4, %53.3, %53.1   !
BB275   <- [273]
  val?^ | miss    %275.0 = LdVar              eR    errors, e0.1
  val?            %275.1 = Force!             !v    %275.0, e0.1   <val?_>
  (cls|spec|blt)  %275.2 = LdFun              !v    paste0, e0.1
  fs              %275.3 = FrameState         R     0x55de34de0470+2263: [%321.3, %321.4, %321.5, <blt c>, %275.1, %275.2], env=e0.1
  void                    Deopt              !v    %275.3, DeadCall@0x55de34c80830[Call#37], %275.2   !
BB274   <- [273]
  (cls|spec|blt)  %274.0 = LdFun              !v    c, e0.1
  fs              %274.1 = FrameState         R     0x55de34de0470+2207: [%321.3, %321.4, %321.5, %274.0], env=e0.1
  void                    Deopt              !v    %274.1, DeadCall@0x55de34c80830[Call#34], %274.0   !
BB369   <- [44]
  lgl$-           %369.0 = CastType           d     dn %44.1
  lgl$-           %369.1 = Not                d     %369.0, elided
  lgl$#-          %369.2 = CheckTrueFalse     e     %369.1
  void                    Branch                   %369.2 -> BB48 (if true) | BB47 (if false)
BB370   <- [44]
  fs              %370.0 = FrameState         R     0x55de34de0470+2385: [%321.3, %321.4, %321.5, %44.1], env=e0.1
  void                    Deopt              !v    %370.0, Typecheck@0x55de34c80830[Type#131], %44.1   !
BB366   <- [363]
  fs              %366.0 = FrameState         R     0x55de34de0470+4295: [%363.1], env=e0.1
  void                    Deopt              !v    %366.0, DeadBranchReached@0x55de34c80830[Test#59], %363.5   !
BB365   <- [363]
  val?            %365.0 = Extract2_1D        wed   %363.2, %321.5, elided
  void                    StVar              lW    i, %365.0, e0.1
  val?^ | miss    %365.2 = LdVar              eR    extends, e0.1
  lgl$#-          %365.3 = IsType                   %365.2 isA val?~+ | miss
  void                    Branch                   %365.3 -> BB371 (if true) | BB372 (if false)
BB367   <- [361]
  int$-           %367.0 = CastType           d     dn %361.0
  val?            %367.1 = Extract2_1D        wed   %359.1, %367.0, elided   <str$+>
  void                    StVar              lW    classi, %367.1, e0.1
  val?^ | miss    %367.3 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %367.4 = Identical                %367.3, function(Class, where=topenv(parent.frame()), |...>
  void                    Branch                   %367.4 -> BB373 (if true) | BB374 (if false)
BB368   <- [361]
  void                    Nop                !     
  val             %368.1 = %361.0
  dr              %368.2 = Typecheck@0x55de34c80830[Type#153]
  goto BB53
BB48   <- [369]
  void                    Nop                !     
  int$-           %48.1 = %321.5
  goto BB49
BB47   <- [369]
  (cls|spec|blt)  %47.0 = LdFun              !v    anyStrings, e0.1
  fs              %47.1 = FrameState         R     0x55de34de0470+2417: [%321.3, %321.4, %321.5, %47.0], env=e0.1
  void                    Deopt              !v    %47.1, DeadCall@0x55de34c80830[Call#39], %47.0   !
BB371   <- [365]
  val?~+ | miss   %371.0 = CastType           d     dn %365.2
  val?+           %371.1 = Force!<value>            %371.0,    <vec+>
  lgl$#-          %371.2 = IsType                   %371.1 isA val+   <true>
  void                    Branch                   %371.2 -> BB375 (if true) | BB376 (if false)
BB372   <- [365]
  void                    Nop                !     
  val?^ | miss    %372.1 = %365.2
  dr              %372.2 = Typecheck@0x55de34c80830[Type#249]
  goto BB159
BB373   <- [367]
  prom-           %373.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p20 (!refl), e0.1
  prom-           %373.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p21, e0.1
  val?            %373.2 = StaticCall         !v    getClassDef[0x55de2baa8ec0](%373.0, %373.1) { 0 1n } e0.1   <other>
  lgl$-           %373.3 = Is                       %373.2, NULL
  void                    StVar              lW    classDefi, %373.2, e0.1
  val             %373.5 = ChkMissing         e     %373.2
  lgl$#-          %373.6 = CheckTrueFalse     e     %373.3
  void                    Branch                   %373.6 -> BB151 (if true) | BB59 (if false)
BB374   <- [367]
  fs              %374.0 = FrameState         R     0x55de34de0470+2864: [%321.3, %321.4, %49.2], env=e0.1
  void                    Deopt              !v    %374.0, CallTarget@0x55de34c80830[Call#45], %367.3   !
BB375   <- [371]
  val             %375.0 = ChkMissing         e     %365.0
  lgl$#-          %375.1 = IsType                   %375.0 isA int$-
  void                    Branch                   %375.1 -> BB377 (if true) | BB378 (if false)
BB376   <- [371]
  void                    Nop                !     
  lgl$#-          %376.1 = %371.2
  dr              %376.2 = DeadBranchReached@0x55de34c80830[Test#60]
  goto BB159
BB159   <- [372, 376, 378]
  val?^ | miss    %159.0 = Phi                      %372.1:BB372, %376.1:BB376, %378.1:BB378
  val?^ | miss    %159.1 = %159.0
  dr              %159.2 = Phi                      %372.2:BB372, %376.2:BB376, %378.2:BB378
  dr              %159.3 = %159.2
  fs              %159.4 = FrameState         R     0x55de34de0470+4340: [%363.2, %363.3, %321.5], env=e0.1
  void                    Deopt              !v    %159.4, %159.3, %159.1   !
BB151   <- [373]
  val?^ | miss    %151.0 = LdVar              eR    c, e0.1
  lgl$#-          %151.1 = Identical                <blt c>, %151.0   <@?>
  void                    Branch                   %151.1 -> BB153 (if true) | BB152 (if false)
BB59   <- [373]
  val?^ | miss    %59.0 = LdVar              eR    slotNames, e0.1
  lgl$#-          %59.1 = IsType                   %59.0 isA val?~- | miss
  void                    Branch                   %59.1 -> BB379 (if true) | BB380 (if false)
BB377   <- [375]
  int$-           %377.0 = CastType           d     dn %375.0
  val?            %377.1 = Extract2_1D        wed   %371.1, %377.0, elided   <other>
  void                    StVar              lW    exti, %377.1, e0.1
  (cls|spec|blt)  %377.3 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %377.4 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p40, e0.1
  prom-           %377.5 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p41, e0.1
  val?            %377.6 = Call               !v    %377.3(%377.4, %377.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %377.6, e0.1
  (cls|spec|blt)  %377.8 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %377.9 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p42, e0.1
  prom-           %377.10 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p43, e0.1
  val?            %377.11 = Call               !v    %377.8(%377.9, %377.10) e0.1   <lgl$->
  lgl$#-          %377.12 = IsType                   %377.11 isA lgl$-
  void                    Branch                   %377.12 -> BB383 (if true) | BB384 (if false)
BB378   <- [375]
  void                    Nop                !     
  val             %378.1 = %375.0
  dr              %378.2 = Typecheck@0x55de34c80830[Type#251]
  goto BB159
BB153   <- [151]
  val?^ | miss    %153.0 = LdVar              eR    errors, e0.1
  val?            %153.1 = Force!             !v    %153.0, e0.1   <val?_>
  (cls|spec|blt)  %153.2 = LdFun              !v    paste0, e0.1
  fs              %153.3 = FrameState         R     0x55de34de0470+3037: [%321.3, %321.4, %49.2, <blt c>, %153.1, %153.2], env=e0.1
  void                    Deopt              !v    %153.3, DeadCall@0x55de34c80830[Call#48], %153.2   !
BB152   <- [151]
  (cls|spec|blt)  %152.0 = LdFun              !v    c, e0.1
  fs              %152.1 = FrameState         R     0x55de34de0470+2981: [%321.3, %321.4, %49.2, %152.0], env=e0.1
  void                    Deopt              !v    %152.1, DeadCall@0x55de34c80830[Call#46], %152.0   !
BB379   <- [59]
  val?~- | miss   %379.0 = CastType           d     dn %59.0
  val?-           %379.1 = Force!<value>            %379.0,    <str->
  lgl$#-          %379.2 = IsType                   %379.1 isA val+   <true>
  void                    Branch                   %379.2 -> BB381 (if true) | BB382 (if false)
BB380   <- [59]
  void                    Nop                !     
  val?^ | miss    %380.1 = %59.0
  dr              %380.2 = Typecheck@0x55de34c80830[Type#174]
  goto BB57
BB383   <- [377]
  lgl$-           %383.0 = CastType           d     dn %377.11
  lgl$-           %383.1 = Not                d     %383.0, elided
  lgl$-           %383.2 = AsLogical                %383.1
  lgl$#-          %383.3 = Identical                %383.2, false
  void                    Branch                   %383.3 -> BB164 (if true) | BB163 (if false)
BB384   <- [377]
  void                    Nop                !     
  val?            %384.1 = %377.11
  dr              %384.2 = Typecheck@0x55de34c80830[Type#258]
  goto BB161
BB381   <- [379]
  val?^ | miss    %381.0 = LdVar              eR    i, e0.1
  lgl$#-          %381.1 = IsType                   %381.0 isA int$-
  void                    Branch                   %381.1 -> BB385 (if true) | BB386 (if false)
BB382   <- [379]
  void                    Nop                !     
  lgl$#-          %382.1 = %379.2
  dr              %382.2 = DeadBranchReached@0x55de34c80830[Test#40]
  goto BB57
BB57   <- [380, 382, 386]
  val?^ | miss    %57.0 = Phi                      %380.1:BB380, %382.1:BB382, %386.1:BB386
  val?^ | miss    %57.1 = %57.0
  dr              %57.2 = Phi                      %380.2:BB380, %382.2:BB382, %386.2:BB386
  dr              %57.3 = %57.2
  fs              %57.4 = FrameState         R     0x55de34de0470+2923: [%321.3, %321.4, %49.2], env=e0.1
  void                    Deopt              !v    %57.4, %57.3, %57.1   !
BB164   <- [383]
  lgl$#-          %164.0 = CheckTrueFalse     e     %383.2
  void                    Branch                   %164.0 -> BB272 (if true) | BB165 (if false)
BB163   <- [383]
  (cls|spec|blt)  %163.0 = LdFun              !v    is, e0.1
  fs              %163.1 = FrameState         R     0x55de34de0470+4521: [%363.2, %363.3, %321.5, %383.2, %163.0], env=e0.1
  void                    Deopt              !v    %163.1, DeadCall@0x55de34c80830[Call#73], %163.0   !
BB161   <- [384, 392]
  val?^ | miss    %161.0 = Phi                      %384.1:BB384, %392.1:BB392
  val?^ | miss    %161.1 = %161.0
  dr              %161.2 = Phi                      %384.2:BB384, %392.2:BB392
  dr              %161.3 = %161.2
  fs              %161.4 = FrameState         R     0x55de34de0470+4503: [%363.2, %363.3, %321.5, %377.11], env=e0.1
  void                    Deopt              !v    %161.4, %161.3, %161.1   !
BB385   <- [381]
  int$-           %385.0 = CastType           d     dn %381.0
  val?            %385.1 = Extract2_1D        wed   %379.1, %385.0, elided   <str$->
  void                    StVar              lW    namei, %385.1, e0.1
  val?^ | miss    %385.3 = LdVar              eR    try, e0.1
  lgl$#-          %385.4 = Identical                %385.3, function(expr, silent=FALSE, outFile=getOption|...>
  void                    Branch                   %385.4 -> BB387 (if true) | BB388 (if false)
BB386   <- [381]
  void                    Nop                !     
  val?^ | miss    %386.1 = %381.0
  dr              %386.2 = Typecheck@0x55de34c80830[Type#176]
  goto BB57
BB272   <- [164]
  void                    Nop                !     
  int$-           %272.1 = %321.5
  goto BB170
BB165   <- [164]
  val?^ | miss    %165.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %165.1 = Identical                %165.0, function(Class, where=topenv(parent.frame()), |...>
  void                    Branch                   %165.1 -> BB391 (if true) | BB392 (if false)
BB387   <- [385]
  prom-           %387.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p22, e0.1
  ct              %387.1 = PushContext        lCL   %387.0, true, try(switch(namei, .S3Class=S3Class(object), sl|...>, function(expr, silent=FALSE, outFile=getOption|...>, e0.1
  val?^           %387.2 = CastType                 up %387.0
  env             e387.3 = MkEnv              l     expr=%387.2, silent=true, outFile(miss)=missingArg, parent=R_BaseNamespace, context 1
  prom-           %387.4 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p70, e387.3
  val?^ | miss    %387.5 = CastType                 up %387.4
  void                    StArg              lW    outFile, %387.5, e387.3
  cls             %387.7 = MkCls                    try@Prom(3)0, e387.3
  val?^ | miss    %387.8 = LdVar              eR    tryCatch, e387.3
  lgl$#-          %387.9 = Identical                %387.8, function(expr, ..., finally) <(rir::DispatchTa|...>
  void                    Branch                   %387.9 -> BB393 (if true) | BB394 (if false)
BB388   <- [385]
  fs              %388.0 = FrameState         R     0x55de34de0470+3205: [%321.3, %321.4, %49.2], env=e0.1
  void                    Deopt              !v    %388.0, CallTarget@0x55de34c80830[Call#49], %385.3   !
BB170   <- [169, 264, 272, 185]
  int$-           %170.0 = Phi                      %169.1:BB169, %185.1:BB185, %264.1:BB264, %272.1:BB272
  int$-           %170.1 = %170.0
  int$-           %170.2 = Inc                      %170.1
  lgl$-           %170.3 = Lt                 d     %363.3, %170.2, elided
  lgl$#-          %170.4 = Identical                %170.3, true
  void                    Branch                   %170.4 -> BB265 (if true) | BB171 (if false)
BB391   <- [165]
  prom-           %391.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p44, e0.1
  val?            %391.1 = StaticCall         !v    getClassDef[0x55de2be46250](%391.0) e0.1   <other>
  lgl$-           %391.2 = Is                       %391.1, NULL
  void                    StVar              lW    superDef, %391.1, e0.1
  val             %391.4 = ChkMissing         e     %391.1
  lgl$#-          %391.5 = CheckTrueFalse     e     %391.2
  void                    Branch                   %391.5 -> BB269 (if true) | BB166 (if false)
BB392   <- [165]
  void                    Nop                !     
  val?^ | miss    %392.1 = %165.0
  dr              %392.2 = CallTarget@0x55de34c80830[Call#74]
  goto BB161
BB393   <- [387]
  prom-           %393.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p72, e387.3
  prom-           %393.1 = MkArg                    %387.7, validObject[0x55de2f03e050]_p73 (!refl), e387.3
  dots-           %393.2 = DotsList           l     error=%393.1
  val?            %393.3 = StaticCall         !v    tryCatch[0x55de32848e60](%393.0, %393.2) { 0 1n } e387.3   <val?+>
  val?            %393.4 = PopContext         C     %393.3, %387.1
  void                    StVar              lW    sloti, %393.4, e0.1
  val?^ | miss    %393.6 = LdVar              eR    inherits, e0.1
  lgl$#-          %393.7 = Identical                %393.6, function(x, what, which=FALSE) <(rir::Dispatch|...>
  void                    Branch                   %393.7 -> BB403 (if true) | BB404 (if false)
BB394   <- [387]
  fs              %394.0 = FrameState         R     0x55de34de0470+3250: [%321.3, %321.4, %49.2], env=e0.1
  fs              %394.1 = FrameState         R     0x55de2a6c7b30+0: [], env=e387.3, next=%394.0
  void                    Deopt              !v    %394.1, CallTarget@0x55de2a4942a0[Call#2], %387.8   !
BB265   <- [170]
  void                    Nop                !     
  goto BB213
BB171   <- [170]
  val?            %171.0 = Extract2_1D        wed   %363.2, %170.2, elided
  void                    StVar              lW    i, %171.0, e0.1
  val?^ | miss    %171.2 = LdVar              eR    extends, e0.1
  lgl$#-          %171.3 = IsType                   %171.2 isA val?~+ | miss
  void                    Branch                   %171.3 -> BB389 (if true) | BB390 (if false)
BB269   <- [391]
  val?^ | miss    %269.0 = LdVar              eR    c, e0.1
  lgl$#-          %269.1 = Identical                <blt c>, %269.0   <@?>
  void                    Branch                   %269.1 -> BB271 (if true) | BB270 (if false)
BB166   <- [391]
  (cls|spec|blt)  %166.0 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %166.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p45, e0.1
  prom-           %166.2 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p46, e0.1
  val?            %166.3 = Call               !v    %166.0(%166.1, %166.2) e0.1   <nil->
  void                    StVar              lW    validityMethod, %166.3, e0.1
  lgl$#-          %166.5 = IsType                   %166.3 isA val?-
  val?^ | miss    %166.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %166.7 = Identical                <blt is.function>, %166.6   <true>
  void                    Branch                   %166.7 -> BB401 (if true) | BB402 (if false)
BB403   <- [393]
  prom-           %403.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p26 (!refl), e0.1
  ct              %403.1 = PushContext        lCL   %403.0, "try-error", inherits(sloti, "try-error"), function(x, what, which=FALSE) <(rir::Dispatch|...>, e0.1
  val?^           %403.2 = CastType                 up %403.0
  env             e403.3 = MkEnv              l     x=%403.2, what="try-error", which(miss)=false, parent=R_BaseNamespace, context 1
  val?            %403.4 = Force!<lazy>       !vr   %403.2, e403.3   <val?>
  val?^ | miss    %403.5 = LdVar              eR    what, e403.3
  val?            %403.6 = Force!<value>      !v    %403.5, e403.3   <str$->
  val?^ | miss    %403.7 = LdVar              eR    which, e403.3
  val?            %403.8 = Force!<lazy>       !v    %403.7, e403.3   <lgl$->
  lgl$#-          %403.9 = IsType                   %403.8 isA lgl$-
  lgl$#-          %403.10 = IsType                   %403.6 isA val?-
  void                    Branch                   %403.10 -> BB415 (if true) | BB416 (if false)
BB404   <- [393]
  fs              %404.0 = FrameState         R     0x55de34de0470+3264: [%321.3, %321.4, %49.2], env=e0.1
  void                    Deopt              !v    %404.0, CallTarget@0x55de34c80830[Call#52], %393.6   !
BB213   <- [212, 265]
  (cls|spec|blt)  %213.0 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %213.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p58, e0.1
  prom-           %213.2 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p59, e0.1
  val?            %213.3 = Call               !v    %213.0(%213.1, %213.2) e0.1   <(nil|cls)->
  void                    StVar              lW    validityMethod, %213.3, e0.1
  val?^ | miss    %213.5 = LdVar              eR    length, e0.1
  lgl$#-          %213.6 = Identical                <blt length>, %213.5   <true>
  void                    Branch                   %213.6 -> BB397 (if true) | BB398 (if false)
BB389   <- [171]
  val?~+ | miss   %389.0 = CastType           d     dn %171.2
  val?+           %389.1 = Force!<value>            %389.0,    <vec+>
  lgl$#-          %389.2 = IsType                   %389.1 isA val+   <true>
  void                    Branch                   %389.2 -> BB395 (if true) | BB396 (if false)
BB390   <- [171]
  void                    Nop                !     
  val?^ | miss    %390.1 = %171.2
  dr              %390.2 = Typecheck@0x55de34c80830[Type#294]
  goto BB172
BB271   <- [269]
  val?^ | miss    %271.0 = LdVar              eR    errors, e0.1
  val?            %271.1 = Force!             !v    %271.0, e0.1   <val?_>
  (cls|spec|blt)  %271.2 = LdFun              !v    paste0, e0.1
  fs              %271.3 = FrameState         R     0x55de34de0470+4742: [%363.2, %363.3, %321.5, <blt c>, %271.1, %271.2], env=e0.1
  void                    Deopt              !v    %271.3, DeadCall@0x55de34c80830[Call#77], %271.2   !
BB270   <- [269]
  (cls|spec|blt)  %270.0 = LdFun              !v    c, e0.1
  fs              %270.1 = FrameState         R     0x55de34de0470+4686: [%363.2, %363.3, %321.5, %270.0], env=e0.1
  void                    Deopt              !v    %270.1, DeadCall@0x55de34c80830[Call#75], %270.0   !
BB401   <- [166]
  val             %401.0 = ChkMissing         e     %166.3
  void                    Branch                   %166.5 -> BB409 (if true) | BB410 (if false)
BB402   <- [166]
  void                    Nop                !     
  lgl$#-          %402.1 = %166.7
  dr              %402.2 = DeadBranchReached@0x55de34c80830[Test#62]
  goto BB167
BB415   <- [403]
  val?-           %415.0 = CastType           d     dn %403.6   <str$->
  void                    Branch                   %403.9 -> BB417 (if true) | BB418 (if false)
BB416   <- [403]
  void                    Nop                !     
  val?            %416.1 = %403.6
  dr              %416.2 = Typecheck@0x55de2a4055a0[Type#1]
  goto BB66
BB397   <- [213]
  val?^ | miss    %397.0 = LdVar              eR    errors, e0.1
  lgl$#-          %397.1 = IsType                   %397.0 isA val?~- | miss
  void                    Branch                   %397.1 -> BB399 (if true) | BB400 (if false)
BB398   <- [213]
  void                    Nop                !     
  lgl$#-          %398.1 = %213.6
  dr              %398.2 = DeadBranchReached@0x55de34c80830[Test#70]
  goto BB214
BB395   <- [389]
  val             %395.0 = ChkMissing         e     %171.0
  lgl$#-          %395.1 = IsType                   %395.0 isA int$-
  void                    Branch                   %395.1 -> BB405 (if true) | BB406 (if false)
BB396   <- [389]
  void                    Nop                !     
  lgl$#-          %396.1 = %389.2
  dr              %396.2 = DeadBranchReached@0x55de34c80830[Test#65]
  goto BB172
BB172   <- [390, 396, 406]
  val?^ | miss    %172.0 = Phi                      %390.1:BB390, %396.1:BB396, %406.1:BB406
  val?^ | miss    %172.1 = %172.0
  dr              %172.2 = Phi                      %390.2:BB390, %396.2:BB396, %406.2:BB406
  dr              %172.3 = %172.2
  fs              %172.4 = FrameState         R     0x55de34de0470+5276: [%363.2, %363.3, %170.2], env=e0.1
  void                    Deopt              !v    %172.4, %172.3, %172.1   !
BB409   <- [401]
  val?-           %409.0 = CastType           d     dn %166.3   <nil->
  lgl$#-          %409.1 = CallSafeBuiltin    wed   is.function(%409.0)    <lgl$->
  void                    Branch                   %409.1 -> BB266 (if true) | BB169 (if false)
BB410   <- [401]
  void                    Nop                !     
  val?            %410.1 = %166.3
  dr              %410.2 = Typecheck@0x55de34c80830[Type#274]
  goto BB167
BB167   <- [402, 410]
  val?^ | miss    %167.0 = Phi                      %402.1:BB402, %410.1:BB410
  val?^ | miss    %167.1 = %167.0
  dr              %167.2 = Phi                      %402.2:BB402, %410.2:BB410
  dr              %167.3 = %167.2
  fs              %167.4 = FrameState         R     0x55de34de0470+4876: [%363.2, %363.3, %321.5], env=e0.1
  void                    Deopt              !v    %167.4, %167.3, %167.1   !
BB417   <- [415]
  lgl$-           %417.0 = CastType           d     dn %403.8
  val?            %417.1 = CallBuiltin        !v    inherits(%403.4, %415.0, %417.0) e403.3
  val?            %417.2 = PopContext         C     %417.1, %403.1   <lgl$->
  lgl$#-          %417.3 = IsType                   %417.2 isA lgl$-
  void                    Branch                   %417.3 -> BB421 (if true) | BB422 (if false)
BB418   <- [415]
  void                    Nop                !     
  val?            %418.1 = %403.8
  dr              %418.2 = Typecheck@0x55de2a4055a0[Type#2]
  goto BB66
BB66   <- [416, 418]
  val?^ | miss    %66.0 = Phi                      %416.1:BB416, %418.1:BB418
  val?^ | miss    %66.1 = %66.0
  dr              %66.2 = Phi                      %416.2:BB416, %418.2:BB418
  dr              %66.3 = %66.2
  fs              %66.4 = FrameState         R     0x55de34de0470+3301: [%321.3, %321.4, %49.2], env=e0.1
  fs              %66.5 = FrameState         R     0x55de2a3e50a0+37: [%403.4, %403.6, %403.8], env=e403.3, next=%66.4
  void                    Deopt              !v    %66.5, %66.3, %66.1   !
BB399   <- [397]
  val?~- | miss   %399.0 = CastType           d     dn %397.0
  val?-           %399.1 = Force!<value>            %399.0,    <str->
  (int|real)$-    %399.2 = CallSafeBuiltin    wed   length(%399.1)    <int$->
  lgl$#-          %399.3 = IsType                   %399.2 isA int$-
  void                    Branch                   %399.3 -> BB407 (if true) | BB408 (if false)
BB400   <- [397]
  void                    Nop                !     
  val?^ | miss    %400.1 = %397.0
  dr              %400.2 = Typecheck@0x55de34c80830[Type#343]
  goto BB214
BB214   <- [398, 400]
  val?^ | miss    %214.0 = Phi                      %398.1:BB398, %400.1:BB400
  val?^ | miss    %214.1 = %214.0
  dr              %214.2 = Phi                      %398.2:BB398, %400.2:BB400
  dr              %214.3 = %214.2
  fs              %214.4 = FrameState         R     0x55de34de0470+6244: [], env=e0.1
  void                    Deopt              !v    %214.4, %214.3, %214.1   !
BB405   <- [395]
  int$-           %405.0 = CastType           d     dn %395.0
  val?            %405.1 = Extract2_1D        wed   %389.1, %405.0, elided   <other>
  void                    StVar              lW    exti, %405.1, e0.1
  (cls|spec|blt)  %405.3 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %405.4 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p47, e0.1
  prom-           %405.5 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p48, e0.1
  val?            %405.6 = Call               !v    %405.3(%405.4, %405.5) e0.1   <str$+>
  void                    StVar              lW    superClass, %405.6, e0.1
  (cls|spec|blt)  %405.8 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %405.9 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p49, e0.1
  prom-           %405.10 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p50, e0.1
  val?            %405.11 = Call               !v    %405.8(%405.9, %405.10) e0.1   <lgl$->
  lgl$#-          %405.12 = IsType                   %405.11 isA lgl$-
  void                    Branch                   %405.12 -> BB419 (if true) | BB420 (if false)
BB406   <- [395]
  void                    Nop                !     
  val             %406.1 = %395.0
  dr              %406.2 = Typecheck@0x55de34c80830[Type#296]
  goto BB172
BB266   <- [409]
  val?^ | miss    %266.0 = LdVar              eR    c, e0.1
  lgl$#-          %266.1 = Identical                <blt c>, %266.0   <@?>
  void                    Branch                   %266.1 -> BB268 (if true) | BB267 (if false)
BB169   <- [409]
  void                    Nop                !     
  int$-           %169.1 = %321.5
  goto BB170
BB421   <- [417]
  lgl$-           %421.0 = CastType           d     dn %417.2
  lgl$#-          %421.1 = CheckTrueFalse     e     %421.0
  void                    Branch                   %421.1 -> BB146 (if true) | BB70 (if false)
BB422   <- [417]
  void                    Nop                !     
  val?            %422.1 = %417.2
  dr              %422.2 = Typecheck@0x55de34c80830[Type#186]
  goto BB68
BB407   <- [399]
  int$-           %407.0 = CastType           d     dn %399.2
  lgl$-           %407.1 = Eq                 d     %407.0, 0L, elided   <lgl$->
  lgl$-           %407.2 = AsLogical                %407.1
  lgl$#-          %407.3 = Identical                %407.2, false
  void                    Branch                   %407.3 -> BB256 (if true) | BB218 (if false)
BB408   <- [399]
  void                    Nop                !     
  (int|real)$-    %408.1 = %399.2
  dr              %408.2 = Typecheck@0x55de34c80830[Type#344]
  goto BB216
BB419   <- [405]
  lgl$-           %419.0 = CastType           d     dn %405.11
  lgl$-           %419.1 = Not                d     %419.0, elided
  lgl$-           %419.2 = AsLogical                %419.1
  lgl$#-          %419.3 = Identical                %419.2, false
  void                    Branch                   %419.3 -> BB177 (if true) | BB176 (if false)
BB420   <- [405]
  void                    Nop                !     
  val?            %420.1 = %405.11
  dr              %420.2 = Typecheck@0x55de34c80830[Type#303]
  goto BB174
BB268   <- [266]
  val?^ | miss    %268.0 = LdVar              eR    errors, e0.1
  val?            %268.1 = Force!             !v    %268.0, e0.1   <val?_>
  (cls|spec|blt)  %268.2 = LdFun              !v    anyStrings, e0.1
  fs              %268.3 = FrameState         R     0x55de34de0470+5067: [%363.2, %363.3, %321.5, <blt c>, %268.1, %268.2], env=e0.1
  void                    Deopt              !v    %268.3, DeadCall@0x55de34c80830[Call#84], %268.2   !
BB267   <- [266]
  (cls|spec|blt)  %267.0 = LdFun              !v    c, e0.1
  fs              %267.1 = FrameState         R     0x55de34de0470+5011: [%363.2, %363.3, %321.5, %267.0], env=e0.1
  void                    Deopt              !v    %267.1, DeadCall@0x55de34c80830[Call#80], %267.0   !
BB146   <- [421]
  val?^ | miss    %146.0 = LdVar              eR    c, e0.1
  lgl$#-          %146.1 = Identical                <blt c>, %146.0   <@?>
  void                    Branch                   %146.1 -> BB148 (if true) | BB147 (if false)
BB70   <- [421]
  val?^ | miss    %70.0 = LdVar              eR    possibleExtends, e0.1
  lgl$#-          %70.1 = Identical                %70.0, function(class1, class2, ClassDef1=getClassDef|...>
  void                    Branch                   %70.1 -> BB427 (if true) | BB428 (if false)
BB68   <- [422, 428]
  val?^ | miss    %68.0 = Phi                      %422.1:BB422, %428.1:BB428
  val?^ | miss    %68.1 = %68.0
  dr              %68.2 = Phi                      %422.2:BB422, %428.2:BB428
  dr              %68.3 = %68.2
  fs              %68.4 = FrameState         R     0x55de34de0470+3301: [%321.3, %321.4, %49.2, %417.2], env=e0.1
  void                    Deopt              !v    %68.4, %68.3, %68.1   !
BB256   <- [407]
  void                    Nop                !     
  lgl$-           %256.1 = %407.2
  goto BB219
BB218   <- [407]
  val?^ | miss    %218.0 = LdVar              eR    is.function, e0.1
  lgl$#-          %218.1 = Identical                <blt is.function>, %218.0   <true>
  void                    Branch                   %218.1 -> BB411 (if true) | BB412 (if false)
BB216   <- [408, 412, 414]
  val?^ | miss    %216.0 = Phi                      %408.1:BB408, %412.1:BB412, %414.1:BB414
  val?^ | miss    %216.1 = %216.0
  dr              %216.2 = Phi                      %408.2:BB408, %412.2:BB412, %414.2:BB414
  dr              %216.3 = %216.2
  fs              %216.4 = FrameState         R     0x55de34de0470+6335: [%399.2], env=e0.1
  void                    Deopt              !v    %216.4, %216.3, %216.1   !
BB177   <- [419]
  lgl$#-          %177.0 = CheckTrueFalse     e     %419.2
  void                    Branch                   %177.0 -> BB264 (if true) | BB178 (if false)
BB176   <- [419]
  (cls|spec|blt)  %176.0 = LdFun              !v    is, e0.1
  fs              %176.1 = FrameState         R     0x55de34de0470+5457: [%363.2, %363.3, %170.2, %419.2, %176.0], env=e0.1
  void                    Deopt              !v    %176.1, DeadCall@0x55de34c80830[Call#90], %176.0   !
BB174   <- [420, 430]
  val?^ | miss    %174.0 = Phi                      %420.1:BB420, %430.1:BB430
  val?^ | miss    %174.1 = %174.0
  dr              %174.2 = Phi                      %420.2:BB420, %430.2:BB430
  dr              %174.3 = %174.2
  fs              %174.4 = FrameState         R     0x55de34de0470+5439: [%363.2, %363.3, %170.2, %405.11], env=e0.1
  void                    Deopt              !v    %174.4, %174.3, %174.1   !
BB148   <- [146]
  val?^ | miss    %148.0 = LdVar              eR    errors, e0.1
  val?            %148.1 = Force!             !v    %148.0, e0.1   <val?_>
  val?^ | miss    %148.2 = LdVar              eR    sloti, e0.1
  val?            %148.3 = Force!             !v    %148.2, e0.1   <val?_>
  lgl$#-          %148.4 = IsType                   %148.3 isA val?+
  lgl$#-          %148.5 = IsType                   %148.1 isA val?+
  void                    Branch                   %148.5 -> BB423 (if true) | BB424 (if false)
BB147   <- [146]
  (cls|spec|blt)  %147.0 = LdFun              !v    c, e0.1
  fs              %147.1 = FrameState         R     0x55de34de0470+3345: [%321.3, %321.4, %49.2, %147.0], env=e0.1
  void                    Deopt              !v    %147.1, DeadCall@0x55de34c80830[Call#53], %147.0   !
BB427   <- [70]
  prom-           %427.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p27, e0.1
  prom-           %427.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p29, e0.1
  prom-           %427.2 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p30, e0.1
  ct              %427.3 = PushContext        lCL   %427.0, %427.1, missingArg, %427.2, possibleExtends(class(sloti), classi, ClassDef|...>, function(class1, class2, ClassDef1=getClassDef|...>, e0.1
  val?^           %427.4 = CastType                 up %427.2
  val?^           %427.5 = CastType                 up %427.1
  val?^           %427.6 = CastType                 up %427.0
  env             e427.7 = MkEnv              l     class1=%427.6, class2=%427.5, ClassDef1(miss)=missingArg, ClassDef2=%427.4, parent=<env 0x55de28b56378>, context 1
  prom-           %427.8 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p79, e427.7
  val?^ | miss    %427.9 = CastType                 up %427.8
  void                    StArg              lW    ClassDef1, %427.9, e427.7
  val?^ | miss    %427.11 = LdVar              eR    .identC, <env 0x55de28b56378>
  lgl$#-          %427.12 = Identical                %427.11, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>
  void                    Branch                   %427.12 -> BB431 (if true) | BB432 (if false)
BB428   <- [70]
  void                    Nop                !     
  val?^ | miss    %428.1 = %70.0
  dr              %428.2 = CallTarget@0x55de34c80830[Call#54]
  goto BB68
BB219   <- [256, 413]
  lgl$-           %219.0 = Phi                      %413.3:BB413, %256.1:BB256
  lgl$-           %219.1 = %219.0
  lgl$#-          %219.2 = CheckTrueFalse     e     %219.1
  void                    Branch                   %219.2 -> BB233 (if true) | BB222 (if false)
BB411   <- [218]
  val             %411.0 = ChkMissing         e     %213.3
  lgl$#-          %411.1 = IsType                   %411.0 isA val?~- | miss
  void                    Branch                   %411.1 -> BB413 (if true) | BB414 (if false)
BB412   <- [218]
  void                    Nop                !     
  lgl$#-          %412.1 = %218.1
  dr              %412.2 = DeadBranchReached@0x55de34c80830[Test#71]
  goto BB216
BB264   <- [177]
  void                    Nop                !     
  int$-           %264.1 = %170.2
  goto BB170
BB178   <- [177]
  val?^ | miss    %178.0 = LdVar              eR    getClassDef, e0.1
  lgl$#-          %178.1 = Identical                %178.0, function(Class, where=topenv(parent.frame()), |...>
  void                    Branch                   %178.1 -> BB429 (if true) | BB430 (if false)
BB423   <- [148]
  val?+           %423.0 = CastType           d     dn %148.1   <val?_>
  void                    Branch                   %148.4 -> BB425 (if true) | BB426 (if false)
BB424   <- [148]
  void                    Nop                !     
  val?            %424.1 = %148.1
  dr              %424.2 = Typecheck@0x55de34c80830[Type#189]
  goto BB149
BB431   <- [427]
  prom-           %431.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p81, e427.7
  prom-           %431.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p82, e427.7
  val?            %431.2 = StaticCall         !v    .identC[0x55de2e36ff70](%431.0, %431.1) e427.7   <lgl$->
  lgl$#-          %431.3 = IsType                   %431.2 isA lgl$-
  void                    Branch                   %431.3 -> BB433 (if true) | BB434 (if false)
BB432   <- [427]
  fs              %432.0 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %432.1 = FrameState         R     0x55de2d664760+0: [], env=e427.7, next=%432.0
  void                    Deopt              !v    %432.1, CallTarget@0x55de2b209930[Call#3], %427.11   !
BB233   <- [219]
  val?^ | miss    %233.0 = LdVar              eR    c, e0.1
  lgl$#-          %233.1 = Identical                <blt c>, %233.0   <true>
  void                    Branch                   %233.1 -> BB435 (if true) | BB436 (if false)
BB222   <- [219]
  void                    Nop                !     
  goto BB223
BB413   <- [411]
  val-            %413.0 = CastType           d     dn %411.0   <(nil|cls)->
  lgl$#-          %413.1 = CallSafeBuiltin    wed   is.function(%413.0)    <lgl$->
  lgl$-           %413.2 = LAnd                     %407.2, %413.1
  lgl$-           %413.3 = %413.2
  goto BB219
BB414   <- [411]
  void                    Nop                !     
  val             %414.1 = %411.0
  dr              %414.2 = Typecheck@0x55de34c80830[Type#347]
  goto BB216
BB429   <- [178]
  prom-           %429.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p51, e0.1
  val?            %429.1 = StaticCall         !v    getClassDef[0x55de2be46250](%429.0) e0.1   <other>
  lgl$-           %429.2 = Is                       %429.1, NULL
  void                    StVar              lW    superDef, %429.1, e0.1
  val             %429.4 = ChkMissing         e     %429.1
  lgl$#-          %429.5 = CheckTrueFalse     e     %429.2
  void                    Branch                   %429.5 -> BB261 (if true) | BB179 (if false)
BB430   <- [178]
  void                    Nop                !     
  val?^ | miss    %430.1 = %178.0
  dr              %430.2 = CallTarget@0x55de34c80830[Call#91]
  goto BB174
BB425   <- [423]
  val?+           %425.0 = CastType           d     dn %148.3   <val?_>
  val+            %425.1 = CallSafeBuiltin    wed   c(%423.0, %425.0)    <val?_>
  void                    StVar              lW    errors, %425.1, e0.1
  int$-           %425.3 = %49.2
  goto BB49
BB426   <- [423]
  void                    Nop                !     
  val?            %426.1 = %148.3
  dr              %426.2 = Typecheck@0x55de34c80830[Type#190]
  goto BB149
BB149   <- [424, 426]
  val?^ | miss    %149.0 = Phi                      %424.1:BB424, %426.1:BB426
  val?^ | miss    %149.1 = %149.0
  dr              %149.2 = Phi                      %424.2:BB424, %426.2:BB426
  dr              %149.3 = %149.2
  fs              %149.4 = FrameState         R     0x55de34de0470+3405: [%321.3, %321.4, %49.2, <blt c>, %148.1, %148.3], env=e0.1
  void                    Deopt              !v    %149.4, %149.3, %149.1   !
BB433   <- [431]
  lgl$-           %433.0 = CastType           d     dn %431.2
  lgl$-           %433.1 = AsLogical                %433.0
  lgl$#-          %433.2 = Identical                %433.1, true
  void                    Branch                   %433.2 -> BB145 (if true) | BB75 (if false)
BB434   <- [431]
  void                    Nop                !     
  val?            %434.1 = %431.2
  dr              %434.2 = Typecheck@0x55de2b209930[Type#9]
  goto BB73
BB435   <- [233]
  val?^ | miss    %435.0 = LdVar              eR    anyStrings, e0.1
  lgl$#-          %435.1 = Identical                %435.0, %0.2
  void                    Branch                   %435.1 -> BB445 (if true) | BB446 (if false)
BB436   <- [233]
  void                    Nop                !     
  lgl$#-          %436.1 = %233.1
  dr              %436.2 = DeadBranchReached@0x55de34c80830[Test#72]
  goto BB220
BB223   <- [222, 503]
  val?^ | miss    %223.0 = LdVar              eR    length, e0.1
  lgl$#-          %223.1 = Identical                <blt length>, %223.0   <true>
  void                    Branch                   %223.1 -> BB437 (if true) | BB438 (if false)
BB261   <- [429]
  val?^ | miss    %261.0 = LdVar              eR    c, e0.1
  lgl$#-          %261.1 = Identical                <blt c>, %261.0   <@?>
  void                    Branch                   %261.1 -> BB263 (if true) | BB262 (if false)
BB179   <- [429]
  (cls|spec|blt)  %179.0 = LdFun              !v    @, <0x55de2854ebd8>, e0.1
  prom-           %179.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p52, e0.1
  prom-           %179.2 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p53, e0.1
  val?            %179.3 = Call               !v    %179.0(%179.1, %179.2) e0.1   <(nil|cls)->
  void                    StVar              lW    validityMethod, %179.3, e0.1
  lgl$#-          %179.5 = IsType                   %179.3 isA val?-
  val?^ | miss    %179.6 = LdVar              eR    is.function, e0.1
  lgl$#-          %179.7 = Identical                <blt is.function>, %179.6   <true>
  void                    Branch                   %179.7 -> BB441 (if true) | BB442 (if false)
BB145   <- [433]
  void                    Nop                !     
  lgl$-           %145.1 = %433.1
  goto BB78
BB75   <- [433]
  val?^ | miss    %75.0 = LdVar              eR    .identC, e427.7
  lgl$#-          %75.1 = Identical                %75.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>
  void                    Branch                   %75.1 -> BB439 (if true) | BB440 (if false)
BB73   <- [434, 440]
  val?^ | miss    %73.0 = Phi                      %434.1:BB434, %440.1:BB440
  val?^ | miss    %73.1 = %73.0
  dr              %73.2 = Phi                      %434.2:BB434, %440.2:BB440
  dr              %73.3 = %73.2
  fs              %73.4 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %73.5 = FrameState         R     0x55de2d664760+37: [%431.2], env=e427.7, next=%73.4
  void                    Deopt              !v    %73.5, %73.3, %73.1   !
BB445   <- [435]
  prom-           %445.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p60, e0.1
  val?^           %445.1 = CastType                 up %445.0
  env             e445.2 = MkEnv              l     x=%445.1, parent=e0.1, context 0
  val?^ | miss    %445.3 = LdVar              eR    isTRUE, e445.2
  lgl$#-          %445.4 = Identical                %445.3, function(x) <(rir::DispatchTable*)0x55de2a40ca|...>
  void                    Branch                   %445.4 -> BB447 (if true) | BB448 (if false)
BB446   <- [435]
  void                    Nop                !     
  val?^ | miss    %446.1 = %435.0
  dr              %446.2 = CallTarget@0x55de34c80830[Call#111]
  goto BB220
BB220   <- [436, 446, 448]
  val?^ | miss    %220.0 = Phi                      %436.1:BB436, %446.1:BB446, %448.1:BB448
  val?^ | miss    %220.1 = %220.0
  dr              %220.2 = Phi                      %436.2:BB436, %446.2:BB446, %448.2:BB448
  dr              %220.3 = %220.2
  fs              %220.4 = FrameState         R     0x55de34de0470+6457: [%219.1], env=e0.1
  void                    Deopt              !v    %220.4, %220.3, %220.1   !
BB437   <- [223]
  val?^ | miss    %437.0 = LdVar              eR    errors, e0.1
  lgl$#-          %437.1 = IsType                   %437.0 isA val?~- | miss
  void                    Branch                   %437.1 -> BB451 (if true) | BB452 (if false)
BB438   <- [223]
  void                    Nop                !     
  lgl$#-          %438.1 = %223.1
  dr              %438.2 = DeadBranchReached@0x55de34c80830[Test#73]
  goto BB224
BB263   <- [261]
  val?^ | miss    %263.0 = LdVar              eR    errors, e0.1
  val?            %263.1 = Force!             !v    %263.0, e0.1   <val?_>
  (cls|spec|blt)  %263.2 = LdFun              !v    paste0, e0.1
  fs              %263.3 = FrameState         R     0x55de34de0470+5678: [%363.2, %363.3, %170.2, <blt c>, %263.1, %263.2], env=e0.1
  void                    Deopt              !v    %263.3, DeadCall@0x55de34c80830[Call#94], %263.2   !
BB262   <- [261]
  (cls|spec|blt)  %262.0 = LdFun              !v    c, e0.1
  fs              %262.1 = FrameState         R     0x55de34de0470+5622: [%363.2, %363.3, %170.2, %262.0], env=e0.1
  void                    Deopt              !v    %262.1, DeadCall@0x55de34c80830[Call#92], %262.0   !
BB441   <- [179]
  val             %441.0 = ChkMissing         e     %179.3
  void                    Branch                   %179.5 -> BB443 (if true) | BB444 (if false)
BB442   <- [179]
  void                    Nop                !     
  lgl$#-          %442.1 = %179.7
  dr              %442.2 = DeadBranchReached@0x55de34c80830[Test#67]
  goto BB180
BB78   <- [145, 459]
  lgl$-           %78.0 = Phi                      %459.3:BB459, %145.1:BB145
  lgl$-           %78.1 = %78.0
  lgl$#-          %78.2 = CheckTrueFalse     e     %78.1
  void                    Branch                   %78.2 -> BB144 (if true) | BB79 (if false)
BB439   <- [75]
  prom-           %439.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p87, e427.7
  val?            %439.1 = StaticCall         !v    .identC[0x55de34d88490](%439.0, "ANY") e427.7   <lgl$->
  lgl$#-          %439.2 = IsType                   %439.1 isA lgl$-
  void                    Branch                   %439.2 -> BB459 (if true) | BB460 (if false)
BB440   <- [75]
  void                    Nop                !     
  val?^ | miss    %440.1 = %75.0
  dr              %440.2 = CallTarget@0x55de2b209930[Call#4]
  goto BB73
BB447   <- [445]
  val?            %447.0 = Force!<lazy>       !vL   %445.1, e445.2   <lgl$->
  val+            %447.1 = CallSafeBuiltin    wed   is.logical(%447.0)    <lgl$->
  lgl$#-          %447.2 = IsType                   %447.1 isA lgl$-
  void                    Branch                   %447.2 -> BB449 (if true) | BB450 (if false)
BB448   <- [445]
  void                    Nop                !     
  val?^ | miss    %448.1 = %445.3
  dr              %448.2 = CallTarget@0x55de34e2c628[Call#0]
  goto BB220
BB451   <- [437]
  val?~- | miss   %451.0 = CastType           d     dn %437.0
  val?-           %451.1 = Force!<value>            %451.0,    <str->
  (int|real)$-    %451.2 = CallSafeBuiltin    wed   length(%451.1)    <int$->
  lgl$#-          %451.3 = IsType                   %451.2 isA int$-
  void                    Branch                   %451.3 -> BB469 (if true) | BB470 (if false)
BB452   <- [437]
  void                    Nop                !     
  val?^ | miss    %452.1 = %437.0
  dr              %452.2 = Typecheck@0x55de34c80830[Type#359]
  goto BB224
BB224   <- [438, 452]
  val?^ | miss    %224.0 = Phi                      %438.1:BB438, %452.1:BB452
  val?^ | miss    %224.1 = %224.0
  dr              %224.2 = Phi                      %438.2:BB438, %452.2:BB452
  dr              %224.3 = %224.2
  fs              %224.4 = FrameState         R     0x55de34de0470+6615: [], env=e0.1
  void                    Deopt              !v    %224.4, %224.3, %224.1   !
BB443   <- [441]
  val?-           %443.0 = CastType           d     dn %179.3   <(nil|cls)->
  lgl$#-          %443.1 = CallSafeBuiltin    wed   is.function(%443.0)    <lgl$->
  void                    Branch                   %443.1 -> BB186 (if true) | BB184 (if false)
BB444   <- [441]
  void                    Nop                !     
  val?            %444.1 = %179.3
  dr              %444.2 = Typecheck@0x55de34c80830[Type#319]
  goto BB180
BB180   <- [442, 444]
  val?^ | miss    %180.0 = Phi                      %442.1:BB442, %444.1:BB444
  val?^ | miss    %180.1 = %180.0
  dr              %180.2 = Phi                      %442.2:BB442, %444.2:BB444
  dr              %180.3 = %180.2
  fs              %180.4 = FrameState         R     0x55de34de0470+5812: [%363.2, %363.3, %170.2], env=e0.1
  void                    Deopt              !v    %180.4, %180.3, %180.1   !
BB144   <- [78]
  void                    Nop                !     
  lgl$#-          %144.1 = true
  goto BB110
BB79   <- [78]
  val?^ | miss    %79.0 = LdVar              eR    ClassDef1, e427.7
  val?            %79.1 = Force!<lazy>       !v    %79.0, e427.7   <other>
  lgl$-           %79.2 = Is                       %79.1, NULL
  lgl$#-          %79.3 = CheckTrueFalse     e     %79.2
  void                    Branch                   %79.3 -> BB143 (if true) | BB80 (if false)
BB459   <- [439]
  lgl$-           %459.0 = CastType           d     dn %439.1
  lgl$-           %459.1 = AsLogical                %459.0
  lgl$-           %459.2 = LOr                      %433.1, %459.1
  lgl$-           %459.3 = %459.2
  goto BB78
BB460   <- [439]
  fs              %460.0 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %460.1 = FrameState         R     0x55de2d664760+86: [%433.1, %439.1], env=e427.7, next=%460.0
  void                    Deopt              !v    %460.1, Typecheck@0x55de2b209930[Type#11], %439.1   !
BB449   <- [447]
  lgl$-           %449.0 = CastType           d     dn %447.1
  lgl$-           %449.1 = AsLogical                %449.0
  lgl$#-          %449.2 = Identical                %449.1, false
  void                    Branch                   %449.2 -> BB255 (if true) | BB236 (if false)
BB450   <- [447]
  void                    Nop                !     
  val+            %450.1 = %447.1
  dr              %450.2 = Typecheck@0x55de29b046d8[Type#2]
  goto BB234
BB469   <- [451]
  int$-           %469.0 = CastType           d     dn %451.2
  lgl$#-          %469.1 = CheckTrueFalse     e     %469.0
  void                    Branch                   %469.1 -> BB230 (if true) | BB228 (if false)
BB470   <- [451]
  fs              %470.0 = FrameState         R     0x55de34de0470+6706: [%451.2], env=e0.1
  void                    Deopt              !v    %470.0, Typecheck@0x55de34c80830[Type#360], %451.2   !
BB186   <- [443]
  val?^ | miss    %186.0 = LdVar              eR    c, e0.1
  lgl$#-          %186.1 = Identical                <blt c>, %186.0   <true>
  void                    Branch                   %186.1 -> BB461 (if true) | BB462 (if false)
BB184   <- [443]
  void                    Nop                !     
  goto BB185
BB110   <- [144, 143, 109]
  val?            %110.0 = Phi                      %109.2:BB109, %143.1:BB143, %144.1:BB144
  val?            %110.1 = %110.0
  val?            %110.2 = PopContext         C     %110.1, %427.3   <(lgl|other)>
  void                    StVar              lW    ok, %110.2, e0.1
  val?^ | miss    %110.4 = LdVar              eR    isFALSE, e0.1
  lgl$#-          %110.5 = Identical                %110.4, function(x) <(rir::DispatchTable*)0x55de2b7a37|...>
  void                    Branch                   %110.5 -> BB453 (if true) | BB454 (if false)
BB143   <- [79]
  void                    Nop                !     
  lgl$#-          %143.1 = false
  goto BB110
BB80   <- [79]
  (cls|spec|blt)  %80.0 = LdFun              !v    @, <0x55de2854ebd8>, e427.7
  prom-           %80.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p88, e427.7
  prom-           %80.2 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p89, e427.7
  val?            %80.3 = Call               !v    %80.0(%80.1, %80.2) e427.7   <vec+>
  void                    StVar              lW    ext, %80.3, e427.7
  lgl$#-          %80.5 = IsType                   %80.3 isA val+   <true>
  val             %80.6 = ChkMissing         e     %80.3
  void                    Branch                   %80.5 -> BB457 (if true) | BB458 (if false)
BB255   <- [449]
  void                    Nop                !     
  lgl$-           %255.1 = %449.1
  goto BB239
BB236   <- [449]
  lgl$#-          %236.0 = IsType                   %447.0 isA lgl-
  void                    Branch                   %236.0 -> BB467 (if true) | BB468 (if false)
BB234   <- [450, 468]
  val?^ | miss    %234.0 = Phi                      %450.1:BB450, %468.1:BB468
  val?^ | miss    %234.1 = %234.0
  dr              %234.2 = Phi                      %450.2:BB450, %468.2:BB468
  dr              %234.3 = %234.2
  fs              %234.4 = FrameState         R     0x55de34de0470+6579: [<blt c>, %399.1], env=e0.1
  fs              %234.5 = FrameState         R     0x55de2f51d9c0+32: [], env=e445.2, next=%234.4
  prom-           %234.6 = MkArg                    %447.0, validObject[0x55de2f03e050]_p75 (!refl), e445.2
  val?~           %234.7 = CastType                 up %234.6
  env             e234.8 = (MkEnv)            l     x=%234.7, parent=R_BaseNamespace, context -1
  fs              %234.9 = FrameState         R     0x55de289a06d0+91: [%447.1], env=e234.8, next=%234.5
  void                    Deopt              !v    %234.9, %234.3, %234.1   !
BB230   <- [469]
  val?^ | miss    %230.0 = LdVar              eR    test, e0.1
  val?            %230.1 = Force!             !v    %230.0, e0.1   <val?_>
  lgl$#-          %230.2 = CheckTrueFalse     we    %230.1
  void                    Branch                   %230.2 -> BB232 (if true) | BB231 (if false)
BB228   <- [469]
  void                    Visible            v     
  lgl$#-          %228.1 = true
  goto BB229
BB461   <- [186]
  val?^ | miss    %461.0 = LdVar              eR    errors, e0.1
  lgl$#-          %461.1 = IsType                   %461.0 isA val?~- | miss
  void                    Branch                   %461.1 -> BB463 (if true) | BB464 (if false)
BB462   <- [186]
  void                    Nop                !     
  lgl$#-          %462.1 = %186.1
  dr              %462.2 = DeadBranchReached@0x55de34c80830[Test#68]
  goto BB182
BB185   <- [184, 211]
  void                    Nop                !     
  int$-           %185.1 = %170.2
  goto BB170
BB453   <- [110]
  val             %453.0 = ChkMissing         e     %110.2
  val+            %453.1 = CallSafeBuiltin    wed   is.logical(%110.2)    <lgl$->
  lgl$#-          %453.2 = IsType                   %453.1 isA lgl$-
  void                    Branch                   %453.2 -> BB455 (if true) | BB456 (if false)
BB454   <- [110]
  fs              %454.0 = FrameState         R     0x55de34de0470+3519: [%321.3, %321.4, %49.2], env=e0.1
  void                    Deopt              !v    %454.0, CallTarget@0x55de34c80830[Call#56], %110.4   !
BB457   <- [80]
  val?^ | miss    %457.0 = LdVar              eR    class2, e427.7
  val?            %457.1 = Force!<wrapped>    !v    %457.0, e427.7   <str$+>
  lgl$#-          %457.2 = IsType                   %457.1 isA val?+
  lgl$#-          %457.3 = IsType                   %80.3 isA val?+
  void                    Branch                   %457.3 -> BB473 (if true) | BB474 (if false)
BB458   <- [80]
  fs              %458.0 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %458.1 = FrameState         R     0x55de2d664760+199: [], env=e427.7, next=%458.0
  void                    Deopt              !v    %458.1, DeadBranchReached@0x55de2b209930[Test#1], %80.5   !
BB239   <- [255, 481]
  lgl$-           %239.0 = Phi                      %481.4:BB481, %255.1:BB255
  lgl$-           %239.1 = %239.0
  lgl$-           %239.2 = AsLogical                %239.1
  lgl$#-          %239.3 = Identical                %239.2, false
  void                    Branch                   %239.3 -> BB254 (if true) | BB242 (if false)
BB467   <- [236]
  lgl-            %467.0 = CastType           d     dn %447.0   <lgl$->
  (int|real)$-    %467.1 = CallSafeBuiltin    wed   length(%467.0)    <int$->
  lgl$#-          %467.2 = IsType                   %467.1 isA int$-
  void                    Branch                   %467.2 -> BB481 (if true) | BB482 (if false)
BB468   <- [236]
  void                    Nop                !     
  val?            %468.1 = %447.0
  dr              %468.2 = Typecheck@0x55de29b046d8[Type#4]
  goto BB234
BB232   <- [230]
  val?^ | miss    %232.0 = LdVar              eR    errors, e0.1
  void                    Visible            v     
  val?            %232.2 = Force!             !     %232.0, e0.1   <val?_>
  val?            %232.3 = %232.2
  goto BB229
BB231   <- [230]
  (cls|spec|blt)  %231.0 = LdFun              !v    gettextf, e0.1
  fs              %231.1 = FrameState         R     0x55de34de0470+6753: [%231.0], env=e0.1
  void                    Deopt              !v    %231.1, DeadCall@0x55de34c80830[Call#114], %231.0   !
BB229   <- [228, 232]
  val?            %229.0 = Phi                      %228.1:BB228, %232.3:BB232
  val?            %229.1 = %229.0
  void                    Return             l     %229.1
BB463   <- [461]
  val?~- | miss   %463.0 = CastType           d     dn %461.0
  val?-           %463.1 = Force!<value>            %463.0,    <str->
  val?^ | miss    %463.2 = LdVar              eR    anyStrings, e0.1
  lgl$#-          %463.3 = Identical                %463.2, %0.2
  void                    Branch                   %463.3 -> BB465 (if true) | BB466 (if false)
BB464   <- [461]
  void                    Nop                !     
  val?^ | miss    %464.1 = %461.0
  dr              %464.2 = Typecheck@0x55de34c80830[Type#329]
  goto BB182
BB182   <- [462, 464, 466, 478]
  val?^ | miss    %182.0 = Phi                      %462.1:BB462, %464.1:BB464, %466.1:BB466, %478.1:BB478
  val?^ | miss    %182.1 = %182.0
  dr              %182.2 = Phi                      %462.2:BB462, %464.2:BB464, %466.2:BB466, %478.2:BB478
  dr              %182.3 = %182.2
  fs              %182.4 = FrameState         R     0x55de34de0470+5903: [%363.2, %363.3, %170.2, %443.1], env=e0.1
  void                    Deopt              !v    %182.4, %182.3, %182.1   !
BB455   <- [453]
  lgl$-           %455.0 = CastType           d     dn %453.1
  lgl$-           %455.1 = AsLogical                %455.0
  lgl$#-          %455.2 = Identical                %455.1, false
  void                    Branch                   %455.2 -> BB131 (if true) | BB115 (if false)
BB456   <- [453]
  void                    Nop                !     
  val+            %456.1 = %453.1
  dr              %456.2 = Typecheck@0x55de2c253078[Type#2]
  goto BB113
BB473   <- [457]
  val?+           %473.0 = CastType           d     dn %80.3   <vec+>
  void                    Branch                   %457.2 -> BB475 (if true) | BB476 (if false)
BB474   <- [457]
  void                    Nop                !     
  val?            %474.1 = %80.3
  dr              %474.2 = Typecheck@0x55de2b209930[Type#15]
  goto BB83
BB254   <- [239]
  void                    Nop                !     
  lgl$-           %254.1 = %239.2
  goto BB243
BB242   <- [239]
  lgl$#-          %242.0 = IsType                   %447.0 isA lgl$-
  void                    Branch                   %242.0 -> BB485 (if true) | BB486 (if false)
BB481   <- [467]
  int$-           %481.0 = CastType           d     dn %467.1
  lgl$-           %481.1 = Eq                 d     %481.0, 1L, elided   <lgl$->
  lgl$-           %481.2 = AsLogical                %481.1
  lgl$-           %481.3 = LAnd                     %449.1, %481.2
  lgl$-           %481.4 = %481.3
  goto BB239
BB482   <- [467]
  fs              %482.0 = FrameState         R     0x55de34de0470+6579: [<blt c>, %399.1], env=e0.1
  fs              %482.1 = FrameState         R     0x55de2f51d9c0+32: [], env=e445.2, next=%482.0
  prom-           %482.2 = MkArg                    %467.0, validObject[0x55de2f03e050]_p75 (!refl), e445.2
  val?~           %482.3 = CastType                 up %482.2
  env             e482.4 = (MkEnv)            l     x=%482.3, parent=R_BaseNamespace, context -1
  fs              %482.5 = FrameState         R     0x55de289a06d0+194: [%449.1, %467.1], env=e482.4, next=%482.1
  void                    Deopt              !v    %482.5, Typecheck@0x55de29b046d8[Type#5], %467.1   !
BB465   <- [463]
  prom-           %465.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p54, e0.1
  val?^           %465.1 = CastType                 up %465.0
  env             e465.2 = MkEnv              l     x=%465.1, parent=e0.1, context 0
  val?^ | miss    %465.3 = LdVar              eR    isTRUE, e465.2
  lgl$#-          %465.4 = Identical                %465.3, function(x) <(rir::DispatchTable*)0x55de2a40ca|...>
  void                    Branch                   %465.4 -> BB477 (if true) | BB478 (if false)
BB466   <- [463]
  void                    Nop                !     
  val?^ | miss    %466.1 = %463.2
  dr              %466.2 = CallTarget@0x55de34c80830[Call#101]
  goto BB182
BB131   <- [455]
  void                    Nop                !     
  lgl$-           %131.1 = %455.1
  goto BB116
BB115   <- [455]
  lgl$#-          %115.0 = IsType                   %110.2 isA lgl$-
  void                    Branch                   %115.0 -> BB471 (if true) | BB472 (if false)
BB113   <- [456, 472, 484]
  val?^ | miss    %113.0 = Phi                      %456.1:BB456, %472.1:BB472, %484.1:BB484
  val?^ | miss    %113.1 = %113.0
  dr              %113.2 = Phi                      %456.2:BB456, %472.2:BB472, %484.2:BB484
  dr              %113.3 = %113.2
  prom-           %113.4 = MkArg                    %110.2, validObject[0x55de2f03e050]_p31 (!refl), e0.1
  val?~           %113.5 = CastType                 up %113.4
  fs              %113.6 = FrameState         R     0x55de34de0470+3551: [%321.3, %321.4, %49.2], env=e0.1
  env             e113.7 = (MkEnv)            l     x=%113.5, parent=R_BaseNamespace, context 0
  fs              %113.8 = FrameState         R     0x55de2b0d00a0+91: [%453.1], env=e113.7, next=%113.6
  void                    Deopt              !v    %113.8, %113.3, %113.1   !
BB475   <- [473]
  val?+           %475.0 = CastType           d     dn %457.1   <str$+>
  val?            %475.1 = Extract2_1D        wed   %473.0, %475.0, elided   <(nil|other)>
  lgl$-           %475.2 = Is                       %475.1, NULL
  void                    StVar              lW    contained, %475.1, e427.7
  lgl$-           %475.4 = Not                d     %475.2, elided
  lgl$#-          %475.5 = CheckTrueFalse     e     %475.4
  void                    Branch                   %475.5 -> BB142 (if true) | BB85 (if false)
BB476   <- [473]
  void                    Nop                !     
  val?            %476.1 = %457.1
  dr              %476.2 = Typecheck@0x55de2b209930[Type#18]
  goto BB83
BB83   <- [474, 476]
  val?^ | miss    %83.0 = Phi                      %474.1:BB474, %476.1:BB476
  val?^ | miss    %83.1 = %83.0
  dr              %83.2 = Phi                      %474.2:BB474, %476.2:BB476
  dr              %83.3 = %83.2
  fs              %83.4 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %83.5 = FrameState         R     0x55de2d664760+253: [%80.3, %457.1], env=e427.7, next=%83.4
  void                    Deopt              !v    %83.5, %83.3, %83.1   !
BB243   <- [254, 485]
  lgl$-           %243.0 = Phi                      %485.5:BB485, %254.1:BB254
  lgl$-           %243.1 = %243.0
  lgl$-           %243.2 = AsLogical                %243.1
  lgl$#-          %243.3 = Identical                %243.2, false
  void                    Branch                   %243.3 -> BB253 (if true) | BB246 (if false)
BB485   <- [242]
  lgl$-           %485.0 = CastType           d     dn %447.0
  lgl$-           %485.1 = CallSafeBuiltin    wed   is.na(%485.0)    <lgl$->
  lgl$-           %485.2 = Not                d     %485.1, elided
  lgl$-           %485.3 = AsLogical                %485.2
  lgl$-           %485.4 = LAnd                     %239.2, %485.3
  lgl$-           %485.5 = %485.4
  goto BB243
BB486   <- [242]
  fs              %486.0 = FrameState         R     0x55de34de0470+6579: [<blt c>, %399.1], env=e0.1
  fs              %486.1 = FrameState         R     0x55de2f51d9c0+32: [], env=e445.2, next=%486.0
  prom-           %486.2 = MkArg                    %447.0, validObject[0x55de2f03e050]_p75 (!refl), e445.2
  val?~           %486.3 = CastType                 up %486.2
  env             e486.4 = (MkEnv)            l     x=%486.3, parent=R_BaseNamespace, context -1
  fs              %486.5 = FrameState         R     0x55de289a06d0+213: [%239.1], env=e486.4, next=%486.1
  void                    Deopt              !v    %486.5, Typecheck@0x55de29b046d8[Type#8], %447.0   !
BB477   <- [465]
  prom-           %477.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p76, e465.2
  val?^           %477.1 = CastType                 up %477.0
  env             e477.2 = (MkEnv)            l     x=%477.1, parent=R_BaseNamespace, context -1
  val?            %477.3 = Force!<lazy>       !vL   %465.1, e477.2   <lgl$->
  prom-           %477.4 = MkArg                    %477.3, validObject[0x55de2f03e050]_p76 (!refl), e465.2
  val?~           %477.5 = CastType                 up %477.4
  void                    StArg              lWd   x, %477.5, e477.2
  lgl$#-          %477.7 = IsEnvStub          R     , e477.2
  void                    Branch                   %477.7 -> BB479 (if true) | BB480 (if false)
BB478   <- [465]
  void                    Nop                !     
  val?^ | miss    %478.1 = %465.3
  dr              %478.2 = CallTarget@0x55de34e2c628[Call#0]
  goto BB182
BB116   <- [131, 471]
  lgl$-           %116.0 = Phi                      %471.1:BB471, %131.1:BB131
  lgl$-           %116.1 = %116.0
  lgl$-           %116.2 = AsLogical                %116.1
  lgl$#-          %116.3 = Identical                %116.2, false
  void                    Branch                   %116.3 -> BB130 (if true) | BB117 (if false)
BB471   <- [115]
  lgl$-           %471.0 = AsLogical                %455.1
  lgl$-           %471.1 = %471.0
  goto BB116
BB472   <- [115]
  void                    Nop                !     
  val?            %472.1 = %110.2
  dr              %472.2 = Typecheck@0x55de2c253078[Type#4]
  goto BB113
BB142   <- [475]
  val             %142.0 = ChkMissing         e     %475.1
  val?            %142.1 = %475.1
  goto BB109
BB85   <- [475]
  val?^ | miss    %85.0 = LdVar              eR    ClassDef2, e427.7
  val?            %85.1 = Force!<lazy>       !v    %85.0, e427.7   <other>
  lgl$-           %85.2 = Is                       %85.1, NULL
  lgl$#-          %85.3 = CheckTrueFalse     e     %85.2
  void                    Branch                   %85.3 -> BB141 (if true) | BB86 (if false)
BB253   <- [243]
  void                    Nop                !     
  lgl$-           %253.1 = %243.2
  goto BB247
BB246   <- [243]
  lgl$-           %246.0 = AsLogical          e     %447.0
  lgl$-           %246.1 = LAnd                     %243.2, %246.0
  lgl$-           %246.2 = %246.1
  goto BB247
BB479   <- [477]
  val+            %479.0 = CallSafeBuiltin    wed   is.logical(%477.3)    <lgl$->
  lgl$#-          %479.1 = IsType                   %479.0 isA lgl$-
  void                    Branch                   %479.1 -> BB489 (if true) | BB490 (if false)
BB480   <- [477]
  fs              %480.0 = FrameState         R     0x55de34de0470+6030: [%363.2, %363.3, %170.2, <blt c>, %463.1], env=e0.1
  fs              %480.1 = FrameState         R     0x55de2f51d9c0+32: [], env=e465.2, next=%480.0
  fs              %480.2 = FrameState         R     0x55de289a06d0+69: [<blt is.logical>, %477.3], env=e477.2, next=%480.1
  void                    Deopt              !v    %480.2, EnvStubMaterialized@0x55de29b046d8[Call#unknown], e477.2   !
BB130   <- [116]
  void                    Nop                !     
  lgl$-           %130.1 = %116.2
  goto BB118
BB117   <- [116]
  lgl$#-          %117.0 = IsType                   %110.2 isA lgl$-
  void                    Branch                   %117.0 -> BB483 (if true) | BB484 (if false)
BB109   <- [142, 108]
  val?            %109.0 = Phi                      %108.2:BB108, %142.1:BB142
  val?            %109.1 = %109.0
  val?            %109.2 = %109.1
  goto BB110
BB141   <- [85]
  void                    Nop                !     
  lgl$#-          %141.1 = false
  goto BB108
BB86   <- [85]
  (cls|spec|blt)  %86.0 = LdFun              !v    @, <0x55de2854ebd8>, e427.7
  prom-           %86.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p90, e427.7
  prom-           %86.2 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p91, e427.7
  val?            %86.3 = Call               !v    %86.0(%86.1, %86.2) e427.7   <vec+>
  void                    StVar              lW    subs, %86.3, e427.7
  val?^ | miss    %86.5 = LdVar              eR    .identC, e427.7
  lgl$#-          %86.6 = Identical                %86.5, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>
  void                    Branch                   %86.6 -> BB487 (if true) | BB488 (if false)
BB247   <- [253, 246]
  lgl$-           %247.0 = Phi                      %246.2:BB246, %253.1:BB253
  lgl$-           %247.1 = %247.0
  lgl$#-          %247.2 = CheckTrueFalse     e     %247.1
  void                    Branch                   %247.2 -> BB252 (if true) | BB248 (if false)
BB489   <- [479]
  lgl$-           %489.0 = CastType           d     dn %479.0
  lgl$-           %489.1 = AsLogical                %489.0
  lgl$#-          %489.2 = Identical                %489.1, false
  void                    Branch                   %489.2 -> BB260 (if true) | BB191 (if false)
BB490   <- [479]
  void                    Nop                !     
  val+            %490.1 = %479.0
  dr              %490.2 = Typecheck@0x55de29b046d8[Type#2]
  goto BB189
BB118   <- [130, 483]
  lgl$-           %118.0 = Phi                      %483.5:BB483, %130.1:BB130
  lgl$-           %118.1 = %118.0
  lgl$-           %118.2 = AsLogical                %118.1
  lgl$#-          %118.3 = Identical                %118.2, false
  void                    Branch                   %118.3 -> BB129 (if true) | BB121 (if false)
BB483   <- [117]
  lgl$-           %483.0 = CastType           d     dn %110.2
  lgl$-           %483.1 = CallSafeBuiltin    wed   is.na(%483.0)    <lgl$->
  lgl$-           %483.2 = Not                d     %483.1, elided
  lgl$-           %483.3 = AsLogical                %483.2
  lgl$-           %483.4 = LAnd                     %116.2, %483.3
  lgl$-           %483.5 = %483.4
  goto BB118
BB484   <- [117]
  void                    Nop                !     
  val?            %484.1 = %110.2
  dr              %484.2 = Typecheck@0x55de2c253078[Type#8]
  goto BB113
BB108   <- [141, 107]
  val?            %108.0 = Phi                      %107.2:BB107, %141.1:BB141
  val?            %108.1 = %108.0
  val?            %108.2 = %108.1
  goto BB109
BB487   <- [86]
  prom-           %487.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p92, e427.7
  val?            %487.1 = StaticCall         !v    .identC[0x55de34d88490](%487.0, "classRepresentation") e427.7   <lgl$->
  lgl$#-          %487.2 = IsType                   %487.1 isA lgl$-
  void                    Branch                   %487.2 -> BB499 (if true) | BB500 (if false)
BB488   <- [86]
  fs              %488.0 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %488.1 = FrameState         R     0x55de2d664760+364: [], env=e427.7, next=%488.0
  void                    Deopt              !v    %488.1, CallTarget@0x55de2b209930[Call#7], %86.5   !
BB252   <- [247]
  val?^ | miss    %252.0 = LdVar              eR    character, e445.2
  lgl$#-          %252.1 = Identical                %252.0, function(length=0L) <(rir::DispatchTable*)0x55|...>
  void                    Branch                   %252.1 -> BB493 (if true) | BB494 (if false)
BB248   <- [247]
  void                    Nop                !     
  val?            %248.1 = %447.0
  goto BB249
BB260   <- [489]
  void                    Nop                !     
  lgl$-           %260.1 = %489.1
  goto BB194
BB191   <- [489]
  lgl$#-          %191.0 = IsType                   %477.3 isA lgl-
  void                    Branch                   %191.0 -> BB491 (if true) | BB492 (if false)
BB189   <- [490, 492]
  val?^ | miss    %189.0 = Phi                      %490.1:BB490, %492.1:BB492
  val?^ | miss    %189.1 = %189.0
  dr              %189.2 = Phi                      %490.2:BB490, %492.2:BB492
  dr              %189.3 = %189.2
  fs              %189.4 = FrameState         R     0x55de34de0470+6030: [%363.2, %363.3, %170.2, <blt c>, %463.1], env=e0.1
  fs              %189.5 = FrameState         R     0x55de2f51d9c0+32: [], env=e465.2, next=%189.4
  fs              %189.6 = FrameState         R     0x55de289a06d0+91: [%479.0], env=e477.2, next=%189.5
  void                    Deopt              !v    %189.6, %189.3, %189.1   !
BB129   <- [118]
  void                    Nop                !     
  lgl$-           %129.1 = %118.2
  goto BB122
BB121   <- [118]
  lgl$#-          %121.0 = IsType                   %110.2 isA lgl$-
  void                    Branch                   %121.0 -> BB495 (if true) | BB496 (if false)
BB499   <- [487]
  lgl$-           %499.0 = CastType           d     dn %487.1
  lgl$-           %499.1 = Not                d     %499.0, elided
  lgl$-           %499.2 = AsLogical                %499.1
  lgl$#-          %499.3 = Identical                %499.2, false
  void                    Branch                   %499.3 -> BB92 (if true) | BB91 (if false)
BB500   <- [487]
  void                    Nop                !     
  val?            %500.1 = %487.1
  dr              %500.2 = Typecheck@0x55de2b209930[Type#26]
  goto BB89
BB493   <- [252]
  str-            %493.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  str-            %493.1 = %493.0
  goto BB249
BB494   <- [252]
  fs              %494.0 = FrameState         R     0x55de34de0470+6579: [<blt c>, %399.1], env=e0.1
  fs              %494.1 = FrameState         R     0x55de2f51d9c0+32: [], env=e445.2, next=%494.0
  prom-           %494.2 = MkArg                    %447.0, validObject[0x55de2f03e050]_p75 (!refl), e445.2
  val?~           %494.3 = CastType                 up %494.2
  env             e494.4 = (MkEnv)            l     x=%494.3, parent=R_BaseNamespace, context -1
  fs              %494.5 = FrameState         R     0x55de289a06d0+319: [%243.1], env=e494.4, next=%494.1
  void                    Deopt              !v    %494.5, CallTarget@0x55de34e2c628[Call#1], %252.0   !
BB249   <- [248, 493]
  val?            %249.0 = Phi                      %248.1:BB248, %493.1:BB493   <str->
  val?            %249.1 = %249.0
  lgl$#-          %249.2 = IsType                   %249.1 isA val?-
  void                    Branch                   %249.2 -> BB503 (if true) | BB504 (if false)
BB194   <- [260, 501]
  lgl$-           %194.0 = Phi                      %501.4:BB501, %260.1:BB260
  lgl$-           %194.1 = %194.0
  lgl$-           %194.2 = AsLogical                %194.1
  lgl$#-          %194.3 = Identical                %194.2, false
  void                    Branch                   %194.3 -> BB259 (if true) | BB197 (if false)
BB491   <- [191]
  lgl-            %491.0 = CastType           d     dn %477.3   <lgl$->
  (int|real)$-    %491.1 = CallSafeBuiltin    wed   length(%491.0)    <int$->
  lgl$#-          %491.2 = IsType                   %491.1 isA int$-
  void                    Branch                   %491.2 -> BB501 (if true) | BB502 (if false)
BB492   <- [191]
  void                    Nop                !     
  val?            %492.1 = %477.3
  dr              %492.2 = Typecheck@0x55de29b046d8[Type#4]
  goto BB189
BB122   <- [129, 495]
  lgl$-           %122.0 = Phi                      %495.4:BB495, %129.1:BB129
  lgl$-           %122.1 = %122.0
  lgl$#-          %122.2 = CheckTrueFalse     e     %122.1
  void                    Branch                   %122.2 -> BB126 (if true) | BB123 (if false)
BB495   <- [121]
  lgl$-           %495.0 = CastType           d     dn %110.2
  lgl$-           %495.1 = Not                d     %495.0, elided
  lgl$-           %495.2 = AsLogical                %495.1
  lgl$-           %495.3 = LAnd                     %118.2, %495.2
  lgl$-           %495.4 = %495.3
  goto BB122
BB496   <- [121]
  void                    Nop                !     
  val?            %496.1 = %110.2
  dr              %496.2 = Typecheck@0x55de2c253078[Type#10]
  goto BB119
BB92   <- [499]
  lgl$#-          %92.0 = CheckTrueFalse     e     %499.2
  void                    Branch                   %92.0 -> BB138 (if true) | BB93 (if false)
BB91   <- [499]
  (cls|spec|blt)  %91.0 = LdFun              !v    isClassUnion, e427.7
  fs              %91.1 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %91.2 = FrameState         R     0x55de2d664760+419: [%499.2, %91.0], env=e427.7, next=%91.1
  void                    Deopt              !v    %91.2, DeadCall@0x55de2b209930[Call#9], %91.0   !
BB89   <- [500, 506]
  val?^ | miss    %89.0 = Phi                      %500.1:BB500, %506.1:BB506
  val?^ | miss    %89.1 = %89.0
  dr              %89.2 = Phi                      %500.2:BB500, %506.2:BB506
  dr              %89.3 = %89.2
  fs              %89.4 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %89.5 = FrameState         R     0x55de2d664760+401: [%487.1], env=e427.7, next=%89.4
  void                    Deopt              !v    %89.5, %89.3, %89.1   !
BB503   <- [249]
  val?-           %503.0 = CastType           d     dn %249.1   <str->
  val+            %503.1 = CallSafeBuiltin    wed   c(%399.1, %503.0)    <str->
  void                    StVar              lW    errors, %503.1, e0.1
  goto BB223
BB504   <- [249]
  fs              %504.0 = FrameState         R     0x55de34de0470+6579: [<blt c>, %399.1], env=e0.1
  fs              %504.1 = FrameState         R     0x55de2f51d9c0+94: [%249.1], env=e445.2, next=%504.0
  void                    Deopt              !v    %504.1, Typecheck@0x55de34c80830[Type#356], %249.1   !
BB259   <- [194]
  void                    Nop                !     
  lgl$-           %259.1 = %194.2
  goto BB198
BB197   <- [194]
  lgl$#-          %197.0 = IsType                   %477.3 isA lgl$-
  void                    Branch                   %197.0 -> BB509 (if true) | BB510 (if false)
BB501   <- [491]
  int$-           %501.0 = CastType           d     dn %491.1
  lgl$-           %501.1 = Eq                 d     %501.0, 1L, elided   <lgl$->
  lgl$-           %501.2 = AsLogical                %501.1
  lgl$-           %501.3 = LAnd                     %489.1, %501.2
  lgl$-           %501.4 = %501.3
  goto BB194
BB502   <- [491]
  fs              %502.0 = FrameState         R     0x55de34de0470+6030: [%363.2, %363.3, %170.2, <blt c>, %463.1], env=e0.1
  fs              %502.1 = FrameState         R     0x55de2f51d9c0+32: [], env=e465.2, next=%502.0
  fs              %502.2 = FrameState         R     0x55de289a06d0+194: [%489.1, %491.1], env=e477.2, next=%502.1
  void                    Deopt              !v    %502.2, Typecheck@0x55de29b046d8[Type#5], %491.1   !
BB126   <- [122]
  val?^ | miss    %126.0 = LdVar              eR    c, e0.1
  lgl$#-          %126.1 = Identical                <blt c>, %126.0   <@?>
  void                    Branch                   %126.1 -> BB128 (if true) | BB127 (if false)
BB123   <- [122]
  val?^ | miss    %123.0 = LdVar              eR    complete, e0.1
  lgl$#-          %123.1 = IsType                   %123.0 isA lgl$~-
  void                    Branch                   %123.1 -> BB497 (if true) | BB498 (if false)
BB119   <- [496, 498]
  val?^ | miss    %119.0 = Phi                      %496.1:BB496, %498.1:BB498
  val?^ | miss    %119.1 = %119.0
  dr              %119.2 = Phi                      %496.2:BB496, %498.2:BB498
  dr              %119.3 = %119.2
  prom-           %119.4 = MkArg                    %110.2, validObject[0x55de2f03e050]_p31 (!refl), e0.1
  val?~           %119.5 = CastType                 up %119.4
  fs              %119.6 = FrameState         R     0x55de34de0470+3551: [%321.3, %321.4, %49.2], env=e0.1
  env             e119.7 = (MkEnv)            l     x=%119.5, parent=R_BaseNamespace, context 0
  fs              %119.8 = FrameState         R     0x55de2b0d00a0+319: [%118.1], env=e119.7, next=%119.6
  void                    Deopt              !v    %119.8, %119.3, %119.1   !
BB138   <- [92]
  val?^ | miss    %138.0 = LdVar              eR    any, e427.7
  lgl$#-          %138.1 = Identical                <blt any>, %138.0   <@?>
  void                    Branch                   %138.1 -> BB140 (if true) | BB139 (if false)
BB93   <- [92]
  val?^ | miss    %93.0 = LdVar              eR    match, e427.7
  lgl$#-          %93.1 = Identical                %93.0, function(x, table, nomatch=NA, incomparables=N|...>
  void                    Branch                   %93.1 -> BB505 (if true) | BB506 (if false)
BB198   <- [259, 509]
  lgl$-           %198.0 = Phi                      %509.5:BB509, %259.1:BB259
  lgl$-           %198.1 = %198.0
  lgl$-           %198.2 = AsLogical                %198.1
  lgl$#-          %198.3 = Identical                %198.2, false
  void                    Branch                   %198.3 -> BB258 (if true) | BB199 (if false)
BB509   <- [197]
  lgl$-           %509.0 = CastType           d     dn %477.3
  lgl$-           %509.1 = CallSafeBuiltin    wed   is.na(%509.0)    <lgl$->
  lgl$-           %509.2 = Not                d     %509.1, elided
  lgl$-           %509.3 = AsLogical                %509.2
  lgl$-           %509.4 = LAnd                     %194.2, %509.3
  lgl$-           %509.5 = %509.4
  goto BB198
BB510   <- [197]
  fs              %510.0 = FrameState         R     0x55de34de0470+6030: [%363.2, %363.3, %170.2, <blt c>, %463.1], env=e0.1
  fs              %510.1 = FrameState         R     0x55de2f51d9c0+32: [], env=e465.2, next=%510.0
  fs              %510.2 = FrameState         R     0x55de289a06d0+213: [%194.1], env=e477.2, next=%510.1
  void                    Deopt              !v    %510.2, Typecheck@0x55de29b046d8[Type#8], %477.3   !
BB128   <- [126]
  val?^ | miss    %128.0 = LdVar              eR    errors, e0.1
  val?            %128.1 = Force!             !v    %128.0, e0.1   <val?_>
  (cls|spec|blt)  %128.2 = LdFun              !v    paste0, e0.1
  fs              %128.3 = FrameState         R     0x55de34de0470+3651: [%321.3, %321.4, %49.2, <blt c>, %128.1, %128.2], env=e0.1
  void                    Deopt              !v    %128.3, DeadCall@0x55de34c80830[Call#60], %128.2   !
BB127   <- [126]
  (cls|spec|blt)  %127.0 = LdFun              !v    c, e0.1
  fs              %127.1 = FrameState         R     0x55de34de0470+3595: [%321.3, %321.4, %49.2, %127.0], env=e0.1
  void                    Deopt              !v    %127.1, DeadCall@0x55de34c80830[Call#57], %127.0   !
BB497   <- [123]
  lgl$~-          %497.0 = CastType           d     dn %123.0
  lgl$-           %497.1 = Force!<wrapped>          %497.0,    <lgl$->
  lgl$-           %497.2 = Not                d     %497.1, elided
  lgl$#-          %497.3 = CheckTrueFalse     e     %497.2
  void                    Branch                   %497.3 -> BB125 (if true) | BB124 (if false)
BB498   <- [123]
  void                    Nop                !     
  val?^ | miss    %498.1 = %123.0
  dr              %498.2 = Typecheck@0x55de34c80830[Type#222]
  goto BB119
BB140   <- [138]
  (cls|spec|blt)  %140.0 = LdFun              !v    %in%, e427.7
  fs              %140.1 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %140.2 = FrameState         R     0x55de2d664760+961: [<blt any>, %140.0], env=e427.7, next=%140.1
  void                    Deopt              !v    %140.2, DeadCall@0x55de2b209930[Call#20], %140.0   !
BB139   <- [138]
  (cls|spec|blt)  %139.0 = LdFun              !v    any, e427.7
  fs              %139.1 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %139.2 = FrameState         R     0x55de2d664760+924: [%139.0], env=e427.7, next=%139.1
  void                    Deopt              !v    %139.2, DeadCall@0x55de2b209930[Call#15], %139.0   !
BB505   <- [93]
  prom-           %505.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p95, e427.7
  val?^           %505.1 = CastType                 up %505.0
  val?^ | miss    %505.2 = LdVar              eR    class1, e427.7
  val?            %505.3 = Force!<wrapped>    !v    %505.2, e427.7   <str$+>
  prom-           %505.4 = MkArg                    %505.3, validObject[0x55de2f03e050]_p94 (!refl), e427.7
  val?~           %505.5 = CastType                 up %505.4
  env             e505.6 = (MkEnv)            l     x=%505.5, table=%505.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  lgl$#-          %505.7 = IsEnvStub          R     , e505.6
  void                    Branch                   %505.7 -> BB507 (if true) | BB508 (if false)
BB506   <- [93]
  void                    Nop                !     
  val?^ | miss    %506.1 = %93.0
  dr              %506.2 = CallTarget@0x55de2b209930[Call#10]
  goto BB89
BB258   <- [198]
  void                    Nop                !     
  lgl$-           %258.1 = %198.2
  goto BB200
BB199   <- [198]
  lgl$-           %199.0 = AsLogical          e     %477.3
  lgl$-           %199.1 = LAnd                     %198.2, %199.0
  lgl$-           %199.2 = %199.1
  goto BB200
BB125   <- [497]
  void                    Nop                !     
  int$-           %125.1 = %49.2
  goto BB49
BB124   <- [497]
  (cls|spec|blt)  %124.0 = LdFun              !v    anyStrings, e0.1
  fs              %124.1 = FrameState         R     0x55de34de0470+3805: [%321.3, %321.4, %49.2, %124.0], env=e0.1
  void                    Deopt              !v    %124.1, DeadCall@0x55de34c80830[Call#62], %124.0   !
BB507   <- [505]
  val?            %507.0 = Force!<lazy>       !vL   %505.1, e505.6   <val?+>
  lgl$#-          %507.1 = IsType                   %507.0 isA val?+
  lgl$#-          %507.2 = IsEnvStub          R     , e505.6
  void                    Branch                   %507.2 -> BB511 (if true) | BB512 (if false)
BB508   <- [505]
  fs              %508.0 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %508.1 = FrameState         R     0x55de2d664760+496: [], env=e427.7, next=%508.0
  env             e508.2 = (MkEnv)            l     x=%505.5, table=%505.1, nomatch(miss)=NA, incomparables(miss)=nil, parent=R_BaseNamespace, context 0
  fs              %508.3 = FrameState         R     0x55de28d63d40+9: [%505.3], env=e508.2, next=%508.1
  void                    Deopt              !v    %508.3, EnvStubMaterialized@0x55de28db6cb0[Call#unknown], e505.6   !
BB200   <- [258, 199]
  lgl$-           %200.0 = Phi                      %199.2:BB199, %258.1:BB258
  lgl$-           %200.1 = %200.0
  lgl$#-          %200.2 = CheckTrueFalse     e     %200.1
  void                    Branch                   %200.2 -> BB257 (if true) | BB203 (if false)
BB511   <- [507]
  lgl$#-          %511.0 = IsType                   %505.3 isA val?+
  void                    Branch                   %511.0 -> BB513 (if true) | BB514 (if false)
BB512   <- [507]
  void                    Nop                !     
  env             e512.1 = e505.6
  dr              %512.2 = EnvStubMaterialized@0x55de28db6cb0[Call#unknown]
  goto BB96
BB257   <- [200]
  val?^ | miss    %257.0 = LdVar              eR    character, e465.2
  lgl$#-          %257.1 = Identical                %257.0, function(length=0L) <(rir::DispatchTable*)0x55|...>
  void                    Branch                   %257.1 -> BB517 (if true) | BB518 (if false)
BB203   <- [200]
  void                    Nop                !     
  val?            %203.1 = %477.3
  goto BB204
BB513   <- [511]
  val?+           %513.0 = CastType           d     dn %505.3   <(int|str)+>
  void                    Branch                   %507.1 -> BB515 (if true) | BB516 (if false)
BB514   <- [511]
  void                    Nop                !     
  val?            %514.1 = %505.3
  dr              %514.2 = Typecheck@0x55de28db6cb0[Type#0]
  goto BB96
BB96   <- [512, 514, 516]
  val?^ | miss    %96.0 = Phi                      e512.1:BB512, %514.1:BB514, %516.1:BB516
  val?^ | miss    %96.1 = %96.0
  dr              %96.2 = Phi                      %512.2:BB512, %514.2:BB514, %516.2:BB516
  dr              %96.3 = %96.2
  fs              %96.4 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %96.5 = FrameState         R     0x55de2d664760+496: [], env=e427.7, next=%96.4
  fs              %96.6 = FrameState         R     0x55de28d63d40+23: [%505.3, %507.0], env=e505.6, next=%96.5
  void                    Deopt              !v    %96.6, %96.3, %96.1   !
BB517   <- [257]
  str-            %517.0 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
  str-            %517.1 = %517.0
  goto BB204
BB518   <- [257]
  fs              %518.0 = FrameState         R     0x55de34de0470+6030: [%363.2, %363.3, %170.2, <blt c>, %463.1], env=e0.1
  fs              %518.1 = FrameState         R     0x55de2f51d9c0+32: [], env=e465.2, next=%518.0
  fs              %518.2 = FrameState         R     0x55de289a06d0+342: [%200.1], env=e477.2, next=%518.1
  void                    Deopt              !v    %518.2, CallTarget@0x55de34e2c628[Call#1], %257.0   !
BB204   <- [203, 517]
  val?            %204.0 = Phi                      %203.1:BB203, %517.1:BB517   <str->
  val?            %204.1 = %204.0
  lgl$#-          %204.2 = IsType                   %204.1 isA val?-
  void                    Branch                   %204.2 -> BB523 (if true) | BB524 (if false)
BB515   <- [513]
  val?+           %515.0 = CastType           d     dn %507.0
  val+            %515.1 = CallSafeBuiltin    wed   match(%513.0, %515.0, NA, nil)    <int$->
  lgl$#-          %515.2 = IsType                   %515.1 isA int$-
  void                    Branch                   %515.2 -> BB519 (if true) | BB520 (if false)
BB516   <- [513]
  void                    Nop                !     
  val?            %516.1 = %507.0
  dr              %516.2 = Typecheck@0x55de28db6cb0[Type#1]
  goto BB96
BB523   <- [204]
  val?-           %523.0 = CastType           d     dn %204.1   <str->
  val+            %523.1 = CallSafeBuiltin    wed   c(%463.1, %523.0)    <str->
  void                    StVar              lW    errors, %523.1, e0.1
  val?^ | miss    %523.3 = LdVar              eR    length, e0.1
  lgl$#-          %523.4 = Identical                <blt length>, %523.3   <true>
  void                    Branch                   %523.4 -> BB527 (if true) | BB528 (if false)
BB524   <- [204]
  fs              %524.0 = FrameState         R     0x55de34de0470+6030: [%363.2, %363.3, %170.2, <blt c>, %463.1], env=e0.1
  fs              %524.1 = FrameState         R     0x55de2f51d9c0+94: [%204.1], env=e465.2, next=%524.0
  void                    Deopt              !v    %524.1, Typecheck@0x55de34c80830[Type#334], %204.1   !
BB519   <- [515]
  int$-           %519.0 = CastType           d     dn %515.1
  void                    StVar              lW    i, %519.0, e427.7
  val?^ | miss    %519.2 = LdVar              eR    is.na, e427.7
  lgl$#-          %519.3 = Identical                <blt is.na>, %519.2   <true>
  void                    Branch                   %519.3 -> BB521 (if true) | BB522 (if false)
BB520   <- [515]
  fs              %520.0 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %520.1 = FrameState         R     0x55de2d664760+496: [], env=e427.7, next=%520.0
  fs              %520.2 = FrameState         R     0x55de28d63d40+69: [%515.1], env=e505.6, next=%520.1
  void                    Deopt              !v    %520.2, Typecheck@0x55de2b209930[Type#32], %515.1   !
BB527   <- [523]
  (int|real)$-    %527.0 = CallSafeBuiltin    wed   length(%523.1)    <int$->
  lgl$#-          %527.1 = IsType                   %527.0 isA int$-
  void                    Branch                   %527.1 -> BB529 (if true) | BB530 (if false)
BB528   <- [523]
  fs              %528.0 = FrameState         R     0x55de34de0470+6066: [%363.2, %363.3, %170.2], env=e0.1
  void                    Deopt              !v    %528.0, DeadBranchReached@0x55de34c80830[Test#69], %523.4   !
BB521   <- [519]
  lgl$-           %521.0 = CallSafeBuiltin    wed   is.na(%519.0)    <lgl$->
  lgl$-           %521.1 = Not                d     %521.0, elided
  int-            %521.2 = Extract1_1D        wed   %519.0, %521.1, elided   <int->
  void                    StVar              lW    i, %521.2, e427.7
  val?^ | miss    %521.4 = LdVar              eR    length, e427.7
  lgl$#-          %521.5 = Identical                <blt length>, %521.4   <true>
  void                    Branch                   %521.5 -> BB525 (if true) | BB526 (if false)
BB522   <- [519]
  fs              %522.0 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %522.1 = FrameState         R     0x55de2d664760+510: [], env=e427.7, next=%522.0
  void                    Deopt              !v    %522.1, DeadBranchReached@0x55de2b209930[Test#3], %519.3   !
BB529   <- [527]
  int$-           %529.0 = CastType           d     dn %527.0
  lgl$#-          %529.1 = CheckTrueFalse     e     %529.0
  void                    Branch                   %529.1 -> BB212 (if true) | BB211 (if false)
BB530   <- [527]
  fs              %530.0 = FrameState         R     0x55de34de0470+6157: [%363.2, %363.3, %170.2, %527.0], env=e0.1
  void                    Deopt              !v    %530.0, Typecheck@0x55de34c80830[Type#338], %527.0   !
BB525   <- [521]
  (int|real)$-    %525.0 = CallSafeBuiltin    wed   length(%521.2)    <int$->
  lgl$#-          %525.1 = IsType                   %525.0 isA int$-
  void                    Branch                   %525.1 -> BB531 (if true) | BB532 (if false)
BB526   <- [521]
  fs              %526.0 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %526.1 = FrameState         R     0x55de2d664760+668: [], env=e427.7, next=%526.0
  void                    Deopt              !v    %526.1, DeadBranchReached@0x55de2b209930[Test#4], %521.5   !
BB212   <- [529]
  void                    Nop                !     
  goto BB213
BB211   <- [529]
  void                    Nop                !     
  goto BB185
BB531   <- [525]
  int$-           %531.0 = CastType           d     dn %525.0
  lgl$#-          %531.1 = CheckTrueFalse     e     %531.0
  void                    Branch                   %531.1 -> BB132 (if true) | BB106 (if false)
BB532   <- [525]
  fs              %532.0 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %532.1 = FrameState         R     0x55de2d664760+759: [%525.0], env=e427.7, next=%532.0
  void                    Deopt              !v    %532.1, Typecheck@0x55de2b209930[Type#42], %525.0   !
BB132   <- [531]
  val?^ | miss    %132.0 = LdVar              eR    subs, e427.7
  val?            %132.1 = Force!             !v    %132.0, e427.7   <val?_>
  lgl$#-          %132.2 = IsType                   %132.1 isA val+   <@?>
  void                    Branch                   %132.2 -> BB135 (if true) | BB133 (if false)
BB106   <- [531]
  void                    Nop                !     
  lgl$#-          %106.1 = false
  goto BB107
BB135   <- [132]
  val?^ | miss    %135.0 = LdVar              eR    i, e427.7
  val?            %135.1 = Force!             !v    %135.0, e427.7   <val?_>
  lgl$#-          %135.2 = IsType                   %135.1 isA val?+
  void                    Branch                   %135.2 -> BB533 (if true) | BB534 (if false)
BB133   <- [132]
  prom-           %133.0 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p99, e427.7
  prom-           %133.1 = %133.0
  goto BB134
BB107   <- [106, 134]
  val?            %107.0 = Phi                      %106.1:BB106, %134.3:BB134
  val?            %107.1 = %107.0
  val?            %107.2 = %107.1
  goto BB108
BB533   <- [135]
  val?+           %533.0 = CastType           d     dn %135.1   <val?_>
  val?            %533.1 = Extract1_1D        wed   %533.0, 1L, elided   <val?_>
  val?            %533.2 = %533.1
  goto BB134
BB534   <- [135]
  fs              %534.0 = FrameState         R     0x55de34de0470+3505: [%321.3, %321.4, %49.2], env=e0.1
  fs              %534.1 = FrameState         R     0x55de2d664760+835: [%132.1, %135.1], env=e427.7, next=%534.0
  void                    Deopt              !v    %534.1, Typecheck@0x55de2b209930[Type#46], %135.1   !
BB134   <- [133, 533]
  val?            %134.0 = Phi                      %533.2:BB533, %133.1:BB133
  val?            %134.1 = %134.0
  val?            %134.2 = Extract2_1D        !v    %132.1, %134.1, e427.7   <val?_>
  val?            %134.3 = %134.2
  goto BB107
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    Class, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    slots, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...>) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p13, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x55de35175340>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p11, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p12, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <val?->
  val?            %13.4 = %13.3
  goto BB11
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x55de2854f748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p16, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    where, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  lgl$-           %0.4  = Is                       %0.3, logical
  lgl$-           %0.5  = Is                       %0.3, integer
  lgl$-           %0.6  = Is                       %0.3, double
  lgl$-           %0.7  = Is                       %0.3, complex
  lgl$-           %0.8  = Is                       %0.3, character   <true>
  lgl$-           %0.9  = Is                       %0.3, raw
  lgl$-           %0.10 = Is                       %0.3, list
  lgl$-           %0.11 = Is                       %0.3, expression
  lgl$-           %0.12 = LOr                      %0.11, %0.10
  lgl$-           %0.13 = LOr                      %0.12, %0.9
  lgl$-           %0.14 = LOr                      %0.13, %0.8
  lgl$-           %0.15 = LOr                      %0.14, %0.7
  lgl$-           %0.16 = LOr                      %0.15, %0.6
  lgl$-           %0.17 = LOr                      %0.16, %0.5
  lgl$-           %0.18 = LOr                      %0.17, %0.4   <true>
  lgl$#-          %0.19 = Identical                %0.18, true
  void                    Branch                   %0.19 -> BB2 (if true) | BB23 (if false)
BB2   <- [0]
  int$-           %2.0  = Length                   %0.3
  lgl$-           %2.1  = Eq                 vd    %2.0, 1L, elided   <true>
  lgl$#-          %2.2  = Identical                %2.1, true
  void                    Branch                   %2.2 -> BB5 (if true) | BB3 (if false)
BB23   <- [0]
  void                    Nop                !     
  goto BB4
BB5   <- [2]
  lgl$-           %5.0  = Is                       %0.3, Factor   <false>
  lgl$#-          %5.1  = Identical                %5.0, false
  void                    Branch                   %5.1 -> BB22 (if true) | BB6 (if false)
BB3   <- [2]
  void                    Nop                !     
  goto BB4
BB4   <- [23, 3]
  val?            %4.0  = CallBuiltin        !     stop(true, "EXPR must be a length 1 vector") e0.0
  void                    Unreachable              
BB22   <- [5]
  void                    Nop                !     
  goto BB7
BB6   <- [5]
  val?            %6.0  = CallBuiltin        !     warning(true, false, false, "EXPR is a "factor", treated as integer.
 Cons|...>) e0.0
  goto BB7
BB7   <- [22, 6]
  lgl$#-          %7.0  = Identical                %0.8, true
  void                    Branch                   %7.0 -> BB16 (if true) | BB8 (if false)
BB16   <- [7]
  val?            %16.0 = CallBuiltin        !     is.na(%0.3) e0.0
  lgl$#-          %16.1 = CheckTrueFalse     we    %16.0   <false>
  void                    Branch                   %16.1 -> BB21 (if true) | BB17 (if false)
BB8   <- [7]
  int$-           %8.0  = AsSwitchIdx              %0.3
  lgl$-           %8.1  = Eq                 vd    %8.0, 1L, elided
  lgl$#-          %8.2  = CheckTrueFalse     e     %8.1   <@?>
  void                    Branch                   %8.2 -> BB14 (if true) | BB9 (if false)
BB21   <- [16]
  void                    Nop                !     
  str$#-          %21.1 = "NA"
  goto BB18
BB17   <- [16]
  void                    Nop                !     
  val?            %17.1 = %0.3
  goto BB18
BB14   <- [8]
  void                    Nop                !     
  goto BB15
BB9   <- [8]
  lgl$-           %9.0  = Eq                 vd    %8.0, 2L, elided
  lgl$#-          %9.1  = CheckTrueFalse     e     %9.0   <@?>
  void                    Branch                   %9.1 -> BB12 (if true) | BB10 (if false)
BB18   <- [21, 17]
  val?            %18.0 = Phi                      %21.1:BB21, %17.1:BB17
  val?            %18.1 = %18.0
  val?            %18.2 = Eq                 !     %18.1, .S3Class, e0.0
  lgl$#-          %18.3 = CheckTrueFalse     we    %18.2   <false>
  void                    Branch                   %18.3 -> BB20 (if true) | BB19 (if false)
BB15   <- [14, 20]
  (cls|spec|blt)  %15.0 = LdFun              !     S3Class, e0.0
  prom-           %15.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p25, e0.0
  val?            %15.2 = Call               !     %15.0(%15.1) e0.0   <val?_>
  val?            %15.3 = %15.2
  goto BB11
BB12   <- [9]
  void                    Nop                !     
  goto BB13
BB10   <- [9]
  void                    Nop                !     
  nil-            %10.1 = nil
  goto BB11
BB20   <- [18]
  void                    Nop                !     
  goto BB15
BB19   <- [18]
  void                    Nop                !     
  goto BB13
BB11   <- [10, 15, 13]
  val?            %11.0 = Phi                      %10.1:BB10, %13.4:BB13, %15.3:BB15
  val?            %11.1 = %11.0
  void                    Return             l     %11.1
BB13   <- [12, 19]
  (cls|spec|blt)  %13.0 = LdFun              !     slot, <0x55de35175340>, e0.0
  prom-           %13.1 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p23, e0.0
  prom-           %13.2 = MkArg                    unboundValue, validObject[0x55de2f03e050]_p24, e0.0
  val?            %13.3 = Call               !     %13.0(%13.1, %13.2) e0.0   <val?>
  val?            %13.4 = %13.3
  goto BB11
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <(cls|other)>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    namei, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x55de2854f748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p28, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    sloti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 30:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDefi, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ok, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <(lgl|other)>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 39:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 47:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 48:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 49:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    exti, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 50:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 51:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 52:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 53:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 54:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     validityMethod, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p55, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 55:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     as, <0x55de2ab1fd38>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p56, e0.0
  prom-           %0.3  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p57, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <other>
  void                    Return             l     %0.4
Prom 56:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 57:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    superClass, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 58:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 59:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    validity, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 60:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     validityMethod, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p61, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 61:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    object, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 65:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p66, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 66:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 67:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 68:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 70:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getOption, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p71, e0.0
  val?            %0.3  = NamedCall          !     %0.1("try.outFile", default=%0.2) e0.0   <val?_>
  void                    Return             l     %0.3
Prom 71:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     stderr, e0.0
  val?            %0.2  = Call               !     %0.1() e0.0   <val?_>
  void                    Return             l     %0.2
Prom 72:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    expr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?+>
  void                    Return             l     %0.3
Prom 73:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    try@Prom(3)0, e0.0
  void                    Return             l     %0.1
Prom 75:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 76:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 79:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     getClassDef, <0x55de296f8cd0>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p80, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <other>
  void                    Return             l     %0.3
Prom 80:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 81:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  val?            %0.2  = Force<lazy>        !v    %0.1, e0.0   <str$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 82:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 87:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 88:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 89:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 90:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 91:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subclasses, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 92:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     class, <0x55de2854f748>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p93, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str$+>
  void                    Return             l     %0.3
Prom 93:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ClassDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 94:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 95:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55de2854f470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, validObject[0x55de2f03e050]_p96, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <(nil|str)->
  void                    Return             l     %0.3
Prom 96:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    subs, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 99:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    i, e0.0
  val?            %0.2  = Force              !v    %0.1, e0.0   <val?_>
  val?            %0.3  = Extract1_1D        !v    %0.2, 1L, e0.0   <val?_>
  void                    Visible            v     
  void                    Return             l     %0.3

│ validObject[0x55de2f03e050]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
