
┌──────────────────────────────────────────────────────────────────────────────┐
│ asMethod[0x55de2cc11c30]                                                     │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2                     │
│ Properties:                                                                  │
├────── Final PIR Version
asMethod[0x55de2cc11c30]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    .T2Cmat, <env 0x55de2a7fa958>
  lgl$#-          %0.2  = Identical                %0.1, function(from, isTri=is(from, "triangularMatri|...>
  void                    Branch                   %0.2 -> BB6 (if true) | BB7 (if false)
BB6   <- [0]
  env             e6.0  = MkEnv              l     from=%0.0, to(miss)="CsparseMatrix", strict(miss)=true, parent=<env 0x55de2a7fa958>, context 1
  prom-           %6.1  = MkArg                    unboundValue, asMethod[0x55de2cc11c30]_p2, e6.0
  ct              %6.2  = PushContext        lCL   %6.1, true, .T2Cmat(.diag2tT(from, "U", "d"), isTri=TRUE), function(from, isTri=is(from, "triangularMatri|...>, e6.0
  val?^           %6.3  = CastType                 up %6.1
  val?^ | miss    %6.4  = LdVar              eR    .Call, <env 0x55de2a7fa958>
  lgl$#-          %6.5  = Identical                <blt .Call>, %6.4   <true>
  void                    Branch                   %6.5 -> BB8 (if true) | BB9 (if false)
BB7   <- [0]
  env             e7.0  = (MkEnv)            l     from=%0.0, to(miss)="CsparseMatrix", strict(miss)=true, parent=<env 0x55de2a7fa958>, context 1
  fs              %7.1  = FrameState         R     0x55de330c3040+0: [], env=e7.0
  void                    Deopt              !v    %7.1, CallTarget@0x55de2f754770[Call#0], %0.1
BB8   <- [6]
  val?^ | miss    %8.0  = LdVar              eR    Tsparse_to_Csparse, <env 0x55de2a7fa958>
  env             e8.1  = MkEnv              l     from=%6.3, isTri=true, parent=<env 0x55de2a7fa958>, context 1
  val?            %8.2  = Force!<value>      !v    %8.0, e8.1   <vec>
  val?^ | miss    %8.3  = LdVar              eR    from, e8.1
  val?            %8.4  = Force!<lazy>       !v    %8.3, e8.1   <other>
  val?^ | miss    %8.5  = LdVar              eR    isTri, e8.1
  val?            %8.6  = Force!<value>      !v    %8.5, e8.1   <lgl$->
  val?            %8.7  = CallBuiltin        !     .Call(%8.2, %8.4, %8.6) e8.1   <other>
  val?            %8.8  = PopContext         C     %8.7, %6.2   <other>
  void                    Return             l     %8.8
BB9   <- [6]
  fs              %9.0  = FrameState         R     0x55de330c3040+45: [], env=e6.0
  env             e9.1  = (MkEnv)            l     from=%6.3, isTri=true, parent=<env 0x55de2a7fa958>, context 1
  fs              %9.2  = FrameState         R     0x55de323f2700+17: [<blt .Call>, %6.5], env=e9.1, next=%9.0
  void                    Deopt              !v    %9.2, DeadBranchReached@0x55de35abb718[Test#0], %6.5   !
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     .diag2tT, <0x55de34fe99b8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, asMethod[0x55de2cc11c30]_p3, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "U", "d") e0.0   <other>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    from, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <other>
  void                    Return             l     %0.3

│ asMethod[0x55de2cc11c30]                                                     │
└──────────────────────────────────────────────────────────────────────────────┘
