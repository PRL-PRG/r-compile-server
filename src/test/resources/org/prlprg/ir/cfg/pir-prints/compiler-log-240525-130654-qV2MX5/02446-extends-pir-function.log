
┌──────────────────────────────────────────────────────────────────────────────┐
│ extends[0x55de30fe5aa0]                                                      │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 2        │
│ Properties:                                                                  │
├────── Final PIR Version
extends[0x55de30fe5aa0]
BB0
  val?~+          %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    is.character, <env 0x55de28b56378>
  lgl$#-          %0.3  = Identical                <blt is.character>, %0.2   <true>
  void                    Branch                   %0.3 -> BB135 (if true) | BB136 (if false)
BB135   <- [0]
  env             e135.0 = MkEnv              l     class1=%0.1, class2=%0.0, maybe(miss)=true, fullInfo(miss)=false, parent=<env 0x55de28b56378>, context 1
  val?            %135.1 = Force!<lazy>       !v    %0.1, e135.0   <(str|other)>
  lgl$#-          %135.2 = CallSafeBuiltin    wed   is.character(%135.1)    <lgl$->
  void                    Branch                   %135.2 -> BB122 (if true) | BB5 (if false)
BB136   <- [0]
  env             e136.0 = (MkEnv)            l     class1=%0.1, class2=%0.0, maybe(miss)=true, fullInfo(miss)=false, parent=<env 0x55de28b56378>, context 1
  fs              %136.1 = FrameState         R     0x55de2be693a0+0: [], env=e136.0
  void                    Deopt              !v    %136.1, DeadBranchReached@0x55de2b5c6a30[Test#0], %0.3
BB122   <- [135]
  val?^ | miss    %122.0 = LdVar              eR    length, e135.0
  lgl$#-          %122.1 = Identical                <blt length>, %122.0   <true>
  void                    Branch                   %122.1 -> BB137 (if true) | BB138 (if false)
BB5   <- [135]
  val?^ | miss    %5.0  = LdVar              eR    is, e135.0
  lgl$#-          %5.1  = Identical                %5.0, function(object, class2) <(rir::DispatchTable*|...>
  void                    Branch                   %5.1 -> BB139 (if true) | BB140 (if false)
BB137   <- [122]
  val?^ | miss    %137.0 = LdVar              eR    class1, e135.0
  val?            %137.1 = Force!<wrapped>    !v    %137.0, e135.0   <str$+>
  lgl$#-          %137.2 = IsType                   %137.1 isA val?+
  void                    Branch                   %137.2 -> BB141 (if true) | BB142 (if false)
BB138   <- [122]
  void                    Nop                !     
  lgl$#-          %138.1 = %122.1
  dr              %138.2 = DeadBranchReached@0x55de2b5c6a30[Test#1]
  goto BB3
BB139   <- [5]
  prom-           %139.0 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p2, e135.0
  val?            %139.1 = Call               !v    function(object, class2) <(rir::DispatchTable*|...>(%139.0, "classRepresentation") e135.0   <lgl$->
  lgl$#-          %139.2 = IsType                   %139.1 isA lgl$-
  void                    Branch                   %139.2 -> BB143 (if true) | BB144 (if false)
BB140   <- [5]
  void                    Nop                !     
  val?^ | miss    %140.1 = %5.0
  dr              %140.2 = CallTarget@0x55de2b5c6a30[Call#1]
  goto BB3
BB141   <- [137]
  val?+           %141.0 = CastType           d     dn %137.1   <str$+>
  (int|real)$-    %141.1 = CallSafeBuiltin    wed   length(%141.0)    <int$->
  lgl$#-          %141.2 = IsType                   %141.1 isA int$-
  void                    Branch                   %141.2 -> BB145 (if true) | BB146 (if false)
BB142   <- [137]
  fs              %142.0 = FrameState         R     0x55de2be693a0+336: [<blt length>, %137.1], env=e135.0
  void                    Deopt              !v    %142.0, Typecheck@0x55de2b5c6a30[Type#10], %137.1   !
BB3   <- [138, 140]
  val?^ | miss    %3.0  = Phi                      %138.1:BB138, %140.1:BB140
  val?^ | miss    %3.1  = %3.0
  dr              %3.2  = Phi                      %138.2:BB138, %140.2:BB140
  dr              %3.3  = %3.2
  fs              %3.4  = FrameState         R     0x55de2be693a0+91: [%135.2], env=e135.0
  void                    Deopt              !v    %3.4, %3.3, %3.1   !
BB143   <- [139]
  lgl$-           %143.0 = CastType           d     dn %139.1
  lgl$#-          %143.1 = CheckTrueFalse     e     %143.0
  void                    Branch                   %143.1 -> BB9 (if true) | BB8 (if false)
BB144   <- [139]
  fs              %144.0 = FrameState         R     0x55de2be693a0+139: [%139.1], env=e135.0
  void                    Deopt              !v    %144.0, Typecheck@0x55de2b5c6a30[Type#4], %139.1   !
BB145   <- [141]
  int$-           %145.0 = CastType           d     dn %141.1
  lgl$-           %145.1 = Gt                 d     %145.0, 1L, elided   <lgl$->
  lgl$#-          %145.2 = CheckTrueFalse     e     %145.1
  void                    Branch                   %145.2 -> BB131 (if true) | BB127 (if false)
BB146   <- [141]
  fs              %146.0 = FrameState         R     0x55de2be693a0+358: [%141.1], env=e135.0
  void                    Deopt              !v    %146.0, Typecheck@0x55de2b5c6a30[Type#11], %141.1   !
BB9   <- [143]
  val?^ | miss    %9.0  = LdVar              eR    class1, e135.0
  val?            %9.1  = Force!<wrapped>    !v    %9.0, e135.0   <other>
  void                    StVar              lW    classDef1, %9.1, e135.0
  (cls|spec|blt)  %9.3  = LdFun              !v    @, <0x55de2854ebd8>, e135.0
  prom-           %9.4  = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p3, e135.0
  prom-           %9.5  = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p4, e135.0
  val?            %9.6  = Call               !v    %9.3(%9.4, %9.5) e135.0   <str$+>
  void                    StVar              lW    class1, %9.6, e135.0
  goto BB10
BB8   <- [143]
  (cls|spec|blt)  %8.0  = LdFun              !v    stop, e135.0
  fs              %8.1  = FrameState         R     0x55de2be693a0+155: [%8.0], env=e135.0
  void                    Deopt              !v    %8.1, DeadCall@0x55de2b5c6a30[Call#2], %8.0   !
BB131   <- [145]
  val?^ | miss    %131.0 = LdVar              eR    class1, e135.0
  val?            %131.1 = Force!             !v    %131.0, e135.0   <val?_>
  lgl$#-          %131.2 = IsType                   %131.1 isA val?+
  void                    Branch                   %131.2 -> BB147 (if true) | BB148 (if false)
BB127   <- [145]
  void                    Nop                !     
  goto BB128
BB10   <- [9, 149]
  lgl$-           %10.0 = Missing            eR    class2, e135.0
  lgl$#-          %10.1 = CheckTrueFalse     e     %10.0
  void                    Branch                   %10.1 -> BB81 (if true) | BB11 (if false)
BB147   <- [131]
  val?+           %147.0 = CastType           d     dn %131.1   <val?_>
  val?            %147.1 = Extract2_1D        wed   %147.0, 1L, elided   <val?_>
  void                    StVar              lW    class1, %147.1, e135.0
  goto BB128
BB148   <- [131]
  fs              %148.0 = FrameState         R     0x55de2be693a0+395: [%131.1], env=e135.0
  void                    Deopt              !v    %148.0, Typecheck@0x55de2b5c6a30[Type#13], %131.1   !
BB128   <- [127, 147]
  val?^ | miss    %128.0 = LdVar              eR    getClassDef, e135.0
  lgl$#-          %128.1 = Identical                %128.0, function(Class, where=topenv(parent.frame()), |...>
  void                    Branch                   %128.1 -> BB149 (if true) | BB150 (if false)
BB81   <- [10]
  val?^ | miss    %81.0 = LdVar              eR    classDef1, e135.0
  val?            %81.1 = Force!<value>      !v    %81.0, e135.0   <other>
  lgl$-           %81.2 = Is                       %81.1, NULL
  lgl$#-          %81.3 = CheckTrueFalse     e     %81.2
  void                    Branch                   %81.3 -> BB121 (if true) | BB82 (if false)
BB11   <- [10]
  void                    StVar              lW    value, nil, e135.0
  val?^ | miss    %11.1 = LdVar              eR    is.character, e135.0
  lgl$#-          %11.2 = Identical                <blt is.character>, %11.1   <true>
  void                    Branch                   %11.2 -> BB151 (if true) | BB152 (if false)
BB149   <- [128]
  prom-           %149.0 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p27, e135.0
  val?            %149.1 = StaticCall         !v    getClassDef[0x55de290dee50](%149.0) e135.0   <(nil|other)>
  void                    StVar              lW    classDef1, %149.1, e135.0
  goto BB10
BB150   <- [128]
  fs              %150.0 = FrameState         R     0x55de2be693a0+453: [], env=e135.0
  void                    Deopt              !v    %150.0, CallTarget@0x55de2b5c6a30[Call#5], %128.0   !
BB121   <- [81]
  val?^ | miss    %121.0 = LdVar              eR    class1, e135.0
  void                    Visible            v     
  val?            %121.2 = Force!             !     %121.0, e135.0   <val?_>
  val?            %121.3 = %121.2
  goto BB61
BB82   <- [81]
  (cls|spec|blt)  %82.0 = LdFun              !v    @, <0x55de2854ebd8>, e135.0
  prom-           %82.1 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p22, e135.0
  prom-           %82.2 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p23, e135.0
  val?            %82.3 = Call               !v    %82.0(%82.1, %82.2) e135.0   <vec+>
  void                    StVar              lW    ext, %82.3, e135.0
  val?^ | miss    %82.5 = LdVar              eR    isTRUE, e135.0
  lgl$#-          %82.6 = Identical                %82.5, function(x) <(rir::DispatchTable*)0x55de2a40ca|...>
  void                    Branch                   %82.6 -> BB157 (if true) | BB158 (if false)
BB151   <- [11]
  val?^ | miss    %151.0 = LdVar              eR    class2, e135.0
  val?            %151.1 = Force!<lazy>       !v    %151.0, e135.0   <str$+>
  lgl$#-          %151.2 = CallSafeBuiltin    wed   is.character(%151.1)    <lgl$->
  void                    Branch                   %151.2 -> BB76 (if true) | BB16 (if false)
BB152   <- [11]
  fs              %152.0 = FrameState         R     0x55de2be693a0+1206: [], env=e135.0
  void                    Deopt              !v    %152.0, DeadBranchReached@0x55de2b5c6a30[Test#7], %11.2   !
BB61   <- [74, 121, 60, 201, 215]
  val?            %61.0 = Phi                      %60.2:BB60, %74.1:BB74, %215.2:BB215, %201.5:BB201, %121.3:BB121
  val?            %61.1 = %61.0
  void                    Return             l     %61.1
BB157   <- [82]
  val?^ | miss    %157.0 = LdVar              eR    maybe, e135.0
  val?            %157.1 = Force!<lazy>       !v    %157.0, e135.0   <lgl$->
  prom-           %157.2 = MkArg                    %157.1, extends[0x55de30fe5aa0]_p24 (!refl), 
  val?            %157.3 = StaticCall         !v    isTRUE[0x55de28f2ab30](%157.2) e135.0   <lgl$->
  lgl$#-          %157.4 = IsType                   %157.3 isA lgl$-
  void                    Branch                   %157.4 -> BB161 (if true) | BB162 (if false)
BB158   <- [82]
  fs              %158.0 = FrameState         R     0x55de2be693a0+612: [], env=e135.0
  void                    Deopt              !v    %158.0, CallTarget@0x55de2b5c6a30[Call#7], %82.5   !
BB76   <- [151]
  val?^ | miss    %76.0 = LdVar              eR    length, e135.0
  lgl$#-          %76.1 = Identical                <blt length>, %76.0   <true>
  void                    Branch                   %76.1 -> BB155 (if true) | BB156 (if false)
BB16   <- [151]
  void                    Nop                !     
  lgl$#-          %16.1 = %151.2
  goto BB17
BB161   <- [157]
  lgl$-           %161.0 = CastType           d     dn %157.3
  lgl$-           %161.1 = Not                d     %161.0, elided
  lgl$-           %161.2 = AsLogical                %161.1
  lgl$#-          %161.3 = Identical                %161.2, false
  void                    Branch                   %161.3 -> BB120 (if true) | BB87 (if false)
BB162   <- [157]
  void                    Nop                !     
  val?            %162.1 = %157.3
  dr              %162.2 = Typecheck@0x55de2b5c6a30[Type#23]
  goto BB85
BB155   <- [76]
  val?^ | miss    %155.0 = LdVar              eR    class2, e135.0
  val?            %155.1 = Force!<wrapped>    !v    %155.0, e135.0   <str$+>
  lgl$#-          %155.2 = IsType                   %155.1 isA val?+
  void                    Branch                   %155.2 -> BB159 (if true) | BB160 (if false)
BB156   <- [76]
  fs              %156.0 = FrameState         R     0x55de2be693a0+1297: [%151.2], env=e135.0
  void                    Deopt              !v    %156.0, DeadBranchReached@0x55de2b5c6a30[Test#8], %76.1   !
BB17   <- [16, 165]
  lgl$-           %17.0 = Phi                      %165.4:BB165, %16.1:BB16
  lgl$-           %17.1 = %17.0
  lgl$#-          %17.2 = CheckTrueFalse     e     %17.1
  void                    Branch                   %17.2 -> BB21 (if true) | BB20 (if false)
BB120   <- [161]
  void                    Nop                !     
  lgl$-           %120.1 = %161.2
  goto BB90
BB87   <- [161]
  val?^ | miss    %87.0 = LdVar              eR    length, e135.0
  lgl$#-          %87.1 = Identical                <blt length>, %87.0   <true>
  void                    Branch                   %87.1 -> BB171 (if true) | BB172 (if false)
BB85   <- [162, 172, 182]
  val?^ | miss    %85.0 = Phi                      %162.1:BB162, %172.1:BB172, %182.1:BB182
  val?^ | miss    %85.1 = %85.0
  dr              %85.2 = Phi                      %162.2:BB162, %172.2:BB172, %182.2:BB182
  dr              %85.3 = %85.2
  fs              %85.4 = FrameState         R     0x55de2be693a0+644: [%157.3], env=e135.0
  void                    Deopt              !v    %85.4, %85.3, %85.1   !
BB159   <- [155]
  val?+           %159.0 = CastType           d     dn %155.1   <str$+>
  (int|real)$-    %159.1 = CallSafeBuiltin    wed   length(%159.0)    <int$->
  lgl$#-          %159.2 = IsType                   %159.1 isA int$-
  void                    Branch                   %159.2 -> BB165 (if true) | BB166 (if false)
BB160   <- [155]
  fs              %160.0 = FrameState         R     0x55de2be693a0+1378: [%151.2, <blt length>, %155.1], env=e135.0
  void                    Deopt              !v    %160.0, Typecheck@0x55de2b5c6a30[Type#50], %155.1   !
BB21   <- [17]
  val?^ | miss    %21.0 = LdVar              eR    .identC, e135.0
  lgl$#-          %21.1 = Identical                %21.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>
  void                    Branch                   %21.1 -> BB153 (if true) | BB154 (if false)
BB20   <- [17]
  (cls|spec|blt)  %20.0 = LdFun              !v    is, e135.0
  fs              %20.1 = FrameState         R     0x55de2be693a0+1430: [%20.0], env=e135.0
  void                    Deopt              !v    %20.1, DeadCall@0x55de2b5c6a30[Call#15], %20.0   !
BB90   <- [120, 197]
  lgl$-           %90.0 = Phi                      %197.4:BB197, %120.1:BB120
  lgl$-           %90.1 = %90.0
  lgl$#-          %90.2 = CheckTrueFalse     e     %90.1
  void                    Branch                   %90.2 -> BB105 (if true) | BB93 (if false)
BB171   <- [87]
  val?^ | miss    %171.0 = LdVar              eR    ext, e135.0
  lgl$#-          %171.1 = IsType                   %171.0 isA val?~+ | miss
  void                    Branch                   %171.1 -> BB181 (if true) | BB182 (if false)
BB172   <- [87]
  void                    Nop                !     
  lgl$#-          %172.1 = %87.1
  dr              %172.2 = DeadBranchReached@0x55de2b5c6a30[Test#3]
  goto BB85
BB165   <- [159]
  int$-           %165.0 = CastType           d     dn %159.1
  lgl$-           %165.1 = Eq                 d     %165.0, 1L, elided   <lgl$->
  lgl$-           %165.2 = AsLogical                %165.1
  lgl$-           %165.3 = LAnd                     %151.2, %165.2
  lgl$-           %165.4 = %165.3
  goto BB17
BB166   <- [159]
  fs              %166.0 = FrameState         R     0x55de2be693a0+1400: [%151.2, %159.1], env=e135.0
  void                    Deopt              !v    %166.0, Typecheck@0x55de2b5c6a30[Type#51], %159.1   !
BB153   <- [21]
  prom-           %153.0 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p5, e135.0
  prom-           %153.1 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p6, e135.0
  val?            %153.2 = StaticCall         !v    .identC[0x55de355eaf30](%153.0, %153.1) e135.0   <lgl$->
  lgl$#-          %153.3 = IsType                   %153.2 isA lgl$-
  void                    Branch                   %153.3 -> BB163 (if true) | BB164 (if false)
BB154   <- [21]
  fs              %154.0 = FrameState         R     0x55de2be693a0+1419: [%17.1], env=e135.0
  void                    Deopt              !v    %154.0, CallTarget@0x55de2b5c6a30[Call#18], %21.0   !
BB105   <- [90]
  val?^ | miss    %105.0 = LdVar              eR    vapply, e135.0
  lgl$#-          %105.1 = Identical                %105.0, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...>
  void                    Branch                   %105.1 -> BB173 (if true) | BB174 (if false)
BB93   <- [90]
  void                    Nop                !     
  goto BB94
BB181   <- [171]
  val?~+ | miss   %181.0 = CastType           d     dn %171.0
  val?+           %181.1 = Force!<value>            %181.0,    <vec+>
  (int|real)$-    %181.2 = CallSafeBuiltin    wed   length(%181.1)    <int$->
  lgl$#-          %181.3 = IsType                   %181.2 isA int$-
  void                    Branch                   %181.3 -> BB197 (if true) | BB198 (if false)
BB182   <- [171]
  void                    Nop                !     
  val?^ | miss    %182.1 = %171.0
  dr              %182.2 = Typecheck@0x55de2b5c6a30[Type#25]
  goto BB85
BB163   <- [153]
  lgl$-           %163.0 = CastType           d     dn %153.2
  lgl$-           %163.1 = AsLogical                %163.0
  lgl$#-          %163.2 = Identical                %163.1, true
  void                    Branch                   %163.2 -> BB75 (if true) | BB24 (if false)
BB164   <- [153]
  void                    Nop                !     
  val?            %164.1 = %153.2
  dr              %164.2 = Typecheck@0x55de2b5c6a30[Type#62]
  goto BB22
BB173   <- [105]
  prom-           %173.0 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p25, e135.0
  cls             %173.1 = MkCls                    extends@Prom(26)0, e135.0
  prom-           %173.2 = MkArg                    %173.1, extends[0x55de30fe5aa0]_p26 (!refl), e135.0
  ct              %173.3 = PushContext        lCL   %173.0, %173.2, na-lgl, vapply(ext, function(<lst obj=R_MissingArg>, i|...>, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...>, e135.0
  cls~            %173.4 = CastType                 up %173.2
  val?^           %173.5 = CastType                 up %173.0
  env             e173.6 = MkEnv              l     X=%173.5, FUN=%173.4, FUN.VALUE=na-lgl, ...(miss)=missingArg, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  prom-           %173.7 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p31 (!refl), e173.6
  val?            %173.8 = StaticCall         !v    match.fun[0x55de28ff0120](%173.7) e173.6   <(cls|blt)>
  void                    StVar              lW    FUN, %173.8, e173.6
  val?^ | miss    %173.10 = LdVar              eR    is.vector, e173.6
  lgl$#-          %173.11 = Identical                %173.10, function(x, mode="any") <(rir::DispatchTable*)|...>
  void                    Branch                   %173.11 -> BB189 (if true) | BB190 (if false)
BB174   <- [105]
  fs              %174.0 = FrameState         R     0x55de2be693a0+767: [%90.1], env=e135.0
  void                    Deopt              !v    %174.0, CallTarget@0x55de2b5c6a30[Call#9], %105.0   !
BB94   <- [93, 227]
  val?^ | miss    %94.0 = LdVar              eR    fullInfo, e135.0
  val?            %94.1 = Force!<lazy>       !v    %94.0, e135.0   <lgl$->
  lgl$#-          %94.2 = CheckTrueFalse     we    %94.1
  void                    Branch                   %94.2 -> BB102 (if true) | BB97 (if false)
BB197   <- [181]
  int$-           %197.0 = CastType           d     dn %181.2
  lgl$-           %197.1 = Gt                 d     %197.0, 0, elided   <lgl$->
  lgl$-           %197.2 = AsLogical                %197.1
  lgl$-           %197.3 = LAnd                     %161.2, %197.2
  lgl$-           %197.4 = %197.3
  goto BB90
BB198   <- [181]
  fs              %198.0 = FrameState         R     0x55de2be693a0+748: [%161.2, %181.2], env=e135.0
  void                    Deopt              !v    %198.0, Typecheck@0x55de2b5c6a30[Type#26], %181.2   !
BB75   <- [163]
  void                    Nop                !     
  lgl$-           %75.1 = %163.1
  goto BB27
BB24   <- [163]
  val?^ | miss    %24.0 = LdVar              eR    .identC, e135.0
  lgl$#-          %24.1 = Identical                %24.0, function(c1=NULL, c2=NULL) <(rir::DispatchTabl|...>
  void                    Branch                   %24.1 -> BB167 (if true) | BB168 (if false)
BB22   <- [164, 168]
  val?^ | miss    %22.0 = Phi                      %164.1:BB164, %168.1:BB168
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %164.2:BB164, %168.2:BB168
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x55de2be693a0+1627: [%153.2], env=e135.0
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB189   <- [173]
  val?^ | miss    %189.0 = LdVar              eR    X, e173.6
  val?            %189.1 = Force!<lazy>       !v    %189.0, e173.6   <val?>
  lgl$#-          %189.2 = CallSafeBuiltin    wed   is.vector(%189.1, "any")    <lgl$->
  lgl$#-          %189.3 = Not                d     %189.2, elided
  void                    Branch                   %189.2 -> BB119 (if true) | BB110 (if false)
BB190   <- [173]
  fs              %190.0 = FrameState         R     0x55de2be693a0+820: [], env=e135.0
  fs              %190.1 = FrameState         R     0x55de2a50ef70+46: [], env=e173.6, next=%190.0
  void                    Deopt              !v    %190.1, CallTarget@0x55de2a4f5340[Call#1], %173.10   !
BB102   <- [94]
  val?^ | miss    %102.0 = LdVar              eR    ext !upd, e135.0
  val?            %102.1 = Force!             !v    %102.0, e135.0   <val?_>
  val?^ | miss    %102.2 = LdVar              eR    class1, e135.0
  val?            %102.3 = Force!             !v    %102.2, e135.0   <val?_>
  lgl$#-          %102.4 = IsType                   %102.3 isA val?+
  lgl$#-          %102.5 = IsType                   %102.1 isA val?+
  void                    Branch                   %102.5 -> BB187 (if true) | BB188 (if false)
BB97   <- [94]
  val?^ | miss    %97.0 = LdVar              eR    c, e135.0
  lgl$#-          %97.1 = Identical                <blt c>, %97.0   <true>
  void                    Branch                   %97.1 -> BB199 (if true) | BB200 (if false)
BB27   <- [75, 169]
  lgl$-           %27.0 = Phi                      %169.3:BB169, %75.1:BB75
  lgl$-           %27.1 = %27.0
  lgl$#-          %27.2 = CheckTrueFalse     e     %27.1
  void                    Branch                   %27.2 -> BB74 (if true) | BB28 (if false)
BB167   <- [24]
  prom-           %167.0 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p7, e135.0
  val?            %167.1 = StaticCall         !v    .identC[0x55de2b6914a0](%167.0, "ANY") e135.0   <lgl$->
  lgl$#-          %167.2 = IsType                   %167.1 isA lgl$-
  void                    Branch                   %167.2 -> BB169 (if true) | BB170 (if false)
BB168   <- [24]
  void                    Nop                !     
  val?^ | miss    %168.1 = %24.0
  dr              %168.2 = CallTarget@0x55de2b5c6a30[Call#19]
  goto BB22
BB119   <- [189]
  val?^ | miss    %119.0 = LdVar              eR    is.object, e173.6
  lgl$#-          %119.1 = Identical                <blt is.object>, %119.0   <true>
  void                    Branch                   %119.1 -> BB211 (if true) | BB212 (if false)
BB110   <- [189]
  void                    Nop                !     
  lgl$#-          %110.1 = %189.3
  goto BB111
BB187   <- [102]
  val?+           %187.0 = CastType           d     dn %102.1   <val?_>
  void                    Branch                   %102.4 -> BB201 (if true) | BB202 (if false)
BB188   <- [102]
  void                    Nop                !     
  val?            %188.1 = %102.1
  dr              %188.2 = Typecheck@0x55de2b5c6a30[Type#43]
  goto BB103
BB199   <- [97]
  val?^ | miss    %199.0 = LdVar              eR    class1, e135.0
  val?            %199.1 = Force!<wrapped>    !v    %199.0, e135.0   <str$+>
  val?^ | miss    %199.2 = LdVar              eR    names, e135.0
  lgl$#-          %199.3 = Identical                <blt names>, %199.2   <true>
  void                    Branch                   %199.3 -> BB207 (if true) | BB208 (if false)
BB200   <- [97]
  fs              %200.0 = FrameState         R     0x55de2be693a0+924: [%94.2], env=e135.0
  void                    Deopt              !v    %200.0, DeadBranchReached@0x55de2b5c6a30[Test#5], %97.1   !
BB74   <- [27]
  void                    Visible            v     
  lgl$#-          %74.1 = true
  goto BB61
BB28   <- [27]
  val?^ | miss    %28.0 = LdVar              eR    classDef1, e135.0
  val?            %28.1 = Force!<value>      !v    %28.0, e135.0   <other>
  lgl$-           %28.2 = Is                       %28.1, NULL
  lgl$-           %28.3 = Not                d     %28.2, elided
  lgl$-           %28.4 = AsLogical                %28.3
  lgl$#-          %28.5 = Identical                %28.4, false
  void                    Branch                   %28.5 -> BB73 (if true) | BB31 (if false)
BB169   <- [167]
  lgl$-           %169.0 = CastType           d     dn %167.1
  lgl$-           %169.1 = AsLogical                %169.0
  lgl$-           %169.2 = LOr                      %163.1, %169.1
  lgl$-           %169.3 = %169.2
  goto BB27
BB170   <- [167]
  fs              %170.0 = FrameState         R     0x55de2be693a0+1676: [%163.1, %167.1], env=e135.0
  void                    Deopt              !v    %170.0, Typecheck@0x55de2b5c6a30[Type#64], %167.1   !
BB211   <- [119]
  val?^ | miss    %211.0 = LdVar              eR    X, e173.6
  val?            %211.1 = Force!<wrapped>    !v    %211.0, e173.6   <val?+>
  lgl$#-          %211.2 = CallSafeBuiltin    wed   is.object(%211.1)    <lgl$->
  lgl$-           %211.3 = LOr                      %189.3, %211.2
  lgl$-           %211.4 = %211.3
  goto BB111
BB212   <- [119]
  fs              %212.0 = FrameState         R     0x55de2be693a0+820: [], env=e135.0
  fs              %212.1 = FrameState         R     0x55de2a50ef70+78: [], env=e173.6, next=%212.0
  prom-           %212.2 = MkArg                    %189.1, extends[0x55de30fe5aa0]_p33 (!refl), e173.6
  val?~           %212.3 = CastType                 up %212.2
  env             e212.4 = (MkEnv)            l     mode(miss)="any", x=%212.3, parent=R_BaseNamespace, context 0
  fs              %212.5 = FrameState         R     0x55de2a3f0820+41: [%189.2], env=e212.4, next=%212.1
  void                    Deopt              !v    %212.5, DeadBranchReached@0x55de2a4f5340[Test#0], %119.1   !
BB111   <- [110, 211]
  lgl$-           %111.0 = Phi                      %211.4:BB211, %110.1:BB110
  lgl$-           %111.1 = %111.0
  lgl$#-          %111.2 = CheckTrueFalse     e     %111.1
  void                    Branch                   %111.2 -> BB118 (if true) | BB114 (if false)
BB201   <- [187]
  val?+           %201.0 = CastType           d     dn %102.3   <val?_>
  val?+           %201.1 = Subassign2_1D      wed   true, %187.0, %201.0, elided   <val?_>
  void                    StVar              lW    ext, %201.1, e135.0
  val+            %201.3 = ChkMissing         e     %201.1
  void                    Visible            v     
  val?+           %201.5 = %201.1
  goto BB61
BB202   <- [187]
  void                    Nop                !     
  val?            %202.1 = %102.3
  dr              %202.2 = Typecheck@0x55de2b5c6a30[Type#44]
  goto BB103
BB103   <- [188, 202]
  val?^ | miss    %103.0 = Phi                      %188.1:BB188, %202.1:BB202
  val?^ | miss    %103.1 = %103.0
  dr              %103.2 = Phi                      %188.2:BB188, %202.2:BB202
  dr              %103.3 = %103.2
  fs              %103.4 = FrameState         R     0x55de2be693a0+1161: [true, %102.1, %102.3], env=e135.0
  void                    Deopt              !v    %103.4, %103.3, %103.1   !
BB207   <- [199]
  val?^ | miss    %207.0 = LdVar              eR    ext, e135.0
  lgl$#-          %207.1 = IsType                   %207.0 isA val?~+ | miss
  void                    Branch                   %207.1 -> BB209 (if true) | BB210 (if false)
BB208   <- [199]
  void                    Nop                !     
  lgl$#-          %208.1 = %199.3
  dr              %208.2 = DeadBranchReached@0x55de2b5c6a30[Test#6]
  goto BB98
BB73   <- [28]
  void                    Nop                !     
  lgl$-           %73.1 = %28.4
  goto BB38
BB31   <- [28]
  val?^ | miss    %31.0 = LdVar              eR    %in%, e135.0
  lgl$#-          %31.1 = Identical                %31.0, function(x, table) <(rir::DispatchTable*)0x55d|...>
  void                    Branch                   %31.1 -> BB175 (if true) | BB176 (if false)
BB118   <- [111]
  val?^ | miss    %118.0 = LdVar              eR    as.list, e173.6
  lgl$#-          %118.1 = Identical                %118.0, function(x, ...) <(rir::DispatchTable*)0x55de2|...>
  void                    Branch                   %118.1 -> BB217 (if true) | BB218 (if false)
BB114   <- [111]
  void                    Nop                !     
  goto BB115
BB209   <- [207]
  val?~+ | miss   %209.0 = CastType           d     dn %207.0
  val?+           %209.1 = Force!<value>            %209.0,    <vec+>
  val+            %209.2 = CallSafeBuiltin    wed   names(%209.1)    <str->
  lgl$#-          %209.3 = IsType                   %199.1 isA val?+
  void                    Branch                   %209.3 -> BB215 (if true) | BB216 (if false)
BB210   <- [207]
  void                    Nop                !     
  val?^ | miss    %210.1 = %207.0
  dr              %210.2 = Typecheck@0x55de2b5c6a30[Type#40]
  goto BB98
BB98   <- [208, 210]
  val?^ | miss    %98.0 = Phi                      %208.1:BB208, %210.1:BB210
  val?^ | miss    %98.1 = %98.0
  dr              %98.2 = Phi                      %208.2:BB208, %210.2:BB210
  dr              %98.3 = %98.2
  fs              %98.4 = FrameState         R     0x55de2be693a0+1003: [<blt c>, %199.1], env=e135.0
  void                    Deopt              !v    %98.4, %98.3, %98.1   !
BB38   <- [73, 193]
  lgl$-           %38.0 = Phi                      %193.4:BB193, %73.1:BB73
  lgl$-           %38.1 = %38.0
  lgl$#-          %38.2 = CheckTrueFalse     e     %38.1
  void                    Branch                   %38.2 -> BB68 (if true) | BB41 (if false)
BB175   <- [31]
  prom-           %175.0 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p8, e135.0
  prom-           %175.1 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p9, e135.0
  val?^           %175.2 = CastType                 up %175.1
  val?^           %175.3 = CastType                 up %175.0
  env             e175.4 = MkEnv              l     x=%175.3, table=%175.2, parent=R_BaseNamespace, context 0
  prom-           %175.5 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p29, e175.4
  val?^           %175.6 = CastType                 up %175.5
  val?^ | miss    %175.7 = LdVar              eR    class2, e135.0
  val?            %175.8 = Force!<wrapped>    !v    %175.7, e135.0   <str$+>
  prom-           %175.9 = MkArg                    %175.8, extends[0x55de30fe5aa0]_p8 (!refl), e135.0
  val?~           %175.10 = CastType                 up %175.9
  void                    StArg              lW    x, %175.10, e175.4
  prom-           %175.12 = MkArg                    %175.8, extends[0x55de30fe5aa0]_p28 (!refl), e175.4
  val?~           %175.13 = CastType                 up %175.12
  env             e175.14 = (MkEnv)            l     x=%175.13, table=%175.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  lgl$#-          %175.15 = IsEnvStub          R     , e175.14
  void                    Branch                   %175.15 -> BB177 (if true) | BB178 (if false)
BB176   <- [31]
  fs              %176.0 = FrameState         R     0x55de2be693a0+1710: [%28.1], env=e135.0
  void                    Deopt              !v    %176.0, CallTarget@0x55de2b5c6a30[Call#20], %31.0   !
BB217   <- [118]
  val?^ | miss    %217.0 = LdVar              eR    X, e173.6
  val?            %217.1 = Force!<wrapped>    !v    %217.0, e173.6   <vec>
  val?            %217.2 = StaticCall         !v    as.list[0x55de35023070](%217.1) { 0 } e173.6   <vec>
  void                    StVar              lW    X, %217.2, e173.6
  goto BB115
BB218   <- [118]
  fs              %218.0 = FrameState         R     0x55de2be693a0+820: [], env=e135.0
  fs              %218.1 = FrameState         R     0x55de2a50ef70+189: [%111.1], env=e173.6, next=%218.0
  void                    Deopt              !v    %218.1, CallTarget@0x55de2a4f5340[Call#3], %118.0   !
BB115   <- [114, 217]
  (cls|spec|blt)  %115.0 = LdFun              !v    .Internal, <0x55de2854e698>, e173.6
  prom-           %115.1 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p34, e173.6
  val?            %115.2 = Call               !v    %115.0(%115.1) e173.6   <val?+>
  val?            %115.3 = PopContext         C     %115.2, %173.3   <lgl+>
  void                    StVar              lW    noTest, %115.3, e135.0
  val?^ | miss    %115.5 = LdVar              eR    ext, e135.0
  lgl$#-          %115.6 = IsType                   %115.5 isA val?~+ | miss
  void                    Branch                   %115.6 -> BB223 (if true) | BB224 (if false)
BB215   <- [209]
  val?+           %215.0 = CastType           d     dn %199.1   <str$+>
  val+            %215.1 = CallSafeBuiltin    vwed  c(%215.0, %209.2)    <str->
  val+            %215.2 = %215.1
  goto BB61
BB216   <- [209]
  fs              %216.0 = FrameState         R     0x55de2be693a0+1099: [<blt c>, %199.1, %209.2], env=e135.0
  void                    Deopt              !v    %216.0, Typecheck@0x55de2b5c6a30[Type#38], %199.1   !
BB68   <- [38]
  (cls|spec|blt)  %68.0 = LdFun              !v    @, <0x55de2854ebd8>, e135.0
  prom-           %68.1 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p20, e135.0
  prom-           %68.2 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p21, e135.0
  val?            %68.3 = Call               !v    %68.0(%68.1, %68.2) e135.0   <vec+>
  lgl$#-          %68.4 = IsType                   %68.3 isA val+   <true>
  void                    Branch                   %68.4 -> BB185 (if true) | BB186 (if false)
BB41   <- [38]
  val?^ | miss    %41.0 = LdVar              eR    getClassDef, e135.0
  lgl$#-          %41.1 = Identical                %41.0, function(Class, where=topenv(parent.frame()), |...>
  void                    Branch                   %41.1 -> BB195 (if true) | BB196 (if false)
BB177   <- [175]
  val?            %177.0 = Force!<lazy>       !vL   %175.2, e175.14   <val?->
  prom-           %177.1 = MkArg                    %177.0, extends[0x55de30fe5aa0]_p29 (!refl), e175.4
  val?~           %177.2 = CastType                 up %177.1
  void                    StArg              lWd   table, %177.2, e175.14
  lgl$#-          %177.4 = IsType                   %177.0 isA val?+
  lgl$#-          %177.5 = IsEnvStub          R     , e175.14
  void                    Branch                   %177.5 -> BB179 (if true) | BB180 (if false)
BB178   <- [175]
  fs              %178.0 = FrameState         R     0x55de2be693a0+1765: [%28.4], env=e135.0
  fs              %178.1 = FrameState         R     0x55de28b7c320+54: [], env=e175.4, next=%178.0
  env             e178.2 = (MkEnv)            l     x=%175.13, table=%175.6, nomatch=0L, incomparables(miss)=nil, parent=R_BaseNamespace, context -1
  fs              %178.3 = FrameState         R     0x55de28d63d40+9: [%175.8], env=e178.2, next=%178.1
  void                    Deopt              !v    %178.3, EnvStubMaterialized@0x55de28db6cb0[Call#unknown], e175.14   !
BB223   <- [115]
  val?~+ | miss   %223.0 = CastType           d     dn %115.5
  val?+           %223.1 = Force!<value>            %223.0,    <vec+>
  lgl$#-          %223.2 = IsType                   %223.1 isA val+   <true>
  void                    Branch                   %223.2 -> BB225 (if true) | BB226 (if false)
BB224   <- [115]
  void                    Nop                !     
  val?^ | miss    %224.1 = %115.5
  dr              %224.2 = Typecheck@0x55de2b5c6a30[Type#30]
  goto BB116
BB185   <- [68]
  val?^ | miss    %185.0 = LdVar              eR    class2, e135.0
  val?            %185.1 = Force!<wrapped>    !v    %185.0, e135.0   <str$+>
  lgl$#-          %185.2 = IsType                   %185.1 isA val?+
  lgl$#-          %185.3 = IsType                   %68.3 isA val?+
  void                    Branch                   %185.3 -> BB203 (if true) | BB204 (if false)
BB186   <- [68]
  fs              %186.0 = FrameState         R     0x55de2be693a0+1866: [%68.3], env=e135.0
  void                    Deopt              !v    %186.0, DeadBranchReached@0x55de2b5c6a30[Test#10], %68.4   !
BB195   <- [41]
  prom-           %195.0 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p13, e135.0
  val?            %195.1 = StaticCall         !v    getClassDef[0x55de290dee50](%195.0) e135.0   <other>
  void                    StVar              lW    classDef2, %195.1, e135.0
  goto BB42
BB196   <- [41]
  fs              %196.0 = FrameState         R     0x55de2be693a0+1772: [%38.1], env=e135.0
  void                    Deopt              !v    %196.0, CallTarget@0x55de2b5c6a30[Call#23], %41.0   !
BB179   <- [177]
  lgl$#-          %179.0 = IsType                   %175.8 isA val?+
  void                    Branch                   %179.0 -> BB183 (if true) | BB184 (if false)
BB180   <- [177]
  void                    Nop                !     
  env             e180.1 = e175.14
  dr              %180.2 = EnvStubMaterialized@0x55de28db6cb0[Call#unknown]
  goto BB34
BB225   <- [223]
  val             %225.0 = ChkMissing         e     %115.3
  lgl$#-          %225.1 = IsType                   %225.0 isA lgl+
  void                    Branch                   %225.1 -> BB227 (if true) | BB228 (if false)
BB226   <- [223]
  void                    Nop                !     
  lgl$#-          %226.1 = %223.2
  dr              %226.2 = DeadBranchReached@0x55de2b5c6a30[Test#4]
  goto BB116
BB116   <- [224, 226, 228]
  val?^ | miss    %116.0 = Phi                      %224.1:BB224, %226.1:BB226, %228.1:BB228
  val?^ | miss    %116.1 = %116.0
  dr              %116.2 = Phi                      %224.2:BB224, %226.2:BB226, %228.2:BB228
  dr              %116.3 = %116.2
  fs              %116.4 = FrameState         R     0x55de2be693a0+834: [], env=e135.0
  void                    Deopt              !v    %116.4, %116.3, %116.1   !
BB203   <- [185]
  val?+           %203.0 = CastType           d     dn %68.3   <vec+>
  void                    Branch                   %185.2 -> BB205 (if true) | BB206 (if false)
BB204   <- [185]
  void                    Nop                !     
  val?            %204.1 = %68.3
  dr              %204.2 = Typecheck@0x55de2b5c6a30[Type#76]
  goto BB71
BB42   <- [195, 205]
  val?^ | miss    %42.0 = LdVar              eR    value, e135.0
  val?            %42.1 = Force!<value>      !v    %42.0, e135.0   <(nil|other)>
  lgl$-           %42.2 = Is                       %42.1, NULL
  lgl$#-          %42.3 = CheckTrueFalse     e     %42.2
  void                    Branch                   %42.3 -> BB65 (if true) | BB45 (if false)
BB183   <- [179]
  val?+           %183.0 = CastType           d     dn %175.8   <(int|str)+>
  void                    Branch                   %177.4 -> BB191 (if true) | BB192 (if false)
BB184   <- [179]
  void                    Nop                !     
  val?            %184.1 = %175.8
  dr              %184.2 = Typecheck@0x55de28db6cb0[Type#0]
  goto BB34
BB34   <- [180, 184, 192]
  val?^ | miss    %34.0 = Phi                      e180.1:BB180, %184.1:BB184, %192.1:BB192
  val?^ | miss    %34.1 = %34.0
  dr              %34.2 = Phi                      %180.2:BB180, %184.2:BB184, %192.2:BB192
  dr              %34.3 = %34.2
  fs              %34.4 = FrameState         R     0x55de2be693a0+1765: [%28.4], env=e135.0
  fs              %34.5 = FrameState         R     0x55de28b7c320+54: [], env=e175.4, next=%34.4
  fs              %34.6 = FrameState         R     0x55de28d63d40+23: [%175.8, %177.0], env=e175.14, next=%34.5
  void                    Deopt              !v    %34.6, %34.3, %34.1   !
BB227   <- [225]
  lgl+            %227.0 = CastType           d     dn %225.0
  val?            %227.1 = Extract1_1D        wed   %223.1, %227.0, elided   <vec+>
  void                    StVar              lW    ext, %227.1, e135.0
  goto BB94
BB228   <- [225]
  void                    Nop                !     
  val             %228.1 = %225.0
  dr              %228.2 = Typecheck@0x55de2b5c6a30[Type#32]
  goto BB116
BB205   <- [203]
  val?+           %205.0 = CastType           d     dn %185.1   <str$+>
  val?            %205.1 = Extract2_1D        wed   %203.0, %205.0, elided   <other>
  void                    StVar              lW    value, %205.1, e135.0
  goto BB42
BB206   <- [203]
  void                    Nop                !     
  val?            %206.1 = %185.1
  dr              %206.2 = Typecheck@0x55de2b5c6a30[Type#78]
  goto BB71
BB71   <- [204, 206]
  val?^ | miss    %71.0 = Phi                      %204.1:BB204, %206.1:BB206
  val?^ | miss    %71.1 = %71.0
  dr              %71.2 = Phi                      %204.2:BB204, %206.2:BB206
  dr              %71.3 = %71.2
  fs              %71.4 = FrameState         R     0x55de2be693a0+1911: [%68.3, %185.1], env=e135.0
  void                    Deopt              !v    %71.4, %71.3, %71.1   !
BB65   <- [42]
  val?^ | miss    %65.0 = LdVar              eR    possibleExtends, e135.0
  lgl$#-          %65.1 = Identical                %65.0, function(class1, class2, ClassDef1=getClassDef|...>
  void                    Branch                   %65.1 -> BB213 (if true) | BB214 (if false)
BB45   <- [42]
  void                    Nop                !     
  goto BB46
BB191   <- [183]
  val?+           %191.0 = CastType           d     dn %177.0   <val?->
  val+            %191.1 = CallSafeBuiltin    wed   match(%183.0, %191.0, 0L, nil)    <int->
  lgl$#-          %191.2 = IsType                   %191.1 isA int-
  void                    Branch                   %191.2 -> BB193 (if true) | BB194 (if false)
BB192   <- [183]
  void                    Nop                !     
  val?            %192.1 = %177.0
  dr              %192.2 = Typecheck@0x55de28db6cb0[Type#1]
  goto BB34
BB213   <- [65]
  prom-           %213.0 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p16, e135.0
  prom-           %213.1 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p17, e135.0
  prom-           %213.2 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p18, e135.0
  prom-           %213.3 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p19, e135.0
  val?            %213.4 = StaticCall         !v    possibleExtends[0x55de3081a980](%213.0, %213.1, %213.2, %213.3) e135.0   <lgl$->
  lgl$#-          %213.5 = IsType                   %213.4 isA lgl$-
  void                    Branch                   %213.5 -> BB219 (if true) | BB220 (if false)
BB214   <- [65]
  fs              %214.0 = FrameState         R     0x55de2be693a0+1941: [%42.1], env=e135.0
  void                    Deopt              !v    %214.0, CallTarget@0x55de2b5c6a30[Call#25], %65.0   !
BB46   <- [45, 219]
  val?^ | miss    %46.0 = LdVar              eR    fullInfo, e135.0
  val?            %46.1 = Force!<lazy>       !v    %46.0, e135.0   <lgl$->
  lgl$#-          %46.2 = CheckTrueFalse     we    %46.1
  void                    Branch                   %46.2 -> BB64 (if true) | BB49 (if false)
BB193   <- [191]
  int-            %193.0 = CastType           d     dn %191.1
  lgl-            %193.1 = Gt                 wed   %193.0, 0L, elided   <lgl->
  lgl$-           %193.2 = AsLogical                %193.1
  lgl$-           %193.3 = LAnd                     %28.4, %193.2
  lgl$-           %193.4 = %193.3
  goto BB38
BB194   <- [191]
  fs              %194.0 = FrameState         R     0x55de2be693a0+1765: [%28.4], env=e135.0
  fs              %194.1 = FrameState         R     0x55de28b7c320+54: [], env=e175.4, next=%194.0
  fs              %194.2 = FrameState         R     0x55de28d63d40+69: [%191.1], env=e175.14, next=%194.1
  void                    Deopt              !v    %194.2, Typecheck@0x55de29bae688[Type#2], %191.1   !
BB219   <- [213]
  lgl$-           %219.0 = CastType           d     dn %213.4
  void                    StVar              lW    value, %219.0, e135.0
  goto BB46
BB220   <- [213]
  fs              %220.0 = FrameState         R     0x55de2be693a0+2009: [%213.4], env=e135.0
  void                    Deopt              !v    %220.0, Typecheck@0x55de2b5c6a30[Type#85], %213.4   !
BB64   <- [46]
  val?^ | miss    %64.0 = LdVar              eR    value, e135.0
  void                    Visible            v     
  val?            %64.2 = Force!<value>      !     %64.0, e135.0   <other>
  val?            %64.3 = %64.2
  goto BB60
BB49   <- [46]
  val?^ | miss    %49.0 = LdVar              eR    is.logical, e135.0
  lgl$#-          %49.1 = Identical                <blt is.logical>, %49.0   <true>
  void                    Branch                   %49.1 -> BB221 (if true) | BB222 (if false)
BB60   <- [64, 59]
  val?            %60.0 = Phi                      %59.2:BB59, %64.3:BB64
  val?            %60.1 = %60.0
  val?            %60.2 = %60.1
  goto BB61
BB221   <- [49]
  val?^ | miss    %221.0 = LdVar              eR    value, e135.0
  val?            %221.1 = Force!<value>      !v    %221.0, e135.0   <(lgl|other)>
  val+            %221.2 = CallSafeBuiltin    wed   is.logical(%221.1)    <lgl$->
  lgl$#-          %221.3 = IsType                   %221.2 isA lgl$-
  void                    Branch                   %221.3 -> BB229 (if true) | BB230 (if false)
BB222   <- [49]
  fs              %222.0 = FrameState         R     0x55de2be693a0+2038: [%46.2], env=e135.0
  void                    Deopt              !v    %222.0, DeadBranchReached@0x55de2b5c6a30[Test#11], %49.1   !
BB229   <- [221]
  lgl$-           %229.0 = CastType           d     dn %221.2
  lgl$#-          %229.1 = CheckTrueFalse     e     %229.0
  void                    Branch                   %229.1 -> BB63 (if true) | BB52 (if false)
BB230   <- [221]
  void                    Nop                !     
  val+            %230.1 = %221.2
  dr              %230.2 = Typecheck@0x55de2b5c6a30[Type#89]
  goto BB50
BB63   <- [229]
  val?^ | miss    %63.0 = LdVar              eR    value, e135.0
  lgl$#-          %63.1 = IsType                   %63.0 isA lgl$-
  void                    Branch                   %63.1 -> BB231 (if true) | BB232 (if false)
BB52   <- [229]
  (cls|spec|blt)  %52.0 = LdFun              !v    @, <0x55de2854ebd8>, e135.0
  prom-           %52.1 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p14, e135.0
  prom-           %52.2 = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p15, e135.0
  val?            %52.3 = Call               !v    %52.0(%52.1, %52.2) e135.0   <lgl$->
  lgl$#-          %52.4 = IsType                   %52.3 isA lgl$-
  void                    Branch                   %52.4 -> BB233 (if true) | BB234 (if false)
BB50   <- [230, 232]
  val?^ | miss    %50.0 = Phi                      %230.1:BB230, %232.1:BB232
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %230.2:BB230, %232.2:BB232
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x55de2be693a0+2134: [%221.2], env=e135.0
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
BB231   <- [63]
  lgl$-           %231.0 = CastType           d     dn %63.0
  void                    Visible            v     
  lgl$-           %231.2 = %231.0
  goto BB59
BB232   <- [63]
  void                    Nop                !     
  val?^ | miss    %232.1 = %63.0
  dr              %232.2 = Typecheck@0x55de2b5c6a30[Type#99]
  goto BB50
BB233   <- [52]
  lgl$-           %233.0 = CastType           d     dn %52.3
  lgl$-           %233.1 = AsLogical                %233.0
  lgl$#-          %233.2 = Identical                %233.1, true
  void                    Branch                   %233.2 -> BB56 (if true) | BB55 (if false)
BB234   <- [52]
  fs              %234.0 = FrameState         R     0x55de2be693a0+2182: [%52.3], env=e135.0
  void                    Deopt              !v    %234.0, Typecheck@0x55de2b5c6a30[Type#92], %52.3   !
BB59   <- [58, 231]
  val?            %59.0 = Phi                      %58.2:BB58, %231.2:BB231
  val?            %59.1 = %59.0
  val?            %59.2 = %59.1
  goto BB60
BB56   <- [233]
  lgl$#-          %56.0 = CheckTrueFalse     e     %233.1
  void                    Branch                   %56.0 -> BB62 (if true) | BB57 (if false)
BB55   <- [233]
  (cls|spec|blt)  %55.0 = LdFun              !v    isTRUE, e135.0
  fs              %55.1 = FrameState         R     0x55de2be693a0+2199: [%233.1, %55.0], env=e135.0
  void                    Deopt              !v    %55.1, DeadCall@0x55de2b5c6a30[Call#28], %55.0   !
BB62   <- [56]
  void                    Visible            v     
  lgl$#-          %62.1 = true
  goto BB58
BB57   <- [56]
  val?^ | miss    %57.0 = LdVar              eR    maybe, e135.0
  void                    Visible            v     
  val?            %57.2 = Force!             !     %57.0, e135.0   <val?_>
  val?            %57.3 = %57.2
  goto BB58
BB58   <- [62, 57]
  val?            %58.0 = Phi                      %57.3:BB57, %62.1:BB62
  val?            %58.1 = %58.0
  val?            %58.2 = %58.1
  goto BB59
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    className, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  val?            %0.2  = Force<wrapped>     !v    %0.1, e0.0   <str$+>
  val?            %0.3  = Extract2_1D        !v    %0.2, 1L, e0.0   <str$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 9:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     names, <0x55de2854f470>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p10, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2) e0.0   <str->
  void                    Return             l     %0.3
Prom 10:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     @, <0x55de2854ebd8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p11, e0.0
  prom-           %0.3  = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p12, e0.0
  val?            %0.4  = Call               !     %0.1(%0.2, %0.3) e0.0   <vec+>
  void                    Return             l     %0.4
Prom 11:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 12:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 13:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 14:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    value, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    simple, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef2, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <other>
  void                    Return             l     %0.3
Prom 20:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 21:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 22:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    classDef1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 23:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    contains, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 24:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    maybe, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <lgl$->
  void                    Return             l     %0.3
Prom 25:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    ext, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec+>
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  cls             %0.1  = MkCls                    extends@Prom(26)0, e0.0
  void                    Return             l     %0.1
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    class1, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <str$+>
  void                    Return             l     %0.3
Prom 28:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|str)+>
  void                    Return             l     %0.3
Prom 29:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    table, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?->
  void                    Return             l     %0.3
Prom 31:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)>
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <val?>
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, e0.0
  prom-           %0.2  = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p35, e0.0
  prom-           %0.3  = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p36, e0.0
  prom-           %0.4  = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p37, e0.0
  prom-           %0.5  = MkArg                    unboundValue, extends[0x55de30fe5aa0]_p38, e0.0
  val?            %0.6  = Call               !     %0.1(%0.2, %0.3, %0.4, %0.5) e0.0   <val?_>
  void                    Return             l     %0.6
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN.VALUE, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    USE.NAMES, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ extends[0x55de30fe5aa0]                                                      │
└──────────────────────────────────────────────────────────────────────────────┘
