
┌──────────────────────────────────────────────────────────────────────────────┐
│ .memberDend[0x558f3ab2fcc0]                                                  │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch                                      │
│ Properties:                                                                  │
├────── Final PIR Version
.memberDend[0x558f3ab2fcc0]
BB0
  val?^           %0.0  = LdArg                    0
  val?^ | miss    %0.1  = LdVar              eR    %||%, <env 0x558f3a3ecb50>
  lgl$#-          %0.2  = Identical                %0.1, function(L, R) <(rir::DispatchTable*)0x558f3e1|...>
  void                    Branch                   %0.2 -> BB11 (if true) | BB12 (if false)
BB11   <- [0]
  env             e11.0 = MkEnv              l     x=%0.0, parent=<env 0x558f3a3ecb50>, context 1
  prom-           %11.1 = MkArg                    unboundValue, .memberDend[0x558f3ab2fcc0]_p2, e11.0
  val?^           %11.2 = CastType                 up %11.1
  val?^ | miss    %11.3 = LdVar              eR    attr, <env 0x558f3a3ecb50>
  lgl$#-          %11.4 = Identical                %11.3, <blt attr>
  void                    Branch                   %11.4 -> BB13 (if true) | BB14 (if false)
BB12   <- [0]
  void                    Nop                !     
  val?^ | miss    %12.1 = %0.1
  dr              %12.2 = CallTarget@0x558f3eaee898[Call#0]
  goto BB10
BB13   <- [11]
  val?            %13.0 = Force!<lazy>       !v    %0.0, e11.0   <int$->
  val?            %13.1 = CallBuiltin        !v    attr(%13.0, "x.member") e11.0   <nil->
  lgl$-           %13.2 = Is                       %13.1, NULL
  prom-           %13.3 = MkArg                    %13.1, .memberDend[0x558f3ab2fcc0]_p0 (!refl), e11.0
  val?~           %13.4 = CastType                 up %13.3
  lgl$#-          %13.5 = CheckTrueFalse     e     %13.2
  env             e13.6 = (MkEnv)            l     L=%13.4, R=%11.2, parent=<env 0x558f3a3ecb50>, context 0
  void                    Branch                   %13.5 -> BB7 (if true) | BB3 (if false)
BB14   <- [11]
  void                    Nop                !     
  val?^ | miss    %14.1 = %11.3
  dr              %14.2 = CallTarget@0x558f3eaee898[Call#1]
  goto BB10
BB10   <- [12, 14]
  val?^ | miss    %10.0 = Phi                      %12.1:BB12, %14.1:BB14
  val?^ | miss    %10.1 = %10.0
  dr              %10.2 = Phi                      %12.2:BB12, %14.2:BB14
  dr              %10.3 = %10.2
  env             e10.4 = (MkEnv)            l     x=%0.0, parent=<env 0x558f3a3ecb50>, context 1
  fs              %10.5 = FrameState         R     0x558f3e4d4c90+0: [], env=e10.4
  void                    Deopt              !v    %10.5, %10.3, %10.1
BB7   <- [13]
  void                    Visible            v     
  val?            %7.1  = Force!<lazy>       !L    %11.2, e13.6   <int$->
  lgl$#-          %7.2  = IsEnvStub          R     , e13.6
  void                    Branch                   %7.2 -> BB15 (if true) | BB16 (if false)
BB3   <- [13]
  void                    Visible            v     
  val?            %3.1  = %13.1
  goto BB4
BB15   <- [7]
  void                    Nop                !     
  val?            %15.1 = %7.1
  goto BB4
BB16   <- [7]
  fs              %16.0 = FrameState         R     0x558f3e4d4c90+37: [], env=e11.0
  fs              %16.1 = FrameState         R     0x558f3e4d4da0+53: [%7.1], env=e13.6, next=%16.0
  void                    Deopt              !v    %16.1, EnvStubMaterialized@0x558f3eaee9f8[Call#unknown], e13.6   !
BB4   <- [3, 15]
  val?            %4.0  = Phi                      %3.1:BB3, %15.1:BB15   <int$->
  val?            %4.1  = %4.0
  lgl$#-          %4.2  = IsType                   %4.1 isA int$-
  void                    Branch                   %4.2 -> BB17 (if true) | BB18 (if false)
BB17   <- [4]
  int$-           %17.0 = CastType           d     dn %4.1
  void                    Return             l     %17.0
BB18   <- [4]
  fs              %18.0 = FrameState         R     0x558f3e4d4c90+37: [], env=e11.0
  fs              %18.1 = FrameState         R     0x558f3e4d4da0+58: [%4.1], env=e13.6, next=%18.0
  void                    Deopt              !v    %18.1, Typecheck@0x558f3eaee898[Type#5], %4.1   !
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x558f39d9d080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .memberDend[0x558f3ab2fcc0]_p1, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "x.member") e0.0   <nil->
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !v    %||%, <0x558f3bbd18d8>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .memberDend[0x558f3ab2fcc0]_p3, e0.0
  val?            %0.3  = Call               !v    %0.1(%0.2, 1L) e0.0   <int$->
  void                    Visible            v     
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     attr, <0x558f39d9d080>, e0.0
  prom-           %0.2  = MkArg                    unboundValue, .memberDend[0x558f3ab2fcc0]_p4, e0.0
  val?            %0.3  = Call               !     %0.1(%0.2, "members") e0.0   <nil->
  void                    Return             l     %0.3
Prom 4:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<wrapped>     !     %0.1, e0.0   <int$->
  void                    Return             l     %0.3

│ .memberDend[0x558f3ab2fcc0]                                                  │
└──────────────────────────────────────────────────────────────────────────────┘
