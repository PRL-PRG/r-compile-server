
┌──────────────────────────────────────────────────────────────────────────────┐
│ oV[0x558f3e4a5910]                                                           │
│ Context: !ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0                             │
│ Properties:                                                                  │
├────── Final PIR Version
oV[0x558f3e4a5910]
BB0
  val?^           %0.0  = LdArg                    1
  val?^           %0.1  = LdArg                    0
  val?^ | miss    %0.2  = LdVar              eR    integer, ?
  lgl$#-          %0.3  = Identical                %0.2, function(length=0L) <(rir::DispatchTable*)0x55|...>
  void                    Branch                   %0.3 -> BB138 (if true) | BB139 (if false)
BB138   <- [0]
  int-            %138.0 = CallSafeBuiltin    wed   vector("integer", 0L)    <int->
  val?^ | miss    %138.1 = LdVar              eR    list, ?
  lgl$#-          %138.2 = Identical                <blt list>, %138.1   <true>
  void                    Branch                   %138.2 -> BB140 (if true) | BB141 (if false)
BB139   <- [0]
  env             e139.0 = (MkEnv)            l     x=%0.1, wts=%0.0, parent=?, context 1
  fs              %139.1 = FrameState         R     0x558f3e5d1df0+0: [], env=e139.0
  void                    Deopt              !v    %139.1, CallTarget@0x558f3afa19c8[Call#0], %0.2
BB140   <- [138]
  env             e140.0 = MkEnv              l     x=%0.1, wts=%0.0, depth=0L, jj=%138.0, kk=%138.0, xx=list(), parent=?, context 1
  goto BB5
BB141   <- [138]
  env             e141.0 = (MkEnv)            l     x=%0.1, wts=%0.0, depth=0L, parent=?, context 1
  fs              %141.1 = FrameState         R     0x558f3e5d1df0+42: [], env=e141.0
  env             e141.2 = (MkEnv)            l     length=0L, parent=R_BaseNamespace, context 0
  fs              %141.3 = FrameState         R     0x558f3a540840+33: [%138.0], env=e141.2, next=%141.1
  void                    Deopt              !v    %141.3, DeadBranchReached@0x558f3afa19c8[Test#0], %138.2
BB5   <- [140, 226, 238]
  val?^ | miss    %5.0  = LdVar              eR    is.leaf, e140.0
  lgl$#-          %5.1  = Identical                %5.0, function(object) <(rir::DispatchTable*)0x558f3|...>
  void                    Branch                   %5.1 -> BB142 (if true) | BB143 (if false)
BB142   <- [5]
  prom-           %142.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p0 (!refl), e140.0
  ct              %142.1 = PushContext        lCL   %142.0, is.leaf(x), function(object) <(rir::DispatchTable*)0x558f3|...>, e140.0
  val?^           %142.2 = CastType                 up %142.0
  val?^ | miss    %142.3 = LdVar              eR    is.logical, <env 0x558f3a3ecb50>
  lgl$#-          %142.4 = Identical                <blt is.logical>, %142.3   <true>
  void                    Branch                   %142.4 -> BB144 (if true) | BB145 (if false)
BB143   <- [5]
  fs              %143.0 = FrameState         R     0x558f3e5d1df0+153: [], env=e140.0
  void                    Deopt              !v    %143.0, CallTarget@0x558f3afa19c8[Call#2], %5.0   !
BB144   <- [142]
  val?^ | miss    %144.0 = LdVar              eR    attr, <env 0x558f3a3ecb50>
  lgl$#-          %144.1 = Identical                <blt attr>, %144.0   <true>
  void                    Branch                   %144.1 -> BB146 (if true) | BB147 (if false)
BB145   <- [142]
  void                    Nop                !     
  lgl$#-          %145.1 = %142.4
  dr              %145.2 = DeadBranchReached@0x558f3af752d8[Test#0]
  goto BB8
BB146   <- [144]
  env             e146.0 = MkEnv              l     object=%142.2, parent=<env 0x558f3a3ecb50>, context 1
  val?            %146.1 = Force!<lazy>       !vr   %142.2, e146.0   <(int|vec)>
  val?            %146.2 = CallBuiltin        !v    attr(%146.1, "leaf") e146.0   <(nil|lgl)->
  void                    StVar              lW    L, %146.2, e146.0
  val+            %146.4 = CallSafeBuiltin    wed   is.logical(%146.2)    <lgl$->
  lgl$#-          %146.5 = IsType                   %146.4 isA lgl$-
  void                    Branch                   %146.5 -> BB148 (if true) | BB149 (if false)
BB147   <- [144]
  void                    Nop                !     
  lgl$#-          %147.1 = %144.1
  dr              %147.2 = DeadBranchReached@0x558f3af752d8[Test#1]
  goto BB8
BB8   <- [145, 147]
  val?^ | miss    %8.0  = Phi                      %145.1:BB145, %147.1:BB147
  val?^ | miss    %8.1  = %8.0
  dr              %8.2  = Phi                      %145.2:BB145, %147.2:BB147
  dr              %8.3  = %8.2
  fs              %8.4  = FrameState         R     0x558f3e5d1df0+185: [], env=e140.0
  env             e8.5  = (MkEnv)            l     object=%142.2, parent=<env 0x558f3a3ecb50>, context 1
  fs              %8.6  = FrameState         R     0x558f3ac9a2b0+17: [<blt is.logical>, %142.4], env=e8.5, next=%8.4
  void                    Deopt              !v    %8.6, %8.3, %8.1   !
BB148   <- [146]
  lgl$-           %148.0 = CastType           d     dn %146.4
  lgl$-           %148.1 = AsLogical                %148.0
  lgl$#-          %148.2 = Identical                %148.1, false
  void                    Branch                   %148.2 -> BB136 (if true) | BB12 (if false)
BB149   <- [146]
  fs              %149.0 = FrameState         R     0x558f3e5d1df0+185: [], env=e140.0
  fs              %149.1 = FrameState         R     0x558f3ac9a2b0+195: [%146.4], env=e146.0, next=%149.0
  void                    Deopt              !v    %149.1, Typecheck@0x558f3af752d8[Type#5], %146.4   !
BB136   <- [148]
  void                    Nop                !     
  lgl$-           %136.1 = %148.1
  goto BB13
BB12   <- [148]
  val             %12.0 = ChkMissing         e     %146.2
  lgl$-           %12.1 = AsLogical          e     %146.2
  lgl$-           %12.2 = LAnd                     %148.1, %12.1
  lgl$-           %12.3 = %12.2
  goto BB13
BB13   <- [136, 12]
  lgl$-           %13.0 = Phi                      %12.3:BB12, %136.1:BB136
  lgl$-           %13.1 = %13.0
  val?            %13.2 = PopContext         C     %13.1, %142.1   <lgl$->
  lgl$#-          %13.3 = IsType                   %13.2 isA lgl$-
  void                    Branch                   %13.3 -> BB150 (if true) | BB151 (if false)
BB150   <- [13]
  lgl$-           %150.0 = CastType           d     dn %13.2
  lgl$#-          %150.1 = CheckTrueFalse     e     %150.0
  void                    Branch                   %150.1 -> BB39 (if true) | BB16 (if false)
BB151   <- [13]
  void                    Nop                !     
  val?            %151.1 = %13.2
  dr              %151.2 = Typecheck@0x558f3afa19c8[Type#3]
  goto BB14
BB39   <- [150]
  val?^ | miss    %39.0 = LdVar              eR    wts, e140.0
  val?            %39.1 = Force!<lazy>       !v    %39.0, e140.0   <int->
  lgl$#-          %39.2 = IsType                   %39.1 isA val+   <true>
  void                    Branch                   %39.2 -> BB152 (if true) | BB153 (if false)
BB16   <- [150]
  val?^ | miss    %16.0 = LdVar              eR    length, e140.0
  lgl$#-          %16.1 = Identical                <blt length>, %16.0   <true>
  void                    Branch                   %16.1 -> BB156 (if true) | BB157 (if false)
BB14   <- [151, 157]
  val?^ | miss    %14.0 = Phi                      %151.1:BB151, %157.1:BB157
  val?^ | miss    %14.1 = %14.0
  dr              %14.2 = Phi                      %151.2:BB151, %157.2:BB157
  dr              %14.3 = %14.2
  fs              %14.4 = FrameState         R     0x558f3e5d1df0+185: [%13.2], env=e140.0
  void                    Deopt              !v    %14.4, %14.3, %14.1   !
BB152   <- [39]
  val?^ | miss    %152.0 = LdVar              eR    x, e140.0
  val?            %152.1 = Force!<value>      !v    %152.0, e140.0   <int$>
  lgl$#-          %152.2 = IsType                   %152.1 isA val+   <false>
  void                    Branch                   %152.2 -> BB155 (if true) | BB154 (if false)
BB153   <- [39]
  fs              %153.0 = FrameState         R     0x558f3e5d1df0+837: [%39.1], env=e140.0
  void                    Deopt              !v    %153.0, DeadBranchReached@0x558f3afa19c8[Test#3], %39.2   !
BB156   <- [16]
  val?^ | miss    %156.0 = LdVar              eR    x, e140.0
  val?            %156.1 = Force!<wrapped>    !v    %156.0, e140.0   <vec>
  val?            %156.2 = CallBuiltin        !v    length(%156.1) e140.0   <int$->
  lgl$#-          %156.3 = IsType                   %156.2 isA int$-
  void                    Branch                   %156.3 -> BB162 (if true) | BB163 (if false)
BB157   <- [16]
  void                    Nop                !     
  lgl$#-          %157.1 = %16.1
  dr              %157.2 = DeadBranchReached@0x558f3afa19c8[Test#1]
  goto BB14
BB155   <- [152]
  fs              %155.0 = FrameState         R     0x558f3e5d1df0+882: [%39.1, %152.1], env=e140.0
  void                    Deopt              !v    %155.0, DeadBranchReached@0x558f3afa19c8[Test#5], %152.2   !
BB154   <- [152]
  val?            %154.0 = Extract1_1D        !v    %152.1, 1L, e140.0   <int$->
  lgl$#-          %154.1 = IsType                   %154.0 isA int$-
  void                    Branch                   %154.1 -> BB158 (if true) | BB159 (if false)
BB162   <- [156]
  int$-           %162.0 = CastType           d     dn %156.2
  void                    StVar              lW    k, %162.0, e140.0
  lgl$-           %162.2 = Eq                 d     %162.0, 0L, elided   <lgl$->
  lgl$#-          %162.3 = CheckTrueFalse     e     %162.2
  void                    Branch                   %162.3 -> BB38 (if true) | BB19 (if false)
BB163   <- [156]
  fs              %163.0 = FrameState         R     0x558f3e5d1df0+287: [%156.2], env=e140.0
  void                    Deopt              !v    %163.0, Typecheck@0x558f3afa19c8[Type#6], %156.2   !
BB158   <- [154]
  int$-           %158.0 = CastType           d     dn %154.0
  lgl$#-          %158.1 = IsType                   %39.1 isA int-
  void                    Branch                   %158.1 -> BB160 (if true) | BB161 (if false)
BB159   <- [154]
  void                    Nop                !     
  val?            %159.1 = %154.0
  dr              %159.2 = Typecheck@0x558f3afa19c8[Type#35]
  goto BB44
BB38   <- [162]
  (cls|spec|blt)  %38.0 = LdFun              !v    stop, e140.0
  fs              %38.1 = FrameState         R     0x558f3e5d1df0+343: [%38.0], env=e140.0
  void                    Deopt              !v    %38.1, DeadCall@0x558f3afa19c8[Call#4], %38.0   !
BB19   <- [162]
  val?^ | miss    %19.0 = LdVar              eR    depth, e140.0
  val?            %19.1 = Force!<value>      !v    %19.0, e140.0   <int$->
  lgl$#-          %19.2 = IsType                   %19.1 isA int$-
  void                    Branch                   %19.2 -> BB164 (if true) | BB165 (if false)
BB160   <- [158]
  int-            %160.0 = CastType           d     dn %39.1
  int-            %160.1 = Extract1_1D        wed   %160.0, %158.0, elided   <int$->
  lgl$#-          %160.2 = IsType                   %160.1 isA int$-
  void                    Branch                   %160.2 -> BB166 (if true) | BB167 (if false)
BB161   <- [158]
  void                    Nop                !     
  val?            %161.1 = %39.1
  dr              %161.2 = Typecheck@0x558f3afa19c8[Type#31]
  goto BB44
BB44   <- [159, 161]
  val?^ | miss    %44.0 = Phi                      %159.1:BB159, %161.1:BB161
  val?^ | miss    %44.1 = %44.0
  dr              %44.2 = Phi                      %159.2:BB159, %161.2:BB161
  dr              %44.3 = %44.2
  fs              %44.4 = FrameState         R     0x558f3e5d1df0+925: [%39.1, %154.0], env=e140.0
  void                    Deopt              !v    %44.4, %44.3, %44.1   !
BB164   <- [19]
  int$-           %164.0 = CastType           d     dn %19.1
  int$-           %164.1 = Add                d     %164.0, 1L, elided   <int$->
  void                    StVar              lW    depth, %164.1, e140.0
  val?^ | miss    %164.3 = LdVar              eR    k, e140.0
  lgl$#-          %164.4 = IsType                   %164.3 isA int$-
  void                    Branch                   %164.4 -> BB168 (if true) | BB169 (if false)
BB165   <- [19]
  fs              %165.0 = FrameState         R     0x558f3e5d1df0+380: [%19.1], env=e140.0
  void                    Deopt              !v    %165.0, Typecheck@0x558f3afa19c8[Type#9], %19.1   !
BB166   <- [160]
  int$-           %166.0 = CastType           d     dn %160.1
  (cls|spec|blt)  %166.1 = LdFun              !v    attr<-, <0x558f39da0e08>, e140.0
  val?^ | miss    %166.2 = LdVar              eR    x, e140.0
  val?            %166.3 = Force!<value>      !v    %166.2, e140.0   <int$>
  val?            %166.4 = NamedCall          !v    %166.1(%166.3, "value", value=%166.0) e140.0
  void                    StVar              lW    x, %166.4, e140.0
  val?^ | miss    %166.6 = LdVar              eR    depth, e140.0
  val?            %166.7 = Force!<value>      !v    %166.6, e140.0   <int$->
  lgl$#-          %166.8 = CheckTrueFalse     we    %166.7   <true>
  void                    Branch                   %166.8 -> BB170 (if true) | BB171 (if false)
BB167   <- [160]
  fs              %167.0 = FrameState         R     0x558f3e5d1df0+932: [%160.1], env=e140.0
  void                    Deopt              !v    %167.0, Typecheck@0x558f3afa19c8[Type#36], %160.1   !
BB168   <- [164]
  int$-           %168.0 = CastType           d     dn %164.3
  val?^ | miss    %168.1 = LdVar              eR    kk !upd, e140.0
  lgl$#-          %168.2 = IsType                   %168.1 isA int-
  void                    Branch                   %168.2 -> BB172 (if true) | BB173 (if false)
BB169   <- [164]
  void                    Nop                !     
  val?^ | miss    %169.1 = %164.3
  dr              %169.2 = Typecheck@0x558f3afa19c8[Type#11]
  goto BB22
BB170   <- [166]
  val?^ | miss    %170.0 = LdVar              eR    x, e140.0
  val?            %170.1 = Force!<value>      !v    %170.0, e140.0   <int$>
  void                    StVar              lW    b, %170.1, e140.0
  val?^ | miss    %170.3 = LdVar              eR    xx, e140.0
  val?            %170.4 = Force!<value>      !v    %170.3, e140.0   <vec->
  lgl$#-          %170.5 = IsType                   %170.4 isA val+   <true>
  lgl$#-          %170.6 = IsType                   %170.4 isA val?-
  void                    Branch                   %170.5 -> BB174 (if true) | BB175 (if false)
BB171   <- [166]
  fs              %171.0 = FrameState         R     0x558f3e5d1df0+1030: [%166.8], env=e140.0
  void                    Deopt              !v    %171.0, DeadBranchReached@0x558f3afa19c8[Test#6], %166.8   !
BB172   <- [168]
  int-            %172.0 = CastType           d     dn %168.1
  int-            %172.1 = Subassign1_1D      wed   %168.0, %172.0, %164.1, elided
  void                    StVar              lW    kk, %172.1, e140.0
  val?^ | miss    %172.3 = LdVar              eR    storage.mode, e140.0
  lgl$#-          %172.4 = Identical                %172.3, function(x) <(rir::DispatchTable*)0x558f3abef9|...>
  void                    Branch                   %172.4 -> BB176 (if true) | BB177 (if false)
BB173   <- [168]
  void                    Nop                !     
  val?^ | miss    %173.1 = %168.1
  dr              %173.2 = Typecheck@0x558f3afa19c8[Type#12]
  goto BB22
BB22   <- [169, 173]
  val?^ | miss    %22.0 = Phi                      %169.1:BB169, %173.1:BB173
  val?^ | miss    %22.1 = %22.0
  dr              %22.2 = Phi                      %169.2:BB169, %173.2:BB173
  dr              %22.3 = %22.2
  fs              %22.4 = FrameState         R     0x558f3e5d1df0+406: [], env=e140.0
  void                    Deopt              !v    %22.4, %22.3, %22.1   !
BB174   <- [170]
  val?^ | miss    %174.0 = LdVar              eR    depth, e140.0
  lgl$#-          %174.1 = IsType                   %174.0 isA int$-
  void                    Branch                   %174.1 -> BB180 (if true) | BB181 (if false)
BB175   <- [170]
  void                    Nop                !     
  lgl$#-          %175.1 = %170.5
  dr              %175.2 = DeadBranchReached@0x558f3afa19c8[Test#7]
  goto BB50
BB176   <- [172]
  prom-           %176.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p1, e140.0
  val?^           %176.1 = CastType                 up %176.0
  env             e176.2 = MkEnv              l     x=%176.1, parent=R_BaseNamespace, context 0
  val?^ | miss    %176.3 = LdVar              eR    typeof, e176.2
  lgl$#-          %176.4 = Identical                %176.3, function(x) <(rir::DispatchTable*)0x558f3c8fc2|...>
  void                    Branch                   %176.4 -> BB178 (if true) | BB179 (if false)
BB177   <- [172]
  void                    Nop                !     
  val?^ | miss    %177.1 = %172.3
  dr              %177.2 = CallTarget@0x558f3afa19c8[Call#5]
  goto BB24
BB180   <- [174]
  int$-           %180.0 = CastType           d     dn %174.0
  void                    Branch                   %170.6 -> BB182 (if true) | BB183 (if false)
BB181   <- [174]
  void                    Nop                !     
  val?^ | miss    %181.1 = %174.0
  dr              %181.2 = Typecheck@0x558f3afa19c8[Type#42]
  goto BB50
BB50   <- [175, 181, 183]
  val?^ | miss    %50.0 = Phi                      %175.1:BB175, %181.1:BB181, %183.1:BB183
  val?^ | miss    %50.1 = %50.0
  dr              %50.2 = Phi                      %175.2:BB175, %181.2:BB181, %183.2:BB183
  dr              %50.3 = %50.2
  fs              %50.4 = FrameState         R     0x558f3e5d1df0+1072: [%170.4], env=e140.0
  void                    Deopt              !v    %50.4, %50.3, %50.1   !
BB178   <- [176]
  val?            %178.0 = Force!<lazy>       !vL   %176.1, e176.2   <int->
  str$-           %178.1 = CallSafeBuiltin    wed   typeof(%178.0)    <str$->
  int$-           %178.2 = Length                   %178.1
  void                    StVar              lW    tx, %178.1, e176.2
  lgl$-           %178.4 = Eq                 d     %178.2, 1L, elided   <true>
  lgl$#-          %178.5 = Identical                %178.4, true
  void                    Branch                   %178.5 -> BB184 (if true) | BB185 (if false)
BB179   <- [176]
  void                    Nop                !     
  val?^ | miss    %179.1 = %176.3
  dr              %179.2 = CallTarget@0x558f3af754e8[Call#0]
  goto BB24
BB24   <- [177, 179]
  val?^ | miss    %24.0 = Phi                      %177.1:BB177, %179.1:BB179
  val?^ | miss    %24.1 = %24.0
  dr              %24.2 = Phi                      %177.2:BB177, %179.2:BB179
  dr              %24.3 = %24.2
  fs              %24.4 = FrameState         R     0x558f3e5d1df0+458: [], env=e140.0
  void                    Deopt              !v    %24.4, %24.3, %24.1   !
BB182   <- [180]
  val?-           %182.0 = CastType           d     dn %170.4   <vec->
  val?            %182.1 = Extract2_1D        wed   %182.0, %180.0, elided   <vec>
  void                    StVar              lW    x, %182.1, e140.0
  val?^ | miss    %182.3 = LdVar              eR    jj, e140.0
  val?            %182.4 = Force!<value>      !v    %182.3, e140.0   <int->
  lgl$#-          %182.5 = IsType                   %182.4 isA val+   <true>
  lgl$#-          %182.6 = IsType                   %182.4 isA int-
  void                    Branch                   %182.5 -> BB190 (if true) | BB191 (if false)
BB183   <- [180]
  void                    Nop                !     
  val?            %183.1 = %170.4
  dr              %183.2 = Typecheck@0x558f3afa19c8[Type#40]
  goto BB50
BB184   <- [178]
  lgl$-           %184.0 = CallSafeBuiltin    wed   is.na(%178.1) 
  lgl$#-          %184.1 = CheckTrueFalse     e     %184.0   <false>
  void                    Branch                   %184.1 -> BB187 (if true) | BB186 (if false)
BB185   <- [178]
  fs              %185.0 = FrameState         R     0x558f3e5d1df0+490: [], env=e140.0
  fs              %185.1 = FrameState         R     0x558f3aa447b0+48: [%178.1], env=e176.2, next=%185.0
  void                    Deopt              !v    %185.1, DeadBranchReached@0x558f3af754e8[Test#1], %178.5   !
BB190   <- [182]
  val?^ | miss    %190.0 = LdVar              eR    depth, e140.0
  lgl$#-          %190.1 = IsType                   %190.0 isA int$-
  void                    Branch                   %190.1 -> BB192 (if true) | BB193 (if false)
BB191   <- [182]
  void                    Nop                !     
  lgl$#-          %191.1 = %182.5
  dr              %191.2 = DeadBranchReached@0x558f3afa19c8[Test#8]
  goto BB52
BB187   <- [184]
  void                    Nop                !     
  lgl$#-          %187.1 = %184.1
  dr              %187.2 = DeadBranchReached@0x558f3af754e8[Test#8]
  goto BB28
BB186   <- [184]
  lgl$-           %186.0 = Eq                 d     %178.1, closure, elided
  lgl$#-          %186.1 = CheckTrueFalse     e     %186.0   <false>
  void                    Branch                   %186.1 -> BB189 (if true) | BB188 (if false)
BB192   <- [190]
  int$-           %192.0 = CastType           d     dn %190.0
  void                    Branch                   %182.6 -> BB200 (if true) | BB201 (if false)
BB193   <- [190]
  void                    Nop                !     
  val?^ | miss    %193.1 = %190.0
  dr              %193.2 = Typecheck@0x558f3afa19c8[Type#46]
  goto BB52
BB52   <- [191, 193, 201]
  val?^ | miss    %52.0 = Phi                      %191.1:BB191, %193.1:BB193, %201.1:BB201
  val?^ | miss    %52.1 = %52.0
  dr              %52.2 = Phi                      %191.2:BB191, %193.2:BB193, %201.2:BB201
  dr              %52.3 = %52.2
  fs              %52.4 = FrameState         R     0x558f3e5d1df0+1147: [%182.4], env=e140.0
  void                    Deopt              !v    %52.4, %52.3, %52.1   !
BB28   <- [187, 189, 195, 197, 199, 203]
  val?^ | miss    %28.0 = Phi                      %187.1:BB187, %189.1:BB189, %195.1:BB195, %197.1:BB197, %199.1:BB199, %203.1:BB203
  val?^ | miss    %28.1 = %28.0
  dr              %28.2 = Phi                      %187.2:BB187, %189.2:BB189, %195.2:BB195, %197.2:BB197, %199.2:BB199, %203.2:BB203
  dr              %28.3 = %28.2
  fs              %28.4 = FrameState         R     0x558f3e5d1df0+490: [], env=e140.0
  fs              %28.5 = FrameState         R     0x558f3aa447b0+269: [%178.1, %184.0], env=e176.2, next=%28.4
  void                    Deopt              !v    %28.5, %28.3, %28.1   !
BB189   <- [186]
  void                    Nop                !     
  lgl$#-          %189.1 = %186.1
  dr              %189.2 = DeadBranchReached@0x558f3af754e8[Test#9]
  goto BB28
BB188   <- [186]
  lgl$-           %188.0 = Eq                 d     %178.1, builtin, elided
  lgl$#-          %188.1 = CheckTrueFalse     e     %188.0   <false>
  void                    Branch                   %188.1 -> BB195 (if true) | BB194 (if false)
BB200   <- [192]
  int-            %200.0 = CastType           d     dn %182.4
  int-            %200.1 = Extract1_1D        wed   %200.0, %192.0, elided   <int$->
  lgl$#-          %200.2 = IsType                   %200.1 isA int$-
  void                    Branch                   %200.2 -> BB206 (if true) | BB207 (if false)
BB201   <- [192]
  void                    Nop                !     
  val?            %201.1 = %182.4
  dr              %201.2 = Typecheck@0x558f3afa19c8[Type#44]
  goto BB52
BB195   <- [188]
  void                    Nop                !     
  lgl$#-          %195.1 = %188.1
  dr              %195.2 = DeadBranchReached@0x558f3af754e8[Test#10]
  goto BB28
BB194   <- [188]
  lgl$-           %194.0 = Eq                 d     %178.1, special, elided
  lgl$#-          %194.1 = CheckTrueFalse     e     %194.0   <false>
  void                    Branch                   %194.1 -> BB197 (if true) | BB196 (if false)
BB206   <- [200]
  int$-           %206.0 = CastType           d     dn %200.1
  void                    StVar              lW    j, %206.0, e140.0
  val?^ | miss    %206.2 = LdVar              eR    b, e140.0
  val?            %206.3 = Force!<value>      !v    %206.2, e140.0   <int$>
  val?^ | miss    %206.4 = LdVar              eR    x, e140.0
  val?            %206.5 = Force!<value>      !v    %206.4, e140.0   <vec>
  val?^ | miss    %206.6 = LdVar              eR    j, e140.0
  lgl$#-          %206.7 = IsType                   %206.6 isA int$-
  void                    Branch                   %206.7 -> BB210 (if true) | BB211 (if false)
BB207   <- [200]
  fs              %207.0 = FrameState         R     0x558f3e5d1df0+1198: [%200.1], env=e140.0
  void                    Deopt              !v    %207.0, Typecheck@0x558f3afa19c8[Type#47], %200.1   !
BB197   <- [194]
  void                    Nop                !     
  lgl$#-          %197.1 = %194.1
  dr              %197.2 = DeadBranchReached@0x558f3af754e8[Test#11]
  goto BB28
BB196   <- [194]
  val?^ | miss    %196.0 = LdVar              eR    storage.mode, e140.0
  lgl$#-          %196.1 = Identical                %196.0, function(x) <(rir::DispatchTable*)0x558f3abef9|...>
  void                    Branch                   %196.1 -> BB198 (if true) | BB199 (if false)
BB210   <- [206]
  int$-           %210.0 = CastType           d     dn %206.6
  val?            %210.1 = Subassign2_1D      !v    %206.3, %206.5, %210.0, e140.0
  void                    StVar              lW    x, %210.1, e140.0
  val?^ | miss    %210.3 = LdVar              eR    j, e140.0
  lgl$#-          %210.4 = IsType                   %210.3 isA int$-
  void                    Branch                   %210.4 -> BB214 (if true) | BB215 (if false)
BB211   <- [206]
  fs              %211.0 = FrameState         R     0x558f3e5d1df0+1236: [%206.3, %206.5], env=e140.0
  void                    Deopt              !v    %211.0, Typecheck@0x558f3afa19c8[Type#50], %206.6   !
BB198   <- [196]
  prom-           %198.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p2, e140.0
  val?^           %198.1 = CastType                 up %198.0
  env             e198.2 = MkEnv              l     x=%198.1, parent=R_BaseNamespace, context 0
  val?^ | miss    %198.3 = LdVar              eR    typeof, e198.2
  lgl$#-          %198.4 = Identical                %198.3, function(x) <(rir::DispatchTable*)0x558f3c8fc2|...>
  void                    Branch                   %198.4 -> BB202 (if true) | BB203 (if false)
BB199   <- [196]
  void                    Nop                !     
  val?^ | miss    %199.1 = %196.0
  dr              %199.2 = CallTarget@0x558f3afa19c8[Call#6]
  goto BB28
BB214   <- [210]
  int$-           %214.0 = CastType           d     dn %210.3
  val?^ | miss    %214.1 = LdVar              eR    kk, e140.0
  val?            %214.2 = Force!<value>      !v    %214.1, e140.0   <int->
  lgl$#-          %214.3 = IsType                   %214.2 isA val+   <true>
  lgl$#-          %214.4 = IsType                   %214.2 isA int-
  void                    Branch                   %214.3 -> BB218 (if true) | BB219 (if false)
BB215   <- [210]
  fs              %215.0 = FrameState         R     0x558f3e5d1df0+1265: [], env=e140.0
  void                    Deopt              !v    %215.0, Typecheck@0x558f3afa19c8[Type#51], %210.3   !
BB202   <- [198]
  val?            %202.0 = Force!<lazy>       !vL   %198.1, e198.2   <int->
  str$-           %202.1 = CallSafeBuiltin    wed   typeof(%202.0)    <str$->
  int$-           %202.2 = Length                   %202.1
  void                    StVar              lW    tx, %202.1, e198.2
  lgl$-           %202.4 = Eq                 d     %202.2, 1L, elided   <true>
  lgl$#-          %202.5 = Identical                %202.4, true
  void                    Branch                   %202.5 -> BB204 (if true) | BB205 (if false)
BB203   <- [198]
  void                    Nop                !     
  val?^ | miss    %203.1 = %198.3
  dr              %203.2 = CallTarget@0x558f3af754e8[Call#0]
  goto BB28
BB218   <- [214]
  val?^ | miss    %218.0 = LdVar              eR    depth, e140.0
  lgl$#-          %218.1 = IsType                   %218.0 isA int$-
  void                    Branch                   %218.1 -> BB220 (if true) | BB221 (if false)
BB219   <- [214]
  void                    Nop                !     
  lgl$#-          %219.1 = %214.3
  dr              %219.2 = DeadBranchReached@0x558f3afa19c8[Test#9]
  goto BB60
BB204   <- [202]
  lgl$-           %204.0 = CallSafeBuiltin    wed   is.na(%202.1) 
  lgl$#-          %204.1 = CheckTrueFalse     e     %204.0   <false>
  void                    Branch                   %204.1 -> BB209 (if true) | BB208 (if false)
BB205   <- [202]
  fs              %205.0 = FrameState         R     0x558f3e5d1df0+527: [%178.1], env=e140.0
  fs              %205.1 = FrameState         R     0x558f3aa447b0+48: [%202.1], env=e198.2, next=%205.0
  void                    Deopt              !v    %205.1, DeadBranchReached@0x558f3af754e8[Test#1], %202.5   !
BB220   <- [218]
  int$-           %220.0 = CastType           d     dn %218.0
  void                    Branch                   %214.4 -> BB222 (if true) | BB223 (if false)
BB221   <- [218]
  void                    Nop                !     
  val?^ | miss    %221.1 = %218.0
  dr              %221.2 = Typecheck@0x558f3afa19c8[Type#54]
  goto BB60
BB60   <- [219, 221, 223]
  val?^ | miss    %60.0 = Phi                      %219.1:BB219, %221.1:BB221, %223.1:BB223
  val?^ | miss    %60.1 = %60.0
  dr              %60.2 = Phi                      %219.2:BB219, %221.2:BB221, %223.2:BB223
  dr              %60.3 = %60.2
  fs              %60.4 = FrameState         R     0x558f3e5d1df0+1288: [%214.0, %214.2], env=e140.0
  void                    Deopt              !v    %60.4, %60.3, %60.1   !
BB209   <- [204]
  void                    Nop                !     
  lgl$#-          %209.1 = %204.1
  dr              %209.2 = DeadBranchReached@0x558f3af754e8[Test#8]
  goto BB32
BB208   <- [204]
  lgl$-           %208.0 = Eq                 d     %202.1, closure, elided
  lgl$#-          %208.1 = CheckTrueFalse     e     %208.0   <false>
  void                    Branch                   %208.1 -> BB213 (if true) | BB212 (if false)
BB222   <- [220]
  int-            %222.0 = CastType           d     dn %214.2
  int-            %222.1 = Extract1_1D        wed   %222.0, %220.0, elided   <int$->
  lgl$#-          %222.2 = IsType                   %222.1 isA int$-
  void                    Branch                   %222.2 -> BB228 (if true) | BB229 (if false)
BB223   <- [220]
  void                    Nop                !     
  val?            %223.1 = %214.2
  dr              %223.2 = Typecheck@0x558f3afa19c8[Type#52]
  goto BB60
BB32   <- [209, 213, 217, 225]
  val?^ | miss    %32.0 = Phi                      %209.1:BB209, %213.1:BB213, %217.1:BB217, %225.1:BB225
  val?^ | miss    %32.1 = %32.0
  dr              %32.2 = Phi                      %209.2:BB209, %213.2:BB213, %217.2:BB217, %225.2:BB225
  dr              %32.3 = %32.2
  fs              %32.4 = FrameState         R     0x558f3e5d1df0+527: [%178.1], env=e140.0
  fs              %32.5 = FrameState         R     0x558f3aa447b0+269: [%202.1, %204.0], env=e198.2, next=%32.4
  void                    Deopt              !v    %32.5, %32.3, %32.1   !
BB213   <- [208]
  void                    Nop                !     
  lgl$#-          %213.1 = %208.1
  dr              %213.2 = DeadBranchReached@0x558f3af754e8[Test#9]
  goto BB32
BB212   <- [208]
  lgl$-           %212.0 = Eq                 d     %202.1, builtin, elided
  lgl$#-          %212.1 = CheckTrueFalse     e     %212.0   <false>
  void                    Branch                   %212.1 -> BB217 (if true) | BB216 (if false)
BB228   <- [222]
  int$-           %228.0 = CastType           d     dn %222.1
  lgl$-           %228.1 = Lt                 d     %214.0, %228.0, elided   <lgl$->
  lgl$#-          %228.2 = CheckTrueFalse     e     %228.1
  void                    Branch                   %228.2 -> BB135 (if true) | BB64 (if false)
BB229   <- [222]
  fs              %229.0 = FrameState         R     0x558f3e5d1df0+1339: [%214.0, %222.1], env=e140.0
  void                    Deopt              !v    %229.0, Typecheck@0x558f3afa19c8[Type#55], %222.1   !
BB217   <- [212]
  void                    Nop                !     
  lgl$#-          %217.1 = %212.1
  dr              %217.2 = DeadBranchReached@0x558f3af754e8[Test#10]
  goto BB32
BB216   <- [212]
  lgl$-           %216.0 = Eq                 d     %202.1, special, elided
  lgl$#-          %216.1 = CheckTrueFalse     e     %216.0   <false>
  void                    Branch                   %216.1 -> BB225 (if true) | BB224 (if false)
BB135   <- [228]
  void                    Nop                !     
  goto BB87
BB64   <- [228]
  int$-           %64.0 = Sub                d     %220.0, 1L, elided   <int$->
  void                    StVar              lW    depth, %64.0, e140.0
  val?^ | miss    %64.2 = LdVar              eR    vapply, e140.0
  lgl$#-          %64.3 = Identical                %64.2, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...>
  void                    Branch                   %64.3 -> BB230 (if true) | BB231 (if false)
BB225   <- [216]
  void                    Nop                !     
  lgl$#-          %225.1 = %216.1
  dr              %225.2 = DeadBranchReached@0x558f3af754e8[Test#11]
  goto BB32
BB224   <- [216]
  lgl$-           %224.0 = Neq                d     %178.1, %202.1, elided   <lgl$->
  lgl$#-          %224.1 = CheckTrueFalse     e     %224.0
  void                    Branch                   %224.1 -> BB37 (if true) | BB34 (if false)
BB87   <- [132, 86, 135]
  val?^ | miss    %87.0 = LdVar              eR    depth, e140.0
  val?            %87.1 = Force!<value>      !v    %87.0, e140.0   <int$->
  lgl$#-          %87.2 = IsType                   %87.1 isA int$-
  void                    Branch                   %87.2 -> BB232 (if true) | BB233 (if false)
BB230   <- [64]
  prom-           %230.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p5, e140.0
  prom-           %230.1 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p6, e140.0
  prom-           %230.2 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p7, e140.0
  dots-           %230.3 = DotsList           l     which="value"
  ct              %230.4 = PushContext        lCL   %230.0, %230.1, %230.2, %230.3, vapply(x, attr, numeric(1L), which="value"), function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...>, e140.0
  val?^           %230.5 = CastType                 up %230.2
  val?^           %230.6 = CastType                 up %230.1
  val?^           %230.7 = CastType                 up %230.0
  env             e230.8 = MkEnv              l     X=%230.7, FUN=%230.6, FUN.VALUE=%230.5, ...=%230.3, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  val?^ | miss    %230.9 = LdVar              eR    match.fun, e230.8
  lgl$#-          %230.10 = Identical                %230.9, function(FUN, descend=TRUE) <(rir::DispatchTab|...>
  void                    Branch                   %230.10 -> BB234 (if true) | BB235 (if false)
BB231   <- [64]
  fs              %231.0 = FrameState         R     0x558f3e5d1df0+1407: [], env=e140.0
  void                    Deopt              !v    %231.0, CallTarget@0x558f3afa19c8[Call#10], %64.2   !
BB37   <- [224]
  (cls|spec|blt)  %37.0 = LdFun              !v    storage.mode, e140.0
  fs              %37.1 = FrameState         R     0x558f3e5d1df0+554: [%37.0], env=e140.0
  void                    Deopt              !v    %37.1, DeadCall@0x558f3afa19c8[Call#7], %37.0   !
BB34   <- [224]
  val?^ | miss    %34.0 = LdVar              eR    x, e140.0
  val?            %34.1 = Force!<wrapped>    !v    %34.0, e140.0   <vec>
  val?^ | miss    %34.2 = LdVar              eR    xx, e140.0
  val?            %34.3 = Force!<value>      !v    %34.2, e140.0   <vec->
  val?^ | miss    %34.4 = LdVar              eR    depth, e140.0
  val?            %34.5 = Force!<value>      !v    %34.4, e140.0   <int$->
  val?            %34.6 = Subassign2_1D      !v    %34.1, %34.3, %34.5, e140.0
  void                    StVar              lW    xx, %34.6, e140.0
  val?^ | miss    %34.8 = LdVar              eR    x, e140.0
  val?            %34.9 = Force!<wrapped>    !v    %34.8, e140.0   <vec>
  lgl$#-          %34.10 = IsType                   %34.9 isA val+   <false>
  void                    Branch                   %34.10 -> BB227 (if true) | BB226 (if false)
BB232   <- [87]
  int$-           %232.0 = CastType           d     dn %87.1
  lgl$-           %232.1 = Not                d     %232.0, elided
  lgl$#-          %232.2 = CheckTrueFalse     e     %232.1
  void                    Branch                   %232.2 -> BB93 (if true) | BB90 (if false)
BB233   <- [87]
  fs              %233.0 = FrameState         R     0x558f3e5d1df0+2494: [%87.1], env=e140.0
  void                    Deopt              !v    %233.0, Typecheck@0x558f3afa19c8[Type#114], %87.1   !
BB234   <- [230]
  prom-           %234.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p32, e230.8
  val?            %234.1 = StaticCall         !v    match.fun[0x558f3e1fa350](%234.0) e230.8   <(cls|blt)->
  void                    StVar              lW    FUN, %234.1, e230.8
  val?^ | miss    %234.3 = LdVar              eR    is.vector, e230.8
  lgl$#-          %234.4 = Identical                %234.3, function(x, mode="any") <(rir::DispatchTable*)|...>
  void                    Branch                   %234.4 -> BB236 (if true) | BB237 (if false)
BB235   <- [230]
  fs              %235.0 = FrameState         R     0x558f3e5d1df0+1470: [], env=e140.0
  env             e235.1 = (MkEnv)            l     X=%230.7, FUN=%230.6, FUN.VALUE=%230.5, ...=%230.3, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  fs              %235.2 = FrameState         R     0x558f3e12aa00+0: [], env=e235.1, next=%235.0
  void                    Deopt              !v    %235.2, CallTarget@0x558f3e072500[Call#0], %230.9   !
BB227   <- [34]
  fs              %227.0 = FrameState         R     0x558f3e5d1df0+715: [%34.9], env=e140.0
  void                    Deopt              !v    %227.0, DeadBranchReached@0x558f3afa19c8[Test#2], %34.10   !
BB226   <- [34]
  prom-           %226.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p3, e140.0
  val?            %226.1 = Extract2_1D        !v    %34.9, %226.0, e140.0   <(int|vec)>
  void                    StVar              lW    x, %226.1, e140.0
  goto BB5
BB93   <- [232]
  val?^ | miss    %93.0 = LdVar              eR    x, e140.0
  void                    Visible            v     
  val?            %93.2 = Force!<value>      !     %93.0, e140.0   <vec>
  void                    Return             l     %93.2
BB90   <- [232]
  val?^ | miss    %90.0 = LdVar              eR    x, e140.0
  val?            %90.1 = Force!<value>      !v    %90.0, e140.0   <vec>
  val?^ | miss    %90.2 = LdVar              eR    xx, e140.0
  val?            %90.3 = Force!<value>      !v    %90.2, e140.0   <vec->
  val?^ | miss    %90.4 = LdVar              eR    depth, e140.0
  val?            %90.5 = Force!<value>      !v    %90.4, e140.0   <int$->
  val?            %90.6 = Subassign2_1D      !v    %90.1, %90.3, %90.5, e140.0
  void                    StVar              lW    xx, %90.6, e140.0
  val?^ | miss    %90.8 = LdVar              eR    x, e140.0
  val?            %90.9 = Force!<value>      !v    %90.8, e140.0   <vec>
  lgl$#-          %90.10 = IsType                   %90.9 isA val+   <false>
  void                    Branch                   %90.10 -> BB239 (if true) | BB238 (if false)
BB236   <- [234]
  val?^ | miss    %236.0 = LdVar              eR    X, e230.8
  val?            %236.1 = Force!<lazy>       !v    %236.0, e230.8   <vec>
  lgl$#-          %236.2 = CallSafeBuiltin    wed   is.vector(%236.1, "any")    <lgl$->
  lgl$#-          %236.3 = Not                d     %236.2, elided
  void                    Branch                   %236.2 -> BB134 (if true) | BB73 (if false)
BB237   <- [234]
  fs              %237.0 = FrameState         R     0x558f3e5d1df0+1470: [], env=e140.0
  fs              %237.1 = FrameState         R     0x558f3e12aa00+46: [], env=e230.8, next=%237.0
  void                    Deopt              !v    %237.1, CallTarget@0x558f3e072500[Call#1], %234.3   !
BB239   <- [90]
  fs              %239.0 = FrameState         R     0x558f3e5d1df0+2582: [%90.9], env=e140.0
  void                    Deopt              !v    %239.0, DeadBranchReached@0x558f3afa19c8[Test#17], %90.10   !
BB238   <- [90]
  prom-           %238.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p27, e140.0
  val?            %238.1 = Extract2_1D        !v    %90.9, %238.0, e140.0   <(int|vec)>
  void                    StVar              lW    x, %238.1, e140.0
  goto BB5
BB134   <- [236]
  val?^ | miss    %134.0 = LdVar              eR    is.object, e230.8
  lgl$#-          %134.1 = Identical                <blt is.object>, %134.0   <true>
  void                    Branch                   %134.1 -> BB240 (if true) | BB241 (if false)
BB73   <- [236]
  void                    Nop                !     
  lgl$#-          %73.1 = %236.3
  goto BB74
BB240   <- [134]
  val?^ | miss    %240.0 = LdVar              eR    X, e230.8
  val?            %240.1 = Force!<wrapped>    !v    %240.0, e230.8   <vec$->
  lgl$#-          %240.2 = CallSafeBuiltin    wed   is.object(%240.1)    <lgl$->
  lgl$-           %240.3 = LOr                      %236.3, %240.2
  lgl$-           %240.4 = %240.3
  goto BB74
BB241   <- [134]
  fs              %241.0 = FrameState         R     0x558f3e5d1df0+1470: [], env=e140.0
  fs              %241.1 = FrameState         R     0x558f3e12aa00+78: [], env=e230.8, next=%241.0
  prom-           %241.2 = MkArg                    %236.1, oV[0x558f3e4a5910]_p33 (!refl), e230.8
  val?~           %241.3 = CastType                 up %241.2
  env             e241.4 = (MkEnv)            l     mode(miss)="any", x=%241.3, parent=R_BaseNamespace, context 0
  fs              %241.5 = FrameState         R     0x558f3e0dd2f0+41: [%236.2], env=e241.4, next=%241.1
  void                    Deopt              !v    %241.5, DeadBranchReached@0x558f3e072500[Test#0], %134.1   !
BB74   <- [73, 240]
  lgl$-           %74.0 = Phi                      %240.4:BB240, %73.1:BB73
  lgl$-           %74.1 = %74.0
  lgl$#-          %74.2 = CheckTrueFalse     e     %74.1
  void                    Branch                   %74.2 -> BB133 (if true) | BB77 (if false)
BB133   <- [74]
  val?^ | miss    %133.0 = LdVar              eR    as.list, e230.8
  lgl$#-          %133.1 = Identical                %133.0, function(x, ...) <(rir::DispatchTable*)0x558f3|...>
  void                    Branch                   %133.1 -> BB242 (if true) | BB243 (if false)
BB77   <- [74]
  void                    Nop                !     
  goto BB78
BB242   <- [133]
  val?^ | miss    %242.0 = LdVar              eR    X, e230.8
  val?            %242.1 = Force!<wrapped>    !v    %242.0, e230.8   <vec>
  val?            %242.2 = StaticCall         !v    as.list[0x558f3e18f050](%242.1) { 0 } e230.8   <vec>
  void                    StVar              lW    X, %242.2, e230.8
  goto BB78
BB243   <- [133]
  fs              %243.0 = FrameState         R     0x558f3e5d1df0+1470: [], env=e140.0
  fs              %243.1 = FrameState         R     0x558f3e12aa00+189: [%74.1], env=e230.8, next=%243.0
  void                    Deopt              !v    %243.1, CallTarget@0x558f3e072500[Call#3], %133.0   !
BB78   <- [77, 242]
  (cls|spec|blt)  %78.0 = LdFun              !v    .Internal, <0x558f39d9c698>, e230.8
  prom-           %78.1 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p34, e230.8
  val?            %78.2 = Call               !v    %78.0(%78.1) e230.8   <(lgl|real)->
  val?            %78.3 = PopContext         C     %78.2, %230.4   <real->
  void                    StVar              lW    vals, %78.3, e140.0
  val?^ | miss    %78.5 = LdVar              eR    sort.list, e140.0
  lgl$#-          %78.6 = Identical                %78.5, function(x, partial=NULL, na.last=TRUE, decrea|...>
  void                    Branch                   %78.6 -> BB244 (if true) | BB245 (if false)
BB244   <- [78]
  prom-           %244.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p8 (!refl), e140.0
  val?            %244.1 = Call               !v    function(x, partial=NULL, na.last=TRUE, decrea|...>(%244.0) e140.0   <int->
  void                    StVar              lW    iOrd, %244.1, e140.0
  val?^ | miss    %244.3 = LdVar              eR    agglo.FUN, e140.0
  lgl$#-          %244.4 = Identical                %244.3, <blt sum>
  void                    Branch                   %244.4 -> BB246 (if true) | BB247 (if false)
BB245   <- [78]
  fs              %245.0 = FrameState         R     0x558f3e5d1df0+1484: [], env=e140.0
  void                    Deopt              !v    %245.0, CallTarget@0x558f3afa19c8[Call#12], %78.5   !
BB246   <- [244]
  val?^ | miss    %246.0 = LdVar              eR    vals, e140.0
  lgl$#-          %246.1 = IsType                   %246.0 isA real-
  void                    Branch                   %246.1 -> BB248 (if true) | BB249 (if false)
BB247   <- [244]
  void                    Nop                !     
  val?^ | miss    %247.1 = %244.3
  dr              %247.2 = CallTarget@0x558f3afa19c8[Call#13]
  goto BB81
BB248   <- [246]
  real-           %248.0 = CastType           d     dn %246.0
  val             %248.1 = ChkMissing         e     %244.1
  real-           %248.2 = Extract1_1D        wed   %248.0, %244.1, e140.0   <real->
  real$-          %248.3 = CallSafeBuiltin    wed   sum(%248.2)    <real$->
  (cls|spec|blt)  %248.4 = LdFun              !v    attr<-, <0x558f39da0e08>, e140.0
  val?^ | miss    %248.5 = LdVar              eR    x, e140.0
  val?            %248.6 = Force!<value>      !v    %248.5, e140.0   <vec>
  val?            %248.7 = NamedCall          !v    %248.4(%248.6, "value", value=%248.3) e140.0   <vec>
  void                    StVar              lW    x, %248.7, e140.0
  lgl$#-          %248.9 = IsType                   %248.7 isA val+   <false>
  val             %248.10 = ChkMissing         e     %248.7
  void                    Branch                   %248.9 -> BB251 (if true) | BB250 (if false)
BB249   <- [246]
  void                    Nop                !     
  val?^ | miss    %249.1 = %246.0
  dr              %249.2 = Typecheck@0x558f3afa19c8[Type#65]
  goto BB81
BB81   <- [247, 249]
  val?^ | miss    %81.0 = Phi                      %247.1:BB247, %249.1:BB249
  val?^ | miss    %81.1 = %81.0
  dr              %81.2 = Phi                      %247.2:BB247, %249.2:BB249
  dr              %81.3 = %81.2
  fs              %81.4 = FrameState         R     0x558f3e5d1df0+1530: [], env=e140.0
  void                    Deopt              !v    %81.4, %81.3, %81.1   !
BB251   <- [248]
  fs              %251.0 = FrameState         R     0x558f3e5d1df0+1644: [], env=e140.0
  void                    Deopt              !v    %251.0, DeadBranchReached@0x558f3afa19c8[Test#11], %248.9   !
BB250   <- [248]
  prom-           %250.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p15, e140.0
  val?            %250.1 = Extract1_1D        !v    %248.7, %250.0, e140.0   <vec->
  val?^ | miss    %250.2 = LdVar              eR    x, e140.0
  val?            %250.3 = Force!<value>      !v    %250.2, e140.0   <vec>
  val?            %250.4 = Subassign1_1D      !v    %250.1, %250.3, missingArg, e140.0
  void                    StVar              lW    x, %250.4, e140.0
  goto BB85
BB85   <- [250, 294]
  val?^ | miss    %85.0 = LdVar              eR    depth, e140.0
  val?            %85.1 = Force!<value>      !v    %85.0, e140.0   <int$->
  lgl$#-          %85.2 = CheckTrueFalse     we    %85.1
  void                    Branch                   %85.2 -> BB94 (if true) | BB86 (if false)
BB94   <- [85]
  val?^ | miss    %94.0 = LdVar              eR    x, e140.0
  val?            %94.1 = Force!<value>      !v    %94.0, e140.0   <vec>
  void                    StVar              lW    b, %94.1, e140.0
  val?^ | miss    %94.3 = LdVar              eR    xx, e140.0
  val?            %94.4 = Force!<value>      !v    %94.3, e140.0   <vec->
  lgl$#-          %94.5 = IsType                   %94.4 isA val+   <true>
  lgl$#-          %94.6 = IsType                   %94.4 isA val?-
  void                    Branch                   %94.5 -> BB252 (if true) | BB253 (if false)
BB86   <- [85]
  void                    Nop                !     
  goto BB87
BB252   <- [94]
  val?^ | miss    %252.0 = LdVar              eR    depth, e140.0
  lgl$#-          %252.1 = IsType                   %252.0 isA int$-
  void                    Branch                   %252.1 -> BB254 (if true) | BB255 (if false)
BB253   <- [94]
  void                    Nop                !     
  lgl$#-          %253.1 = %94.5
  dr              %253.2 = DeadBranchReached@0x558f3afa19c8[Test#12]
  goto BB95
BB254   <- [252]
  int$-           %254.0 = CastType           d     dn %252.0
  void                    Branch                   %94.6 -> BB256 (if true) | BB257 (if false)
BB255   <- [252]
  void                    Nop                !     
  val?^ | miss    %255.1 = %252.0
  dr              %255.2 = Typecheck@0x558f3afa19c8[Type#80]
  goto BB95
BB95   <- [253, 255, 257]
  val?^ | miss    %95.0 = Phi                      %253.1:BB253, %255.1:BB255, %257.1:BB257
  val?^ | miss    %95.1 = %95.0
  dr              %95.2 = Phi                      %253.2:BB253, %255.2:BB255, %257.2:BB257
  dr              %95.3 = %95.2
  fs              %95.4 = FrameState         R     0x558f3e5d1df0+1802: [%94.4], env=e140.0
  void                    Deopt              !v    %95.4, %95.3, %95.1   !
BB256   <- [254]
  val?-           %256.0 = CastType           d     dn %94.4   <vec->
  val?            %256.1 = Extract2_1D        wed   %256.0, %254.0, elided   <vec>
  void                    StVar              lW    x, %256.1, e140.0
  val?^ | miss    %256.3 = LdVar              eR    jj, e140.0
  val?            %256.4 = Force!<value>      !v    %256.3, e140.0   <int->
  lgl$#-          %256.5 = IsType                   %256.4 isA val+   <true>
  lgl$#-          %256.6 = IsType                   %256.4 isA int-
  void                    Branch                   %256.5 -> BB258 (if true) | BB259 (if false)
BB257   <- [254]
  void                    Nop                !     
  val?            %257.1 = %94.4
  dr              %257.2 = Typecheck@0x558f3afa19c8[Type#78]
  goto BB95
BB258   <- [256]
  val?^ | miss    %258.0 = LdVar              eR    depth, e140.0
  lgl$#-          %258.1 = IsType                   %258.0 isA int$-
  void                    Branch                   %258.1 -> BB260 (if true) | BB261 (if false)
BB259   <- [256]
  void                    Nop                !     
  lgl$#-          %259.1 = %256.5
  dr              %259.2 = DeadBranchReached@0x558f3afa19c8[Test#13]
  goto BB97
BB260   <- [258]
  int$-           %260.0 = CastType           d     dn %258.0
  void                    Branch                   %256.6 -> BB262 (if true) | BB263 (if false)
BB261   <- [258]
  void                    Nop                !     
  val?^ | miss    %261.1 = %258.0
  dr              %261.2 = Typecheck@0x558f3afa19c8[Type#84]
  goto BB97
BB97   <- [259, 261, 263]
  val?^ | miss    %97.0 = Phi                      %259.1:BB259, %261.1:BB261, %263.1:BB263
  val?^ | miss    %97.1 = %97.0
  dr              %97.2 = Phi                      %259.2:BB259, %261.2:BB261, %263.2:BB263
  dr              %97.3 = %97.2
  fs              %97.4 = FrameState         R     0x558f3e5d1df0+1877: [%256.4], env=e140.0
  void                    Deopt              !v    %97.4, %97.3, %97.1   !
BB262   <- [260]
  int-            %262.0 = CastType           d     dn %256.4
  int-            %262.1 = Extract1_1D        wed   %262.0, %260.0, elided   <int$->
  lgl$#-          %262.2 = IsType                   %262.1 isA int$-
  void                    Branch                   %262.2 -> BB264 (if true) | BB265 (if false)
BB263   <- [260]
  void                    Nop                !     
  val?            %263.1 = %256.4
  dr              %263.2 = Typecheck@0x558f3afa19c8[Type#82]
  goto BB97
BB264   <- [262]
  int$-           %264.0 = CastType           d     dn %262.1
  void                    StVar              lW    j, %264.0, e140.0
  val?^ | miss    %264.2 = LdVar              eR    b, e140.0
  val?            %264.3 = Force!<value>      !v    %264.2, e140.0   <vec>
  val?^ | miss    %264.4 = LdVar              eR    x, e140.0
  val?            %264.5 = Force!<value>      !v    %264.4, e140.0   <vec>
  val?^ | miss    %264.6 = LdVar              eR    j, e140.0
  lgl$#-          %264.7 = IsType                   %264.6 isA int$-
  void                    Branch                   %264.7 -> BB266 (if true) | BB267 (if false)
BB265   <- [262]
  fs              %265.0 = FrameState         R     0x558f3e5d1df0+1928: [%262.1], env=e140.0
  void                    Deopt              !v    %265.0, Typecheck@0x558f3afa19c8[Type#85], %262.1   !
BB266   <- [264]
  int$-           %266.0 = CastType           d     dn %264.6
  val?            %266.1 = Subassign2_1D      !v    %264.3, %264.5, %266.0, e140.0
  void                    StVar              lW    x, %266.1, e140.0
  val?^ | miss    %266.3 = LdVar              eR    j, e140.0
  lgl$#-          %266.4 = IsType                   %266.3 isA int$-
  void                    Branch                   %266.4 -> BB268 (if true) | BB269 (if false)
BB267   <- [264]
  fs              %267.0 = FrameState         R     0x558f3e5d1df0+1966: [%264.3, %264.5], env=e140.0
  void                    Deopt              !v    %267.0, Typecheck@0x558f3afa19c8[Type#88], %264.6   !
BB268   <- [266]
  int$-           %268.0 = CastType           d     dn %266.3
  val?^ | miss    %268.1 = LdVar              eR    kk, e140.0
  val?            %268.2 = Force!<value>      !v    %268.1, e140.0   <int->
  lgl$#-          %268.3 = IsType                   %268.2 isA val+   <true>
  lgl$#-          %268.4 = IsType                   %268.2 isA int-
  void                    Branch                   %268.3 -> BB270 (if true) | BB271 (if false)
BB269   <- [266]
  fs              %269.0 = FrameState         R     0x558f3e5d1df0+1995: [], env=e140.0
  void                    Deopt              !v    %269.0, Typecheck@0x558f3afa19c8[Type#89], %266.3   !
BB270   <- [268]
  val?^ | miss    %270.0 = LdVar              eR    depth, e140.0
  lgl$#-          %270.1 = IsType                   %270.0 isA int$-
  void                    Branch                   %270.1 -> BB272 (if true) | BB273 (if false)
BB271   <- [268]
  void                    Nop                !     
  lgl$#-          %271.1 = %268.3
  dr              %271.2 = DeadBranchReached@0x558f3afa19c8[Test#14]
  goto BB105
BB272   <- [270]
  int$-           %272.0 = CastType           d     dn %270.0
  void                    Branch                   %268.4 -> BB274 (if true) | BB275 (if false)
BB273   <- [270]
  void                    Nop                !     
  val?^ | miss    %273.1 = %270.0
  dr              %273.2 = Typecheck@0x558f3afa19c8[Type#92]
  goto BB105
BB105   <- [271, 273, 275]
  val?^ | miss    %105.0 = Phi                      %271.1:BB271, %273.1:BB273, %275.1:BB275
  val?^ | miss    %105.1 = %105.0
  dr              %105.2 = Phi                      %271.2:BB271, %273.2:BB273, %275.2:BB275
  dr              %105.3 = %105.2
  fs              %105.4 = FrameState         R     0x558f3e5d1df0+2018: [%268.0, %268.2], env=e140.0
  void                    Deopt              !v    %105.4, %105.3, %105.1   !
BB274   <- [272]
  int-            %274.0 = CastType           d     dn %268.2
  int-            %274.1 = Extract1_1D        wed   %274.0, %272.0, elided   <int$->
  lgl$#-          %274.2 = IsType                   %274.1 isA int$-
  void                    Branch                   %274.2 -> BB276 (if true) | BB277 (if false)
BB275   <- [272]
  void                    Nop                !     
  val?            %275.1 = %268.2
  dr              %275.2 = Typecheck@0x558f3afa19c8[Type#90]
  goto BB105
BB276   <- [274]
  int$-           %276.0 = CastType           d     dn %274.1
  lgl$-           %276.1 = Lt                 d     %268.0, %276.0, elided   <lgl$->
  lgl$#-          %276.2 = CheckTrueFalse     e     %276.1
  void                    Branch                   %276.2 -> BB132 (if true) | BB109 (if false)
BB277   <- [274]
  fs              %277.0 = FrameState         R     0x558f3e5d1df0+2069: [%268.0, %274.1], env=e140.0
  void                    Deopt              !v    %277.0, Typecheck@0x558f3afa19c8[Type#93], %274.1   !
BB132   <- [276]
  void                    Nop                !     
  goto BB87
BB109   <- [276]
  int$-           %109.0 = Sub                d     %272.0, 1L, elided   <int$->
  void                    StVar              lW    depth, %109.0, e140.0
  val?^ | miss    %109.2 = LdVar              eR    vapply, e140.0
  lgl$#-          %109.3 = Identical                %109.2, function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...>
  void                    Branch                   %109.3 -> BB278 (if true) | BB279 (if false)
BB278   <- [109]
  prom-           %278.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p16, e140.0
  prom-           %278.1 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p17, e140.0
  prom-           %278.2 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p18, e140.0
  dots-           %278.3 = DotsList           l     which="value"
  ct              %278.4 = PushContext        lCL   %278.0, %278.1, %278.2, %278.3, vapply(x, attr, numeric(1L), which="value"), function(X, FUN, FUN.VALUE, ..., USE.NAMES=TRU|...>, e140.0
  val?^           %278.5 = CastType                 up %278.2
  val?^           %278.6 = CastType                 up %278.1
  val?^           %278.7 = CastType                 up %278.0
  env             e278.8 = MkEnv              l     X=%278.7, FUN=%278.6, FUN.VALUE=%278.5, ...=%278.3, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  val?^ | miss    %278.9 = LdVar              eR    match.fun, e278.8
  lgl$#-          %278.10 = Identical                %278.9, function(FUN, descend=TRUE) <(rir::DispatchTab|...>
  void                    Branch                   %278.10 -> BB280 (if true) | BB281 (if false)
BB279   <- [109]
  fs              %279.0 = FrameState         R     0x558f3e5d1df0+2137: [], env=e140.0
  void                    Deopt              !v    %279.0, CallTarget@0x558f3afa19c8[Call#15], %109.2   !
BB280   <- [278]
  prom-           %280.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p40, e278.8
  val?            %280.1 = StaticCall         !v    match.fun[0x558f3e1fa350](%280.0) e278.8   <(cls|blt)->
  void                    StVar              lW    FUN, %280.1, e278.8
  val?^ | miss    %280.3 = LdVar              eR    is.vector, e278.8
  lgl$#-          %280.4 = Identical                %280.3, function(x, mode="any") <(rir::DispatchTable*)|...>
  void                    Branch                   %280.4 -> BB282 (if true) | BB283 (if false)
BB281   <- [278]
  fs              %281.0 = FrameState         R     0x558f3e5d1df0+2200: [], env=e140.0
  env             e281.1 = (MkEnv)            l     X=%278.7, FUN=%278.6, FUN.VALUE=%278.5, ...=%278.3, USE.NAMES(miss)=true, parent=R_BaseNamespace, context 1
  fs              %281.2 = FrameState         R     0x558f3e12aa00+0: [], env=e281.1, next=%281.0
  void                    Deopt              !v    %281.2, CallTarget@0x558f3e072500[Call#0], %278.9   !
BB282   <- [280]
  val?^ | miss    %282.0 = LdVar              eR    X, e278.8
  val?            %282.1 = Force!<lazy>       !v    %282.0, e278.8   <vec>
  lgl$#-          %282.2 = CallSafeBuiltin    wed   is.vector(%282.1, "any")    <lgl$->
  lgl$#-          %282.3 = Not                d     %282.2, elided
  void                    Branch                   %282.2 -> BB131 (if true) | BB118 (if false)
BB283   <- [280]
  fs              %283.0 = FrameState         R     0x558f3e5d1df0+2200: [], env=e140.0
  fs              %283.1 = FrameState         R     0x558f3e12aa00+46: [], env=e278.8, next=%283.0
  void                    Deopt              !v    %283.1, CallTarget@0x558f3e072500[Call#1], %280.3   !
BB131   <- [282]
  val?^ | miss    %131.0 = LdVar              eR    is.object, e278.8
  lgl$#-          %131.1 = Identical                <blt is.object>, %131.0   <true>
  void                    Branch                   %131.1 -> BB284 (if true) | BB285 (if false)
BB118   <- [282]
  void                    Nop                !     
  lgl$#-          %118.1 = %282.3
  goto BB119
BB284   <- [131]
  val?^ | miss    %284.0 = LdVar              eR    X, e278.8
  val?            %284.1 = Force!<wrapped>    !v    %284.0, e278.8   <vec$->
  lgl$#-          %284.2 = CallSafeBuiltin    wed   is.object(%284.1)    <lgl$->
  lgl$-           %284.3 = LOr                      %282.3, %284.2
  lgl$-           %284.4 = %284.3
  goto BB119
BB285   <- [131]
  fs              %285.0 = FrameState         R     0x558f3e5d1df0+2200: [], env=e140.0
  fs              %285.1 = FrameState         R     0x558f3e12aa00+78: [], env=e278.8, next=%285.0
  prom-           %285.2 = MkArg                    %282.1, oV[0x558f3e4a5910]_p41 (!refl), e278.8
  val?~           %285.3 = CastType                 up %285.2
  env             e285.4 = (MkEnv)            l     mode(miss)="any", x=%285.3, parent=R_BaseNamespace, context 0
  fs              %285.5 = FrameState         R     0x558f3e0dd2f0+41: [%282.2], env=e285.4, next=%285.1
  void                    Deopt              !v    %285.5, DeadBranchReached@0x558f3e072500[Test#0], %131.1   !
BB119   <- [118, 284]
  lgl$-           %119.0 = Phi                      %284.4:BB284, %118.1:BB118
  lgl$-           %119.1 = %119.0
  lgl$#-          %119.2 = CheckTrueFalse     e     %119.1
  void                    Branch                   %119.2 -> BB130 (if true) | BB122 (if false)
BB130   <- [119]
  val?^ | miss    %130.0 = LdVar              eR    as.list, e278.8
  lgl$#-          %130.1 = Identical                %130.0, function(x, ...) <(rir::DispatchTable*)0x558f3|...>
  void                    Branch                   %130.1 -> BB286 (if true) | BB287 (if false)
BB122   <- [119]
  void                    Nop                !     
  goto BB123
BB286   <- [130]
  val?^ | miss    %286.0 = LdVar              eR    X, e278.8
  val?            %286.1 = Force!<wrapped>    !v    %286.0, e278.8   <vec>
  val?            %286.2 = StaticCall         !v    as.list[0x558f3e18f050](%286.1) { 0 } e278.8   <vec>
  void                    StVar              lW    X, %286.2, e278.8
  goto BB123
BB287   <- [130]
  fs              %287.0 = FrameState         R     0x558f3e5d1df0+2200: [], env=e140.0
  fs              %287.1 = FrameState         R     0x558f3e12aa00+189: [%119.1], env=e278.8, next=%287.0
  void                    Deopt              !v    %287.1, CallTarget@0x558f3e072500[Call#3], %130.0   !
BB123   <- [122, 286]
  (cls|spec|blt)  %123.0 = LdFun              !v    .Internal, <0x558f39d9c698>, e278.8
  prom-           %123.1 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p42, e278.8
  val?            %123.2 = Call               !v    %123.0(%123.1) e278.8   <(lgl|real)->
  val?            %123.3 = PopContext         C     %123.2, %278.4   <real->
  void                    StVar              lW    vals, %123.3, e140.0
  val?^ | miss    %123.5 = LdVar              eR    sort.list, e140.0
  lgl$#-          %123.6 = Identical                %123.5, function(x, partial=NULL, na.last=TRUE, decrea|...>
  void                    Branch                   %123.6 -> BB288 (if true) | BB289 (if false)
BB288   <- [123]
  prom-           %288.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p19 (!refl), e140.0
  val?            %288.1 = Call               !v    function(x, partial=NULL, na.last=TRUE, decrea|...>(%288.0) e140.0   <int->
  void                    StVar              lW    iOrd, %288.1, e140.0
  val?^ | miss    %288.3 = LdVar              eR    agglo.FUN, e140.0
  lgl$#-          %288.4 = Identical                %288.3, <blt sum>
  void                    Branch                   %288.4 -> BB290 (if true) | BB291 (if false)
BB289   <- [123]
  fs              %289.0 = FrameState         R     0x558f3e5d1df0+2214: [], env=e140.0
  void                    Deopt              !v    %289.0, CallTarget@0x558f3afa19c8[Call#17], %123.5   !
BB290   <- [288]
  val?^ | miss    %290.0 = LdVar              eR    vals, e140.0
  lgl$#-          %290.1 = IsType                   %290.0 isA real-
  void                    Branch                   %290.1 -> BB292 (if true) | BB293 (if false)
BB291   <- [288]
  void                    Nop                !     
  val?^ | miss    %291.1 = %288.3
  dr              %291.2 = CallTarget@0x558f3afa19c8[Call#18]
  goto BB126
BB292   <- [290]
  real-           %292.0 = CastType           d     dn %290.0
  val             %292.1 = ChkMissing         e     %288.1
  real-           %292.2 = Extract1_1D        wed   %292.0, %288.1, e140.0   <real->
  real$-          %292.3 = CallSafeBuiltin    wed   sum(%292.2)    <real$->
  (cls|spec|blt)  %292.4 = LdFun              !v    attr<-, <0x558f39da0e08>, e140.0
  val?^ | miss    %292.5 = LdVar              eR    x, e140.0
  val?            %292.6 = Force!<value>      !v    %292.5, e140.0   <vec>
  val?            %292.7 = NamedCall          !v    %292.4(%292.6, "value", value=%292.3) e140.0   <vec>
  void                    StVar              lW    x, %292.7, e140.0
  lgl$#-          %292.9 = IsType                   %292.7 isA val+   <false>
  val             %292.10 = ChkMissing         e     %292.7
  void                    Branch                   %292.9 -> BB295 (if true) | BB294 (if false)
BB293   <- [290]
  void                    Nop                !     
  val?^ | miss    %293.1 = %290.0
  dr              %293.2 = Typecheck@0x558f3afa19c8[Type#103]
  goto BB126
BB126   <- [291, 293]
  val?^ | miss    %126.0 = Phi                      %291.1:BB291, %293.1:BB293
  val?^ | miss    %126.1 = %126.0
  dr              %126.2 = Phi                      %291.2:BB291, %293.2:BB293
  dr              %126.3 = %126.2
  fs              %126.4 = FrameState         R     0x558f3e5d1df0+2260: [], env=e140.0
  void                    Deopt              !v    %126.4, %126.3, %126.1   !
BB295   <- [292]
  fs              %295.0 = FrameState         R     0x558f3e5d1df0+2374: [], env=e140.0
  void                    Deopt              !v    %295.0, DeadBranchReached@0x558f3afa19c8[Test#16], %292.9   !
BB294   <- [292]
  prom-           %294.0 = MkArg                    unboundValue, oV[0x558f3e4a5910]_p26, e140.0
  val?            %294.1 = Extract1_1D        !v    %292.7, %294.0, e140.0   <vec->
  val?^ | miss    %294.2 = LdVar              eR    x, e140.0
  val?            %294.3 = Force!<value>      !v    %294.2, e140.0   <vec>
  val?            %294.4 = Subassign1_1D      !v    %294.1, %294.3, missingArg, e140.0
  void                    StVar              lW    x, %294.4, e140.0
  goto BB85
Prom 0:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(int|vec)>
  void                    Return             l     %0.3
Prom 1:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    jj, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 2:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    kk, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 3:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    jj, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int->
  val?^ | miss    %0.3  = LdVar              eR    depth, e0.0
  val?            %0.4  = Force<value>       !v    %0.3, e0.0   <int$->
  val?            %0.5  = Subassign1_1D      wed   1L, %0.2, %0.4, e0.0
  void                    StVar              lW    jj, %0.5, e0.0
  void                    Invisible          v     
  void                    Return             l     1L
Prom 5:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 6:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <blt->
  void                    Return             l     %0.3
Prom 7:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     numeric, <0x558f3e25db00>, e0.0
  val?            %0.2  = Call               !     %0.1(1L) e0.0   <real$->
  void                    Return             l     %0.2
Prom 8:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vals, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 15:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    iOrd, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 16:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    x, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 17:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    attr, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <blt->
  void                    Return             l     %0.3
Prom 18:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     numeric, <0x558f3e25db00>, e0.0
  val?            %0.2  = Call               !     %0.1(1L) e0.0   <real$->
  void                    Return             l     %0.2
Prom 19:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    vals, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <real->
  void                    Return             l     %0.3
Prom 26:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    iOrd, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<value>       !     %0.1, e0.0   <int->
  void                    Return             l     %0.3
Prom 27:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    j, e0.0
  val?            %0.2  = Force<value>       !v    %0.1, e0.0   <int$->
  val?            %0.3  = Add                !v    %0.2, 1L, e0.0   <int$->
  val?^ | miss    %0.4  = LdVar              eR    jj, e0.0
  val?            %0.5  = Force<value>       !v    %0.4, e0.0   <int->
  val?^ | miss    %0.6  = LdVar              eR    depth, e0.0
  val?            %0.7  = Force<value>       !v    %0.6, e0.0   <int$->
  val?            %0.8  = Subassign1_1D      !v    %0.3, %0.5, %0.7, e0.0
  void                    StVar              lW    jj, %0.8, e0.0
  void                    Invisible          v     
  void                    Return             l     %0.3
Prom 32:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)->
  void                    Return             l     %0.3
Prom 33:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 34:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, e0.0
  prom-           %0.2  = MkArg                    unboundValue, oV[0x558f3e4a5910]_p35, e0.0
  prom-           %0.3  = MkArg                    unboundValue, oV[0x558f3e4a5910]_p36, e0.0
  prom-           %0.4  = MkArg                    unboundValue, oV[0x558f3e4a5910]_p37, e0.0
  prom-           %0.5  = MkArg                    unboundValue, oV[0x558f3e4a5910]_p38, e0.0
  val?            %0.6  = Call               !     %0.1(%0.2, %0.3, %0.4, %0.5) e0.0   <val?_>
  void                    Return             l     %0.6
Prom 35:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 36:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 37:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN.VALUE, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 38:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    USE.NAMES, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 40:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <(cls|blt)->
  void                    Return             l     %0.3
Prom 41:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force<lazy>        !     %0.1, e0.0   <vec>
  void                    Return             l     %0.3
Prom 42:
BB0
  env             e0.0  = LdFunctionEnv            
  (cls|spec|blt)  %0.1  = LdFun              !     vapply, e0.0
  prom-           %0.2  = MkArg                    unboundValue, oV[0x558f3e4a5910]_p43, e0.0
  prom-           %0.3  = MkArg                    unboundValue, oV[0x558f3e4a5910]_p44, e0.0
  prom-           %0.4  = MkArg                    unboundValue, oV[0x558f3e4a5910]_p45, e0.0
  prom-           %0.5  = MkArg                    unboundValue, oV[0x558f3e4a5910]_p46, e0.0
  val?            %0.6  = Call               !     %0.1(%0.2, %0.3, %0.4, %0.5) e0.0   <val?_>
  void                    Return             l     %0.6
Prom 43:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    X, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 44:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 45:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    FUN.VALUE, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3
Prom 46:
BB0
  env             e0.0  = LdFunctionEnv            
  val?^ | miss    %0.1  = LdVar              eR    USE.NAMES, e0.0
  void                    Visible            v     
  val?            %0.3  = Force              !     %0.1, e0.0   <val?_>
  void                    Return             l     %0.3

│ oV[0x558f3e4a5910]                                                           │
└──────────────────────────────────────────────────────────────────────────────┘
